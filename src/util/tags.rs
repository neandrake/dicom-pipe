#![allow(dead_code)]
#![allow(non_upper_case_globals)]

use std::fmt;
use std::hash::{Hash, Hasher};

use util::vr;


pub enum TagValue {
    Undefined(u32),
    Defined(&'static Tag),
}

impl fmt::UpperHex for TagValue {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match *self {
            TagValue::Undefined(num) => {
                write!(f, "0x{:08X}", num)
            },
            TagValue::Defined(tag) => {
                write!(f, "0x{:08X}", tag.tag)
            }
        }
    }
}

impl fmt::LowerHex for TagValue {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match *self {
            TagValue::Undefined(num) => {
                write!(f, "0x{:08x}", num)
            },
            TagValue::Defined(tag) => {
                write!(f, "0x{:08x}", tag.tag)
            }
        }
    }
}

/// Value Multiplicity
#[derive(Debug, PartialEq, Eq)]
pub enum VM {
    /// 1 or 1-n (not sure how this is different from 1-n)
    OneOrOneOrMore,
    /// 1, 2, 3, etc.
    N(u32),
    /// 1-2, etc.
    MToN(u32, u32),
    /// 1-n, 2-n, 3-n, NOrMore(6), etc.
    NOrMore(u32),
    /// 2-2n, 3-3n, etc.
    MultipleOfN(u32),
}

#[derive(Debug, Eq)]
pub struct Tag {
    ident: &'static str,
    tag: u32,
    default_vr: Option<&'static vr::VR>,
    vm: VM,
    desc: &'static str,
}

impl Tag {
    pub fn get_ident(&self) -> &'static str {
        self.ident
    }

    pub fn get_tag(&self) -> u32 {
        self.tag
    }

    pub fn get_default_vr(&self) -> Option<&'static vr::VR> {
        self.default_vr
    }

    pub fn get_vm(&self) -> &VM {
        &self.vm
    }
}

impl PartialEq for Tag {
    fn eq(&self, other: &Tag) -> bool {
        self.tag.eq(&other.tag)
    }
}

impl Hash for Tag {
    fn hash<H: Hasher>(&self, state: &mut H) {
        self.tag.hash(state);
    }
}

macro_rules! define_tag {
    ($tag:expr, $tagval:expr, $tagtitle:expr, $tagname:ident, Option::None, $tagvm:expr) => {
        /// $tag, $tagtitle, $tagvr, $tagvm
        pub static $tagname: Tag = Tag {
            ident: "$tagname",
            tag: $tagval,
            default_vr: Option::None,
            vm: $tagvm,
            desc: $tagtitle,
        };
    };

    ($tag:expr, $tagval:expr, $tagtitle:expr, $tagname:ident, $tagvr:ident, $tagvm:expr) => {
        /// $tag, $tagtitle, $tagvr, $tagvm
        pub static $tagname: Tag = Tag {
            ident: "$tagname",
            tag: $tagval,
            default_vr: Option::Some(&vr::$tagvr),
            vm: $tagvm,
            desc: $tagtitle,
        };
    };
}

/* DICOM File Meta Elements (Part 6, 7) */

define_tag!("(0002,0000)",0x00020000,"File Meta Information Group Length",FileMetaInformationGroupLength,UL,VM::N(1));
define_tag!("(0002,0001)",0x00020001,"File Meta Information Version",FileMetaInformationVersion,OB,VM::N(1));
define_tag!("(0002,0002)",0x00020002,"Media Storage SOP Class UID",MediaStorageSOPClassUID,UI,VM::N(1));
define_tag!("(0002,0003)",0x00020003,"Media Storage SOP Instance UID",MediaStorageSOPInstanceUID,UI,VM::N(1));
define_tag!("(0002,0010)",0x00020010,"Transfer Syntax UID",TransferSyntaxUID,UI,VM::N(1));
define_tag!("(0002,0012)",0x00020012,"Implementation Class UID",ImplementationClassUID,UI,VM::N(1));
define_tag!("(0002,0013)",0x00020013,"Implementation Version Name",ImplementationVersionName,SH,VM::N(1));
define_tag!("(0002,0016)",0x00020016,"Source Application Entity Title",SourceApplicationEntityTitle,AE,VM::N(1));
define_tag!("(0002,0017)",0x00020017,"Sending Application Entity Title",SendingApplicationEntityTitle,AE,VM::N(1));
define_tag!("(0002,0018)",0x00020018,"Receiving Application Entity Title",ReceivingApplicationEntityTitle,AE,VM::N(1));
define_tag!("(0002,0100)",0x00020100,"Private Information Creator UID",PrivateInformationCreatorUID,UI,VM::N(1));
define_tag!("(0002,0102)",0x00020102,"Private Information",PrivateInformation,OB,VM::N(1));

/* DICOM Data Elements (Part 6, 6) */

define_tag!("(0008,0001)",0x00080001,"Length to End",LengthToEnd,UL,VM::N(1));
define_tag!("(0008,0005)",0x00080005,"Specific Character Set",SpecificCharacterSet,CS,VM::NOrMore(1));
define_tag!("(0008,0006)",0x00080006,"Language Code Sequence",LanguageCodeSequence,SQ,VM::N(1));
define_tag!("(0008,0008)",0x00080008,"Image Type",ImageType,CS,VM::NOrMore(2));
define_tag!("(0008,0010)",0x00080010,"Recognition Code",RecognitionCode,SH,VM::N(1));
define_tag!("(0008,0012)",0x00080012,"Instance Creation Date",InstanceCreationDate,DA,VM::N(1));
define_tag!("(0008,0013)",0x00080013,"Instance Creation Time",InstanceCreationTime,TM,VM::N(1));
define_tag!("(0008,0014)",0x00080014,"Instance Creator UID",InstanceCreatorUID,UI,VM::N(1));
define_tag!("(0008,0015)",0x00080015,"Instance Coercion DateTime",InstanceCoercionDateTime,DT,VM::N(1));
define_tag!("(0008,0016)",0x00080016,"SOP Class UID",SOPClassUID,UI,VM::N(1));
define_tag!("(0008,0018)",0x00080018,"SOP Instance UID",SOPInstanceUID,UI,VM::N(1));
define_tag!("(0008,001A)",0x0008001A,"Related General SOP Class UID",RelatedGeneralSOPClassUID,UI,VM::NOrMore(1));
define_tag!("(0008,001B)",0x0008001B,"Original Specialized SOP Class UID",OriginalSpecializedSOPClassUID,UI,VM::N(1));
define_tag!("(0008,0020)",0x00080020,"Study Date",StudyDate,DA,VM::N(1));
define_tag!("(0008,0021)",0x00080021,"Series Date",SeriesDate,DA,VM::N(1));
define_tag!("(0008,0022)",0x00080022,"Acquisition Date",AcquisitionDate,DA,VM::N(1));
define_tag!("(0008,0023)",0x00080023,"Content Date",ContentDate,DA,VM::N(1));
define_tag!("(0008,0024)",0x00080024,"Overlay Date",OverlayDate,DA,VM::N(1));
define_tag!("(0008,0025)",0x00080025,"Curve Date",CurveDate,DA,VM::N(1));
define_tag!("(0008,002A)",0x0008002A,"Acquisition DateTime",AcquisitionDateTime,DT,VM::N(1));
define_tag!("(0008,0030)",0x00080030,"Study Time",StudyTime,TM,VM::N(1));
define_tag!("(0008,0031)",0x00080031,"Series Time",SeriesTime,TM,VM::N(1));
define_tag!("(0008,0032)",0x00080032,"Acquisition Time",AcquisitionTime,TM,VM::N(1));
define_tag!("(0008,0033)",0x00080033,"Content Time",ContentTime,TM,VM::N(1));
define_tag!("(0008,0034)",0x00080034,"Overlay Time",OverlayTime,TM,VM::N(1));
define_tag!("(0008,0035)",0x00080035,"Curve Time",CurveTime,TM,VM::N(1));
define_tag!("(0008,0040)",0x00080040,"Data Set Type",DataSetType,US,VM::N(1));
define_tag!("(0008,0041)",0x00080041,"Data Set Subtype",DataSetSubtype,LO,VM::N(1));
define_tag!("(0008,0042)",0x00080042,"Nuclear Medicine Series Type",NuclearMedicineSeriesType,CS,VM::N(1));
define_tag!("(0008,0050)",0x00080050,"Accession Number",AccessionNumber,SH,VM::N(1));
define_tag!("(0008,0051)",0x00080051,"Issuer of Accession Number Sequence",IssuerOfAccessionNumberSequence,SQ,VM::N(1));
define_tag!("(0008,0052)",0x00080052,"Query/Retrieve Level",QueryRetrieveLevel,CS,VM::N(1));
define_tag!("(0008,0053)",0x00080053,"Query/Retrieve View",QueryRetrieveView,CS,VM::N(1));
define_tag!("(0008,0054)",0x00080054,"Retrieve AE Title",RetrieveAETitle,AE,VM::NOrMore(1));
define_tag!("(0008,0055)",0x00080055,"Station AE Title",StationAETitle,AE,VM::N(1));
define_tag!("(0008,0056)",0x00080056,"Instance Availability",InstanceAvailability,CS,VM::N(1));
define_tag!("(0008,0058)",0x00080058,"Failed SOP Instance UID List",FailedSOPInstanceUIDList,UI,VM::NOrMore(1));
define_tag!("(0008,0060)",0x00080060,"Modality",Modality,CS,VM::N(1));
define_tag!("(0008,0061)",0x00080061,"Modalities in Study",ModalitiesInStudy,CS,VM::NOrMore(1));
define_tag!("(0008,0062)",0x00080062,"SOP Classes in Study",SOPClassesInStudy,UI,VM::NOrMore(1));
define_tag!("(0008,0064)",0x00080064,"Conversion Type",ConversionType,CS,VM::N(1));
define_tag!("(0008,0068)",0x00080068,"Presentation Intent Type",PresentationIntentType,CS,VM::N(1));
define_tag!("(0008,0070)",0x00080070,"Manufacturer",Manufacturer,LO,VM::N(1));
define_tag!("(0008,0080)",0x00080080,"Institution Name",InstitutionName,LO,VM::N(1));
define_tag!("(0008,0081)",0x00080081,"Institution Address",InstitutionAddress,ST,VM::N(1));
define_tag!("(0008,0082)",0x00080082,"Institution Code Sequence",InstitutionCodeSequence,SQ,VM::N(1));
define_tag!("(0008,0090)",0x00080090,"Referring Physician's Name",ReferringPhysicianName,PN,VM::N(1));
define_tag!("(0008,0092)",0x00080092,"Referring Physician's Address",ReferringPhysicianAddress,ST,VM::N(1));
define_tag!("(0008,0094)",0x00080094,"Referring Physician's Telephone Numbers",ReferringPhysicianTelephoneNumbers,SH,VM::NOrMore(1));
define_tag!("(0008,0096)",0x00080096,"Referring Physician Identification Sequence",ReferringPhysicianIdentificationSequence,SQ,VM::N(1));
define_tag!("(0008,009C)",0x0008009C,"Consulting Physician's Name",ConsultingPhysicianName,PN,VM::NOrMore(1));
define_tag!("(0008,009D)",0x0008009D,"Consulting Physician Identification Sequence",ConsultingPhysicianIdentificationSequence,SQ,VM::N(1));
define_tag!("(0008,0100)",0x00080100,"Code Value",CodeValue,SH,VM::N(1));
define_tag!("(0008,0101)",0x00080101,"Extended Code Value",ExtendedCodeValue,LO,VM::N(1));
define_tag!("(0008,0102)",0x00080102,"Coding Scheme Designator",CodingSchemeDesignator,SH,VM::N(1));
define_tag!("(0008,0103)",0x00080103,"Coding Scheme Version",CodingSchemeVersion,SH,VM::N(1));
define_tag!("(0008,0104)",0x00080104,"Code Meaning",CodeMeaning,LO,VM::N(1));
define_tag!("(0008,0105)",0x00080105,"Mapping Resource",MappingResource,CS,VM::N(1));
define_tag!("(0008,0106)",0x00080106,"Context Group Version",ContextGroupVersion,DT,VM::N(1));
define_tag!("(0008,0107)",0x00080107,"Context Group Local Version",ContextGroupLocalVersion,DT,VM::N(1));
define_tag!("(0008,0108)",0x00080108,"Extended Code Meaning",ExtendedCodeMeaning,LT,VM::N(1));
define_tag!("(0008,010B)",0x0008010B,"Context Group Extension Flag",ContextGroupExtensionFlag,CS,VM::N(1));
define_tag!("(0008,010C)",0x0008010C,"Coding Scheme UID",CodingSchemeUID,UI,VM::N(1));
define_tag!("(0008,010D)",0x0008010D,"Context Group Extension Creator UID",ContextGroupExtensionCreatorUID,UI,VM::N(1));
define_tag!("(0008,010F)",0x0008010F,"Context Identifier",ContextIdentifier,CS,VM::N(1));
define_tag!("(0008,0110)",0x00080110,"Coding Scheme Identification Sequence",CodingSchemeIdentificationSequence,SQ,VM::N(1));
define_tag!("(0008,0112)",0x00080112,"Coding Scheme Registry",CodingSchemeRegistry,LO,VM::N(1));
define_tag!("(0008,0114)",0x00080114,"Coding Scheme External ID",CodingSchemeExternalID,ST,VM::N(1));
define_tag!("(0008,0115)",0x00080115,"Coding Scheme Name",CodingSchemeName,ST,VM::N(1));
define_tag!("(0008,0116)",0x00080116,"Coding Scheme Responsible Organization",CodingSchemeResponsibleOrganization,ST,VM::N(1));
define_tag!("(0008,0117)",0x00080117,"Context UID",ContextUID,UI,VM::N(1));
define_tag!("(0008,0118)",0x00080118,"Mapping Resource UID",MappingResourceUID,UI,VM::N(1));
define_tag!("(0008,0119)",0x00080119,"Long Code Value",LongCodeValue,UC,VM::N(1));
define_tag!("(0008,0120)",0x00080120,"URN Code Value",URNCodeValue,UR,VM::N(1));
define_tag!("(0008,0121)",0x00080121,"Equivalent Code Sequence",EquivalentCodeSequence,SQ,VM::N(1));
define_tag!("(0008,0122)",0x00080122,"Mapping Resource Name",MappingResourceName,LO,VM::N(1));
define_tag!("(0008,0123)",0x00080123,"Context Group Identification Sequence",ContextGroupIdentificationSequence,SQ,VM::N(1));
define_tag!("(0008,0124)",0x00080124,"Mapping Resource Identification Sequence",MappingResourceIdentificationSequence,SQ,VM::N(1));
define_tag!("(0008,0201)",0x00080201,"Timezone Offset From UTC",TimezoneOffsetFromUTC,SH,VM::N(1));
define_tag!("(0008,0300)",0x00080300,"Private Data Element Characteristics Sequence",PrivateDataElementCharacteristicsSequence,SQ,VM::N(1));
define_tag!("(0008,0301)",0x00080301,"Private Group Reference",PrivateGroupReference,US,VM::N(1));
define_tag!("(0008,0302)",0x00080302,"Private Creator Reference",PrivateCreatorReference,LO,VM::N(1));
define_tag!("(0008,0303)",0x00080303,"Block Identifying Information Status",BlockIdentifyingInformationStatus,CS,VM::N(1));
define_tag!("(0008,0304)",0x00080304,"Nonidentifying Private Elements",NonidentifyingPrivateElements,US,VM::NOrMore(1));
define_tag!("(0008,0306)",0x00080306,"Identifying Private Elements",IdentifyingPrivateElements,US,VM::NOrMore(1));
define_tag!("(0008,0305)",0x00080305,"Deidentification Action Sequence",DeidentificationActionSequence,SQ,VM::N(1));
define_tag!("(0008,0307)",0x00080307,"Deidentification Action",DeidentificationAction,CS,VM::N(1));
define_tag!("(0008,1000)",0x00081000,"Network ID",NetworkID,AE,VM::N(1));
define_tag!("(0008,1010)",0x00081010,"Station Name",StationName,SH,VM::N(1));
define_tag!("(0008,1030)",0x00081030,"Study Description",StudyDescription,LO,VM::N(1));
define_tag!("(0008,1032)",0x00081032,"Procedure Code Sequence",ProcedureCodeSequence,SQ,VM::N(1));
define_tag!("(0008,103E)",0x0008103E,"Series Description",SeriesDescription,LO,VM::N(1));
define_tag!("(0008,103F)",0x0008103F,"Series Description Code Sequence",SeriesDescriptionCodeSequence,SQ,VM::N(1));
define_tag!("(0008,1040)",0x00081040,"Institutional Department Name",InstitutionalDepartmentName,LO,VM::N(1));
define_tag!("(0008,1048)",0x00081048,"Physician(s) of Record",PhysiciansOfRecord,PN,VM::NOrMore(1));
define_tag!("(0008,1049)",0x00081049,"Physician(s) of Record Identification Sequence",PhysiciansOfRecordIdentificationSequence,SQ,VM::N(1));
define_tag!("(0008,1050)",0x00081050,"Performing Physician's Name",PerformingPhysicianName,PN,VM::NOrMore(1));
define_tag!("(0008,1052)",0x00081052,"Performing Physician Identification Sequence",PerformingPhysicianIdentificationSequence,SQ,VM::N(1));
define_tag!("(0008,1060)",0x00081060,"Name of Physician(s) Reading Study",NameOfPhysiciansReadingStudy,PN,VM::NOrMore(1));
define_tag!("(0008,1062)",0x00081062,"Physician(s) Reading Study Identification Sequence",PhysiciansReadingStudyIdentificationSequence,SQ,VM::N(1));
define_tag!("(0008,1070)",0x00081070,"Operators' Name",OperatorsName,PN,VM::NOrMore(1));
define_tag!("(0008,1072)",0x00081072,"Operator Identification Sequence",OperatorIdentificationSequence,SQ,VM::N(1));
define_tag!("(0008,1080)",0x00081080,"Admitting Diagnoses Description",AdmittingDiagnosesDescription,LO,VM::NOrMore(1));
define_tag!("(0008,1084)",0x00081084,"Admitting Diagnoses Code Sequence",AdmittingDiagnosesCodeSequence,SQ,VM::N(1));
define_tag!("(0008,1090)",0x00081090,"Manufacturer's Model Name",ManufacturerModelName,LO,VM::N(1));
define_tag!("(0008,1100)",0x00081100,"Referenced Results Sequence",ReferencedResultsSequence,SQ,VM::N(1));
define_tag!("(0008,1110)",0x00081110,"Referenced Study Sequence",ReferencedStudySequence,SQ,VM::N(1));
define_tag!("(0008,1111)",0x00081111,"Referenced Performed Procedure Step Sequence",ReferencedPerformedProcedureStepSequence,SQ,VM::N(1));
define_tag!("(0008,1115)",0x00081115,"Referenced Series Sequence",ReferencedSeriesSequence,SQ,VM::N(1));
define_tag!("(0008,1120)",0x00081120,"Referenced Patient Sequence",ReferencedPatientSequence,SQ,VM::N(1));
define_tag!("(0008,1125)",0x00081125,"Referenced Visit Sequence",ReferencedVisitSequence,SQ,VM::N(1));
define_tag!("(0008,1130)",0x00081130,"Referenced Overlay Sequence",ReferencedOverlaySequence,SQ,VM::N(1));
define_tag!("(0008,1134)",0x00081134,"Referenced Stereometric Instance Sequence",ReferencedStereometricInstanceSequence,SQ,VM::N(1));
define_tag!("(0008,113A)",0x0008113A,"Referenced Waveform Sequence",ReferencedWaveformSequence,SQ,VM::N(1));
define_tag!("(0008,1140)",0x00081140,"Referenced Image Sequence",ReferencedImageSequence,SQ,VM::N(1));
define_tag!("(0008,1145)",0x00081145,"Referenced Curve Sequence",ReferencedCurveSequence,SQ,VM::N(1));
define_tag!("(0008,114A)",0x0008114A,"Referenced Instance Sequence",ReferencedInstanceSequence,SQ,VM::N(1));
define_tag!("(0008,114B)",0x0008114B,"Referenced Real World Value Mapping Instance Sequence",ReferencedRealWorldValueMappingInstanceSequence,SQ,VM::N(1));
define_tag!("(0008,1150)",0x00081150,"Referenced SOP Class UID",ReferencedSOPClassUID,UI,VM::N(1));
define_tag!("(0008,1155)",0x00081155,"Referenced SOP Instance UID",ReferencedSOPInstanceUID,UI,VM::N(1));
define_tag!("(0008,115A)",0x0008115A,"SOP Classes Supported",SOPClassesSupported,UI,VM::NOrMore(1));
define_tag!("(0008,1160)",0x00081160,"Referenced Frame Number",ReferencedFrameNumber,IS,VM::NOrMore(1));
define_tag!("(0008,1161)",0x00081161,"Simple Frame List",SimpleFrameList,UL,VM::NOrMore(1));
define_tag!("(0008,1162)",0x00081162,"Calculated Frame List",CalculatedFrameList,UL,VM::MultipleOfN(3));
define_tag!("(0008,1163)",0x00081163,"Time Range",TimeRange,FD,VM::N(2));
define_tag!("(0008,1164)",0x00081164,"Frame Extraction Sequence",FrameExtractionSequence,SQ,VM::N(1));
define_tag!("(0008,1167)",0x00081167,"Multi-frame Source SOP Instance UID",MultiFrameSourceSOPInstanceUID,UI,VM::N(1));
define_tag!("(0008,1190)",0x00081190,"Retrieve URL",RetrieveURL,UR,VM::N(1));
define_tag!("(0008,1195)",0x00081195,"Transaction UID",TransactionUID,UI,VM::N(1));
define_tag!("(0008,1196)",0x00081196,"Warning Reason",WarningReason,US,VM::N(1));
define_tag!("(0008,1197)",0x00081197,"Failure Reason",FailureReason,US,VM::N(1));
define_tag!("(0008,1198)",0x00081198,"Failed SOP Sequence",FailedSOPSequence,SQ,VM::N(1));
define_tag!("(0008,1199)",0x00081199,"Referenced SOP Sequence",ReferencedSOPSequence,SQ,VM::N(1));
define_tag!("(0008,119A)",0x0008119A,"Other Failures Sequence",OtherFailuresSequence,SQ,VM::N(1));
define_tag!("(0008,1200)",0x00081200,"Studies Containing Other Referenced Instances Sequence",StudiesContainingOtherReferencedInstancesSequence,SQ,VM::N(1));
define_tag!("(0008,1250)",0x00081250,"Related Series Sequence",RelatedSeriesSequence,SQ,VM::N(1));
define_tag!("(0008,2110)",0x00082110,"Lossy Image Compression (Retired)",LossyImageCompressionRetired,CS,VM::N(1));
define_tag!("(0008,2111)",0x00082111,"Derivation Description",DerivationDescription,ST,VM::N(1));
define_tag!("(0008,2112)",0x00082112,"Source Image Sequence",SourceImageSequence,SQ,VM::N(1));
define_tag!("(0008,2120)",0x00082120,"Stage Name",StageName,SH,VM::N(1));
define_tag!("(0008,2122)",0x00082122,"Stage Number",StageNumber,IS,VM::N(1));
define_tag!("(0008,2124)",0x00082124,"Number of Stages",NumberOfStages,IS,VM::N(1));
define_tag!("(0008,2127)",0x00082127,"View Name",ViewName,SH,VM::N(1));
define_tag!("(0008,2128)",0x00082128,"View Number",ViewNumber,IS,VM::N(1));
define_tag!("(0008,2129)",0x00082129,"Number of Event Timers",NumberOfEventTimers,IS,VM::N(1));
define_tag!("(0008,212A)",0x0008212A,"Number of Views in Stage",NumberOfViewsInStage,IS,VM::N(1));
define_tag!("(0008,2130)",0x00082130,"Event Elapsed Time(s)",EventElapsedTimes,DS,VM::NOrMore(1));
define_tag!("(0008,2132)",0x00082132,"Event Timer Name(s)",EventTimerNames,LO,VM::NOrMore(1));
define_tag!("(0008,2133)",0x00082133,"Event Timer Sequence",EventTimerSequence,SQ,VM::N(1));
define_tag!("(0008,2134)",0x00082134,"Event Time Offset",EventTimeOffset,FD,VM::N(1));
define_tag!("(0008,2135)",0x00082135,"Event Code Sequence",EventCodeSequence,SQ,VM::N(1));
define_tag!("(0008,2142)",0x00082142,"Start Trim",StartTrim,IS,VM::N(1));
define_tag!("(0008,2143)",0x00082143,"Stop Trim",StopTrim,IS,VM::N(1));
define_tag!("(0008,2144)",0x00082144,"Recommended Display Frame Rate",RecommendedDisplayFrameRate,IS,VM::N(1));
define_tag!("(0008,2200)",0x00082200,"Transducer Position",TransducerPosition,CS,VM::N(1));
define_tag!("(0008,2204)",0x00082204,"Transducer Orientation",TransducerOrientation,CS,VM::N(1));
define_tag!("(0008,2208)",0x00082208,"Anatomic Structure",AnatomicStructure,CS,VM::N(1));
define_tag!("(0008,2218)",0x00082218,"Anatomic Region Sequence",AnatomicRegionSequence,SQ,VM::N(1));
define_tag!("(0008,2220)",0x00082220,"Anatomic Region Modifier Sequence",AnatomicRegionModifierSequence,SQ,VM::N(1));
define_tag!("(0008,2228)",0x00082228,"Primary Anatomic Structure Sequence",PrimaryAnatomicStructureSequence,SQ,VM::N(1));
define_tag!("(0008,2229)",0x00082229,"Anatomic Structure, Space or Region Sequence",AnatomicStructureSpaceOrRegionSequence,SQ,VM::N(1));
define_tag!("(0008,2230)",0x00082230,"Primary Anatomic Structure Modifier Sequence",PrimaryAnatomicStructureModifierSequence,SQ,VM::N(1));
define_tag!("(0008,2240)",0x00082240,"Transducer Position Sequence",TransducerPositionSequence,SQ,VM::N(1));
define_tag!("(0008,2242)",0x00082242,"Transducer Position Modifier Sequence",TransducerPositionModifierSequence,SQ,VM::N(1));
define_tag!("(0008,2244)",0x00082244,"Transducer Orientation Sequence",TransducerOrientationSequence,SQ,VM::N(1));
define_tag!("(0008,2246)",0x00082246,"Transducer Orientation Modifier Sequence",TransducerOrientationModifierSequence,SQ,VM::N(1));
define_tag!("(0008,2251)",0x00082251,"Anatomic Structure Space Or Region Code Sequence (Trial)",AnatomicStructureSpaceOrRegionCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0008,2253)",0x00082253,"Anatomic Portal Of Entrance Code Sequence (Trial)",AnatomicPortalOfEntranceCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0008,2255)",0x00082255,"Anatomic Approach Direction Code Sequence (Trial)",AnatomicApproachDirectionCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0008,2256)",0x00082256,"Anatomic Perspective Description (Trial)",AnatomicPerspectiveDescriptionTrial,ST,VM::N(1));
define_tag!("(0008,2257)",0x00082257,"Anatomic Perspective Code Sequence (Trial)",AnatomicPerspectiveCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0008,2258)",0x00082258,"Anatomic Location Of Examining Instrument Description (Trial)",AnatomicLocationOfExaminingInstrumentDescriptionTrial,ST,VM::N(1));
define_tag!("(0008,2259)",0x00082259,"Anatomic Location Of Examining Instrument Code Sequence (Trial)",AnatomicLocationOfExaminingInstrumentCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0008,225A)",0x0008225A,"Anatomic Structure Space Or Region Modifier Code Sequence (Trial)",AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0008,225C)",0x0008225C,"On Axis Background Anatomic Structure Code Sequence (Trial)",OnAxisBackgroundAnatomicStructureCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0008,3001)",0x00083001,"Alternate Representation Sequence",AlternateRepresentationSequence,SQ,VM::N(1));
define_tag!("(0008,3010)",0x00083010,"Irradiation Event UID",IrradiationEventUID,UI,VM::NOrMore(1));
define_tag!("(0008,3011)",0x00083011,"Source Irradiation Event Sequence",SourceIrradiationEventSequence,SQ,VM::N(1));
define_tag!("(0008,3012)",0x00083012,"Radiopharmaceutical Administration Event UID",RadiopharmaceuticalAdministrationEventUID,UI,VM::N(1));
define_tag!("(0008,4000)",0x00084000,"Identifying Comments",IdentifyingComments,LT,VM::N(1));
define_tag!("(0008,9007)",0x00089007,"Frame Type",FrameType,CS,VM::N(4));
define_tag!("(0008,9092)",0x00089092,"Referenced Image Evidence Sequence",ReferencedImageEvidenceSequence,SQ,VM::N(1));
define_tag!("(0008,9121)",0x00089121,"Referenced Raw Data Sequence",ReferencedRawDataSequence,SQ,VM::N(1));
define_tag!("(0008,9123)",0x00089123,"Creator-Version UID",CreatorVersionUID,UI,VM::N(1));
define_tag!("(0008,9124)",0x00089124,"Derivation Image Sequence",DerivationImageSequence,SQ,VM::N(1));
define_tag!("(0008,9154)",0x00089154,"Source Image Evidence Sequence",SourceImageEvidenceSequence,SQ,VM::N(1));
define_tag!("(0008,9205)",0x00089205,"Pixel Presentation",PixelPresentation,CS,VM::N(1));
define_tag!("(0008,9206)",0x00089206,"Volumetric Properties",VolumetricProperties,CS,VM::N(1));
define_tag!("(0008,9207)",0x00089207,"Volume Based Calculation Technique",VolumeBasedCalculationTechnique,CS,VM::N(1));
define_tag!("(0008,9208)",0x00089208,"Complex Image Component",ComplexImageComponent,CS,VM::N(1));
define_tag!("(0008,9209)",0x00089209,"Acquisition Contrast",AcquisitionContrast,CS,VM::N(1));
define_tag!("(0008,9215)",0x00089215,"Derivation Code Sequence",DerivationCodeSequence,SQ,VM::N(1));
define_tag!("(0008,9237)",0x00089237,"Referenced Presentation State Sequence",ReferencedPresentationStateSequence,SQ,VM::N(1));
define_tag!("(0008,9410)",0x00089410,"Referenced Other Plane Sequence",ReferencedOtherPlaneSequence,SQ,VM::N(1));
define_tag!("(0008,9458)",0x00089458,"Frame Display Sequence",FrameDisplaySequence,SQ,VM::N(1));
define_tag!("(0008,9459)",0x00089459,"Recommended Display Frame Rate in Float",RecommendedDisplayFrameRateInFloat,FL,VM::N(1));
define_tag!("(0008,9460)",0x00089460,"Skip Frame Range Flag",SkipFrameRangeFlag,CS,VM::N(1));
define_tag!("(0010,0010)",0x00100010,"Patient's Name",PatientName,PN,VM::N(1));
define_tag!("(0010,0020)",0x00100020,"Patient ID",PatientID,LO,VM::N(1));
define_tag!("(0010,0021)",0x00100021,"Issuer of Patient ID",IssuerOfPatientID,LO,VM::N(1));
define_tag!("(0010,0022)",0x00100022,"Type of Patient ID",TypeOfPatientID,CS,VM::N(1));
define_tag!("(0010,0024)",0x00100024,"Issuer of Patient ID Qualifiers Sequence",IssuerOfPatientIDQualifiersSequence,SQ,VM::N(1));
define_tag!("(0010,0026)",0x00100026,"Source Patient Group Identification Sequence",SourcePatientGroupIdentificationSequence,SQ,VM::N(1));
define_tag!("(0010,0027)",0x00100027,"Group of Patients Identification Sequence",GroupOfPatientsIdentificationSequence,SQ,VM::N(1));
define_tag!("(0010,0028)",0x00100028,"Subject Relative Position in Image",SubjectRelativePositionInImage,US,VM::N(3));
define_tag!("(0010,0030)",0x00100030,"Patient's Birth Date",PatientBirthDate,DA,VM::N(1));
define_tag!("(0010,0032)",0x00100032,"Patient's Birth Time",PatientBirthTime,TM,VM::N(1));
define_tag!("(0010,0033)",0x00100033,"Patient's Birth Date in Alternative Calendar",PatientBirthDateInAlternativeCalendar,LO,VM::N(1));
define_tag!("(0010,0034)",0x00100034,"Patient's Death Date in Alternative Calendar",PatientDeathDateInAlternativeCalendar,LO,VM::N(1));
define_tag!("(0010,0035)",0x00100035,"Patient's Alternative Calendar",PatientAlternativeCalendar,CS,VM::N(1));
define_tag!("(0010,0040)",0x00100040,"Patient's Sex",PatientSex,CS,VM::N(1));
define_tag!("(0010,0050)",0x00100050,"Patient's Insurance Plan Code Sequence",PatientInsurancePlanCodeSequence,SQ,VM::N(1));
define_tag!("(0010,0101)",0x00100101,"Patient's Primary Language Code Sequence",PatientPrimaryLanguageCodeSequence,SQ,VM::N(1));
define_tag!("(0010,0102)",0x00100102,"Patient's Primary Language Modifier Code Sequence",PatientPrimaryLanguageModifierCodeSequence,SQ,VM::N(1));
define_tag!("(0010,0200)",0x00100200,"Quality Control Subject",QualityControlSubject,CS,VM::N(1));
define_tag!("(0010,0201)",0x00100201,"Quality Control Subject Type Code Sequence",QualityControlSubjectTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0010,0212)",0x00100212,"Strain Description",StrainDescription,UC,VM::N(1));
define_tag!("(0010,0213)",0x00100213,"Strain Nomenclature",StrainNomenclature,LO,VM::N(1));
define_tag!("(0010,0214)",0x00100214,"Strain Stock Number",StrainStockNumber,LO,VM::N(1));
define_tag!("(0010,0215)",0x00100215,"Strain Source Registry Code Sequence",StrainSourceRegistryCodeSequence,SQ,VM::N(1));
define_tag!("(0010,0216)",0x00100216,"Strain Stock Sequence",StrainStockSequence,SQ,VM::N(1));
define_tag!("(0010,0217)",0x00100217,"Strain Source",StrainSource,LO,VM::N(1));
define_tag!("(0010,0218)",0x00100218,"Strain Additional Information",StrainAdditionalInformation,UT,VM::N(1));
define_tag!("(0010,0219)",0x00100219,"Strain Code Sequence",StrainCodeSequence,SQ,VM::N(1));
define_tag!("(0010,1000)",0x00101000,"Other Patient IDs",OtherPatientIDs,LO,VM::NOrMore(1));
define_tag!("(0010,1001)",0x00101001,"Other Patient Names",OtherPatientNames,PN,VM::NOrMore(1));
define_tag!("(0010,1002)",0x00101002,"Other Patient IDs Sequence",OtherPatientIDsSequence,SQ,VM::N(1));
define_tag!("(0010,1005)",0x00101005,"Patient's Birth Name",PatientBirthName,PN,VM::N(1));
define_tag!("(0010,1010)",0x00101010,"Patient's Age",PatientAge,AS,VM::N(1));
define_tag!("(0010,1020)",0x00101020,"Patient's Size",PatientSize,DS,VM::N(1));
define_tag!("(0010,1021)",0x00101021,"Patient's Size Code Sequence",PatientSizeCodeSequence,SQ,VM::N(1));
define_tag!("(0010,1030)",0x00101030,"Patient's Weight",PatientWeight,DS,VM::N(1));
define_tag!("(0010,1040)",0x00101040,"Patient's Address",PatientAddress,LO,VM::N(1));
define_tag!("(0010,1050)",0x00101050,"Insurance Plan Identification",InsurancePlanIdentification,LO,VM::NOrMore(1));
define_tag!("(0010,1060)",0x00101060,"Patient's Mother's Birth Name",PatientMotherBirthName,PN,VM::N(1));
define_tag!("(0010,1080)",0x00101080,"Military Rank",MilitaryRank,LO,VM::N(1));
define_tag!("(0010,1081)",0x00101081,"Branch of Service",BranchOfService,LO,VM::N(1));
define_tag!("(0010,1090)",0x00101090,"Medical Record Locator",MedicalRecordLocator,LO,VM::N(1));
define_tag!("(0010,1100)",0x00101100,"Referenced Patient Photo Sequence",ReferencedPatientPhotoSequence,SQ,VM::N(1));
define_tag!("(0010,2000)",0x00102000,"Medical Alerts",MedicalAlerts,LO,VM::NOrMore(1));
define_tag!("(0010,2110)",0x00102110,"Allergies",Allergies,LO,VM::NOrMore(1));
define_tag!("(0010,2150)",0x00102150,"Country of Residence",CountryOfResidence,LO,VM::N(1));
define_tag!("(0010,2152)",0x00102152,"Region of Residence",RegionOfResidence,LO,VM::N(1));
define_tag!("(0010,2154)",0x00102154,"Patient's Telephone Numbers",PatientTelephoneNumbers,SH,VM::NOrMore(1));
define_tag!("(0010,2155)",0x00102155,"Patient's Telecom Information",PatientTelecomInformation,LT,VM::N(1));
define_tag!("(0010,2160)",0x00102160,"Ethnic Group",EthnicGroup,SH,VM::N(1));
define_tag!("(0010,2180)",0x00102180,"Occupation",Occupation,SH,VM::N(1));
define_tag!("(0010,21A0)",0x001021A0,"Smoking Status",SmokingStatus,CS,VM::N(1));
define_tag!("(0010,21B0)",0x001021B0,"Additional Patient History",AdditionalPatientHistory,LT,VM::N(1));
define_tag!("(0010,21C0)",0x001021C0,"Pregnancy Status",PregnancyStatus,US,VM::N(1));
define_tag!("(0010,21D0)",0x001021D0,"Last Menstrual Date",LastMenstrualDate,DA,VM::N(1));
define_tag!("(0010,21F0)",0x001021F0,"Patient's Religious Preference",PatientReligiousPreference,LO,VM::N(1));
define_tag!("(0010,2201)",0x00102201,"Patient Species Description",PatientSpeciesDescription,LO,VM::N(1));
define_tag!("(0010,2202)",0x00102202,"Patient Species Code Sequence",PatientSpeciesCodeSequence,SQ,VM::N(1));
define_tag!("(0010,2203)",0x00102203,"Patient's Sex Neutered",PatientSexNeutered,CS,VM::N(1));
define_tag!("(0010,2210)",0x00102210,"Anatomical Orientation Type",AnatomicalOrientationType,CS,VM::N(1));
define_tag!("(0010,2292)",0x00102292,"Patient Breed Description",PatientBreedDescription,LO,VM::N(1));
define_tag!("(0010,2293)",0x00102293,"Patient Breed Code Sequence",PatientBreedCodeSequence,SQ,VM::N(1));
define_tag!("(0010,2294)",0x00102294,"Breed Registration Sequence",BreedRegistrationSequence,SQ,VM::N(1));
define_tag!("(0010,2295)",0x00102295,"Breed Registration Number",BreedRegistrationNumber,LO,VM::N(1));
define_tag!("(0010,2296)",0x00102296,"Breed Registry Code Sequence",BreedRegistryCodeSequence,SQ,VM::N(1));
define_tag!("(0010,2297)",0x00102297,"Responsible Person",ResponsiblePerson,PN,VM::N(1));
define_tag!("(0010,2298)",0x00102298,"Responsible Person Role",ResponsiblePersonRole,CS,VM::N(1));
define_tag!("(0010,2299)",0x00102299,"Responsible Organization",ResponsibleOrganization,LO,VM::N(1));
define_tag!("(0010,4000)",0x00104000,"Patient Comments",PatientComments,LT,VM::N(1));
define_tag!("(0010,9431)",0x00109431,"Examined Body Thickness",ExaminedBodyThickness,FL,VM::N(1));
define_tag!("(0012,0010)",0x00120010,"Clinical Trial Sponsor Name",ClinicalTrialSponsorName,LO,VM::N(1));
define_tag!("(0012,0020)",0x00120020,"Clinical Trial Protocol ID",ClinicalTrialProtocolID,LO,VM::N(1));
define_tag!("(0012,0021)",0x00120021,"Clinical Trial Protocol Name",ClinicalTrialProtocolName,LO,VM::N(1));
define_tag!("(0012,0030)",0x00120030,"Clinical Trial Site ID",ClinicalTrialSiteID,LO,VM::N(1));
define_tag!("(0012,0031)",0x00120031,"Clinical Trial Site Name",ClinicalTrialSiteName,LO,VM::N(1));
define_tag!("(0012,0040)",0x00120040,"Clinical Trial Subject ID",ClinicalTrialSubjectID,LO,VM::N(1));
define_tag!("(0012,0042)",0x00120042,"Clinical Trial Subject Reading ID",ClinicalTrialSubjectReadingID,LO,VM::N(1));
define_tag!("(0012,0050)",0x00120050,"Clinical Trial Time Point ID",ClinicalTrialTimePointID,LO,VM::N(1));
define_tag!("(0012,0051)",0x00120051,"Clinical Trial Time Point Description",ClinicalTrialTimePointDescription,ST,VM::N(1));
define_tag!("(0012,0060)",0x00120060,"Clinical Trial Coordinating Center Name",ClinicalTrialCoordinatingCenterName,LO,VM::N(1));
define_tag!("(0012,0062)",0x00120062,"Patient Identity Removed",PatientIdentityRemoved,CS,VM::N(1));
define_tag!("(0012,0063)",0x00120063,"De-identification Method",DeidentificationMethod,LO,VM::NOrMore(1));
define_tag!("(0012,0064)",0x00120064,"De-identification Method Code Sequence",DeidentificationMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0012,0071)",0x00120071,"Clinical Trial Series ID",ClinicalTrialSeriesID,LO,VM::N(1));
define_tag!("(0012,0072)",0x00120072,"Clinical Trial Series Description",ClinicalTrialSeriesDescription,LO,VM::N(1));
define_tag!("(0012,0081)",0x00120081,"Clinical Trial Protocol Ethics Committee Name",ClinicalTrialProtocolEthicsCommitteeName,LO,VM::N(1));
define_tag!("(0012,0082)",0x00120082,"Clinical Trial Protocol Ethics Committee Approval Number",ClinicalTrialProtocolEthicsCommitteeApprovalNumber,LO,VM::N(1));
define_tag!("(0012,0083)",0x00120083,"Consent for Clinical Trial Use Sequence",ConsentForClinicalTrialUseSequence,SQ,VM::N(1));
define_tag!("(0012,0084)",0x00120084,"Distribution Type",DistributionType,CS,VM::N(1));
define_tag!("(0012,0085)",0x00120085,"Consent for Distribution Flag",ConsentForDistributionFlag,CS,VM::N(1));
define_tag!("(0014,0023)",0x00140023,"CAD File Format",CADFileFormat,ST,VM::N(1));
define_tag!("(0014,0024)",0x00140024,"Component Reference System",ComponentReferenceSystem,ST,VM::N(1));
define_tag!("(0014,0025)",0x00140025,"Component Manufacturing Procedure",ComponentManufacturingProcedure,ST,VM::N(1));
define_tag!("(0014,0028)",0x00140028,"Component Manufacturer",ComponentManufacturer,ST,VM::N(1));
define_tag!("(0014,0030)",0x00140030,"Material Thickness",MaterialThickness,DS,VM::NOrMore(1));
define_tag!("(0014,0032)",0x00140032,"Material Pipe Diameter",MaterialPipeDiameter,DS,VM::NOrMore(1));
define_tag!("(0014,0034)",0x00140034,"Material Isolation Diameter",MaterialIsolationDiameter,DS,VM::NOrMore(1));
define_tag!("(0014,0042)",0x00140042,"Material Grade",MaterialGrade,ST,VM::N(1));
define_tag!("(0014,0044)",0x00140044,"Material Properties Description",MaterialPropertiesDescription,ST,VM::N(1));
define_tag!("(0014,0045)",0x00140045,"Material Properties File Format (Retired)",MaterialPropertiesFileFormatRetired,ST,VM::N(1));
define_tag!("(0014,0046)",0x00140046,"Material Notes",MaterialNotes,LT,VM::N(1));
define_tag!("(0014,0050)",0x00140050,"Component Shape",ComponentShape,CS,VM::N(1));
define_tag!("(0014,0052)",0x00140052,"Curvature Type",CurvatureType,CS,VM::N(1));
define_tag!("(0014,0054)",0x00140054,"Outer Diameter",OuterDiameter,DS,VM::N(1));
define_tag!("(0014,0056)",0x00140056,"Inner Diameter",InnerDiameter,DS,VM::N(1));
define_tag!("(0014,0100)",0x00140100,"Component Welder IDs",ComponentWelderIDs,LO,VM::NOrMore(1));
define_tag!("(0014,0101)",0x00140101,"Secondary Approval Status",SecondaryApprovalStatus,CS,VM::N(1));
define_tag!("(0014,0102)",0x00140102,"Secondary Review Date",SecondaryReviewDate,DA,VM::N(1));
define_tag!("(0014,0103)",0x00140103,"Secondary Review Time",SecondaryReviewTime,TM,VM::N(1));
define_tag!("(0014,0104)",0x00140104,"Secondary Reviewer Name",SecondaryReviewerName,PN,VM::N(1));
define_tag!("(0014,0105)",0x00140105,"Repair ID",RepairID,ST,VM::N(1));
define_tag!("(0014,0106)",0x00140106,"Multiple Component Approval Sequence",MultipleComponentApprovalSequence,SQ,VM::N(1));
define_tag!("(0014,0107)",0x00140107,"Other Approval Status",OtherApprovalStatus,CS,VM::NOrMore(1));
define_tag!("(0014,0108)",0x00140108,"Other Secondary Approval Status",OtherSecondaryApprovalStatus,CS,VM::NOrMore(1));
define_tag!("(0014,1010)",0x00141010,"Actual Environmental Conditions",ActualEnvironmentalConditions,ST,VM::N(1));
define_tag!("(0014,1020)",0x00141020,"Expiry Date",ExpiryDate,DA,VM::N(1));
define_tag!("(0014,1040)",0x00141040,"Environmental Conditions",EnvironmentalConditions,ST,VM::N(1));
define_tag!("(0014,2002)",0x00142002,"Evaluator Sequence",EvaluatorSequence,SQ,VM::N(1));
define_tag!("(0014,2004)",0x00142004,"Evaluator Number",EvaluatorNumber,IS,VM::N(1));
define_tag!("(0014,2006)",0x00142006,"Evaluator Name",EvaluatorName,PN,VM::N(1));
define_tag!("(0014,2008)",0x00142008,"Evaluation Attempt",EvaluationAttempt,IS,VM::N(1));
define_tag!("(0014,2012)",0x00142012,"Indication Sequence",IndicationSequence,SQ,VM::N(1));
define_tag!("(0014,2014)",0x00142014,"Indication Number",IndicationNumber,IS,VM::N(1));
define_tag!("(0014,2016)",0x00142016,"Indication Label",IndicationLabel,SH,VM::N(1));
define_tag!("(0014,2018)",0x00142018,"Indication Description",IndicationDescription,ST,VM::N(1));
define_tag!("(0014,201A)",0x0014201A,"Indication Type",IndicationType,CS,VM::NOrMore(1));
define_tag!("(0014,201C)",0x0014201C,"Indication Disposition",IndicationDisposition,CS,VM::N(1));
define_tag!("(0014,201E)",0x0014201E,"Indication ROI Sequence",IndicationROISequence,SQ,VM::N(1));
define_tag!("(0014,2030)",0x00142030,"Indication Physical Property Sequence",IndicationPhysicalPropertySequence,SQ,VM::N(1));
define_tag!("(0014,2032)",0x00142032,"Property Label",PropertyLabel,SH,VM::N(1));
define_tag!("(0014,2202)",0x00142202,"Coordinate System Number of Axes",CoordinateSystemNumberOfAxes,IS,VM::N(1));
define_tag!("(0014,2204)",0x00142204,"Coordinate System Axes Sequence",CoordinateSystemAxesSequence,SQ,VM::N(1));
define_tag!("(0014,2206)",0x00142206,"Coordinate System Axis Description",CoordinateSystemAxisDescription,ST,VM::N(1));
define_tag!("(0014,2208)",0x00142208,"Coordinate System Data Set Mapping",CoordinateSystemDataSetMapping,CS,VM::N(1));
define_tag!("(0014,220A)",0x0014220A,"Coordinate System Axis Number",CoordinateSystemAxisNumber,IS,VM::N(1));
define_tag!("(0014,220C)",0x0014220C,"Coordinate System Axis Type",CoordinateSystemAxisType,CS,VM::N(1));
define_tag!("(0014,220E)",0x0014220E,"Coordinate System Axis Units",CoordinateSystemAxisUnits,CS,VM::N(1));
define_tag!("(0014,2210)",0x00142210,"Coordinate System Axis Values",CoordinateSystemAxisValues,OB,VM::N(1));
define_tag!("(0014,2220)",0x00142220,"Coordinate System Transform Sequence",CoordinateSystemTransformSequence,SQ,VM::N(1));
define_tag!("(0014,2222)",0x00142222,"Transform Description",TransformDescription,ST,VM::N(1));
define_tag!("(0014,2224)",0x00142224,"Transform Number of Axes",TransformNumberOfAxes,IS,VM::N(1));
define_tag!("(0014,2226)",0x00142226,"Transform Order of Axes",TransformOrderOfAxes,IS,VM::NOrMore(1));
define_tag!("(0014,2228)",0x00142228,"Transformed Axis Units",TransformedAxisUnits,CS,VM::N(1));
define_tag!("(0014,222A)",0x0014222A,"Coordinate System Transform Rotation and Scale Matrix",CoordinateSystemTransformRotationAndScaleMatrix,DS,VM::NOrMore(1));
define_tag!("(0014,222C)",0x0014222C,"Coordinate System Transform Translation Matrix",CoordinateSystemTransformTranslationMatrix,DS,VM::NOrMore(1));
define_tag!("(0014,3011)",0x00143011,"Internal Detector Frame Time",InternalDetectorFrameTime,DS,VM::N(1));
define_tag!("(0014,3012)",0x00143012,"Number of Frames Integrated",NumberOfFramesIntegrated,DS,VM::N(1));
define_tag!("(0014,3020)",0x00143020,"Detector Temperature Sequence",DetectorTemperatureSequence,SQ,VM::N(1));
define_tag!("(0014,3022)",0x00143022,"Sensor Name",SensorName,ST,VM::N(1));
define_tag!("(0014,3024)",0x00143024,"Horizontal Offset of Sensor",HorizontalOffsetOfSensor,DS,VM::N(1));
define_tag!("(0014,3026)",0x00143026,"Vertical Offset of Sensor",VerticalOffsetOfSensor,DS,VM::N(1));
define_tag!("(0014,3028)",0x00143028,"Sensor Temperature",SensorTemperature,DS,VM::N(1));
define_tag!("(0014,3040)",0x00143040,"Dark Current Sequence",DarkCurrentSequence,SQ,VM::N(1));
define_tag!("(0014,3050)",0x00143050,"Dark Current Counts",DarkCurrentCounts,Option::None,VM::N(1));
define_tag!("(0014,3060)",0x00143060,"Gain Correction Reference Sequence",GainCorrectionReferenceSequence,SQ,VM::N(1));
define_tag!("(0014,3070)",0x00143070,"Air Counts",AirCounts,Option::None,VM::N(1));
define_tag!("(0014,3071)",0x00143071,"KV Used in Gain Calibration",KVUsedInGainCalibration,DS,VM::N(1));
define_tag!("(0014,3072)",0x00143072,"MA Used in Gain Calibration",MAUsedInGainCalibration,DS,VM::N(1));
define_tag!("(0014,3073)",0x00143073,"Number of Frames Used for Integration",NumberOfFramesUsedForIntegration,DS,VM::N(1));
define_tag!("(0014,3074)",0x00143074,"Filter Material Used in Gain Calibration",FilterMaterialUsedInGainCalibration,LO,VM::N(1));
define_tag!("(0014,3075)",0x00143075,"Filter Thickness Used in Gain Calibration",FilterThicknessUsedInGainCalibration,DS,VM::N(1));
define_tag!("(0014,3076)",0x00143076,"Date of Gain Calibration",DateOfGainCalibration,DA,VM::N(1));
define_tag!("(0014,3077)",0x00143077,"Time of Gain Calibration",TimeOfGainCalibration,TM,VM::N(1));
define_tag!("(0014,3080)",0x00143080,"Bad Pixel Image",BadPixelImage,OB,VM::N(1));
define_tag!("(0014,3099)",0x00143099,"Calibration Notes",CalibrationNotes,LT,VM::N(1));
define_tag!("(0014,4002)",0x00144002,"Pulser Equipment Sequence",PulserEquipmentSequence,SQ,VM::N(1));
define_tag!("(0014,4004)",0x00144004,"Pulser Type",PulserType,CS,VM::N(1));
define_tag!("(0014,4006)",0x00144006,"Pulser Notes",PulserNotes,LT,VM::N(1));
define_tag!("(0014,4008)",0x00144008,"Receiver Equipment Sequence",ReceiverEquipmentSequence,SQ,VM::N(1));
define_tag!("(0014,400A)",0x0014400A,"Amplifier Type",AmplifierType,CS,VM::N(1));
define_tag!("(0014,400C)",0x0014400C,"Receiver Notes",ReceiverNotes,LT,VM::N(1));
define_tag!("(0014,400E)",0x0014400E,"Pre-Amplifier Equipment Sequence",PreAmplifierEquipmentSequence,SQ,VM::N(1));
define_tag!("(0014,400F)",0x0014400F,"Pre-Amplifier Notes",PreAmplifierNotes,LT,VM::N(1));
define_tag!("(0014,4010)",0x00144010,"Transmit Transducer Sequence",TransmitTransducerSequence,SQ,VM::N(1));
define_tag!("(0014,4011)",0x00144011,"Receive Transducer Sequence",ReceiveTransducerSequence,SQ,VM::N(1));
define_tag!("(0014,4012)",0x00144012,"Number of Elements",NumberOfElements,US,VM::N(1));
define_tag!("(0014,4013)",0x00144013,"Element Shape",ElementShape,CS,VM::N(1));
define_tag!("(0014,4014)",0x00144014,"Element Dimension A",ElementDimensionA,DS,VM::N(1));
define_tag!("(0014,4015)",0x00144015,"Element Dimension B",ElementDimensionB,DS,VM::N(1));
define_tag!("(0014,4016)",0x00144016,"Element Pitch A",ElementPitchA,DS,VM::N(1));
define_tag!("(0014,4017)",0x00144017,"Measured Beam Dimension A",MeasuredBeamDimensionA,DS,VM::N(1));
define_tag!("(0014,4018)",0x00144018,"Measured Beam Dimension B",MeasuredBeamDimensionB,DS,VM::N(1));
define_tag!("(0014,4019)",0x00144019,"Location of Measured Beam Diameter",LocationOfMeasuredBeamDiameter,DS,VM::N(1));
define_tag!("(0014,401A)",0x0014401A,"Nominal Frequency",NominalFrequency,DS,VM::N(1));
define_tag!("(0014,401B)",0x0014401B,"Measured Center Frequency",MeasuredCenterFrequency,DS,VM::N(1));
define_tag!("(0014,401C)",0x0014401C,"Measured Bandwidth",MeasuredBandwidth,DS,VM::N(1));
define_tag!("(0014,401D)",0x0014401D,"Element Pitch B",ElementPitchB,DS,VM::N(1));
define_tag!("(0014,4020)",0x00144020,"Pulser Settings Sequence",PulserSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,4022)",0x00144022,"Pulse Width",PulseWidth,DS,VM::N(1));
define_tag!("(0014,4024)",0x00144024,"Excitation Frequency",ExcitationFrequency,DS,VM::N(1));
define_tag!("(0014,4026)",0x00144026,"Modulation Type",ModulationType,CS,VM::N(1));
define_tag!("(0014,4028)",0x00144028,"Damping",Damping,DS,VM::N(1));
define_tag!("(0014,4030)",0x00144030,"Receiver Settings Sequence",ReceiverSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,4031)",0x00144031,"Acquired Soundpath Length",AcquiredSoundpathLength,DS,VM::N(1));
define_tag!("(0014,4032)",0x00144032,"Acquisition Compression Type",AcquisitionCompressionType,CS,VM::N(1));
define_tag!("(0014,4033)",0x00144033,"Acquisition Sample Size",AcquisitionSampleSize,IS,VM::N(1));
define_tag!("(0014,4034)",0x00144034,"Rectifier Smoothing",RectifierSmoothing,DS,VM::N(1));
define_tag!("(0014,4035)",0x00144035,"DAC Sequence",DACSequence,SQ,VM::N(1));
define_tag!("(0014,4036)",0x00144036,"DAC Type",DACType,CS,VM::N(1));
define_tag!("(0014,4038)",0x00144038,"DAC Gain Points",DACGainPoints,DS,VM::NOrMore(1));
define_tag!("(0014,403A)",0x0014403A,"DAC Time Points",DACTimePoints,DS,VM::NOrMore(1));
define_tag!("(0014,403C)",0x0014403C,"DAC Amplitude",DACAmplitude,DS,VM::NOrMore(1));
define_tag!("(0014,4040)",0x00144040,"Pre-Amplifier Settings Sequence",PreAmplifierSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,4050)",0x00144050,"Transmit Transducer Settings Sequence",TransmitTransducerSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,4051)",0x00144051,"Receive Transducer Settings Sequence",ReceiveTransducerSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,4052)",0x00144052,"Incident Angle",IncidentAngle,DS,VM::N(1));
define_tag!("(0014,4054)",0x00144054,"Coupling Technique",CouplingTechnique,ST,VM::N(1));
define_tag!("(0014,4056)",0x00144056,"Coupling Medium",CouplingMedium,ST,VM::N(1));
define_tag!("(0014,4057)",0x00144057,"Coupling Velocity",CouplingVelocity,DS,VM::N(1));
define_tag!("(0014,4058)",0x00144058,"Probe Center Location X",ProbeCenterLocationX,DS,VM::N(1));
define_tag!("(0014,4059)",0x00144059,"Probe Center Location Z",ProbeCenterLocationZ,DS,VM::N(1));
define_tag!("(0014,405A)",0x0014405A,"Sound Path Length",SoundPathLength,DS,VM::N(1));
define_tag!("(0014,405C)",0x0014405C,"Delay Law Identifier",DelayLawIdentifier,ST,VM::N(1));
define_tag!("(0014,4060)",0x00144060,"Gate Settings Sequence",GateSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,4062)",0x00144062,"Gate Threshold",GateThreshold,DS,VM::N(1));
define_tag!("(0014,4064)",0x00144064,"Velocity of Sound",VelocityOfSound,DS,VM::N(1));
define_tag!("(0014,4070)",0x00144070,"Calibration Settings Sequence",CalibrationSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,4072)",0x00144072,"Calibration Procedure",CalibrationProcedure,ST,VM::N(1));
define_tag!("(0014,4074)",0x00144074,"Procedure Version",ProcedureVersion,SH,VM::N(1));
define_tag!("(0014,4076)",0x00144076,"Procedure Creation Date",ProcedureCreationDate,DA,VM::N(1));
define_tag!("(0014,4078)",0x00144078,"Procedure Expiration Date",ProcedureExpirationDate,DA,VM::N(1));
define_tag!("(0014,407A)",0x0014407A,"Procedure Last Modified Date",ProcedureLastModifiedDate,DA,VM::N(1));
define_tag!("(0014,407C)",0x0014407C,"Calibration Time",CalibrationTime,TM,VM::NOrMore(1));
define_tag!("(0014,407E)",0x0014407E,"Calibration Date",CalibrationDate,DA,VM::NOrMore(1));
define_tag!("(0014,4080)",0x00144080,"Probe Drive Equipment Sequence",ProbeDriveEquipmentSequence,SQ,VM::N(1));
define_tag!("(0014,4081)",0x00144081,"Drive Type",DriveType,CS,VM::N(1));
define_tag!("(0014,4082)",0x00144082,"Probe Drive Notes",ProbeDriveNotes,LT,VM::N(1));
define_tag!("(0014,4083)",0x00144083,"Drive Probe Sequence",DriveProbeSequence,SQ,VM::N(1));
define_tag!("(0014,4084)",0x00144084,"Probe Inductance",ProbeInductance,DS,VM::N(1));
define_tag!("(0014,4085)",0x00144085,"Probe Resistance",ProbeResistance,DS,VM::N(1));
define_tag!("(0014,4086)",0x00144086,"Receive Probe Sequence",ReceiveProbeSequence,SQ,VM::N(1));
define_tag!("(0014,4087)",0x00144087,"Probe Drive Settings Sequence",ProbeDriveSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,4088)",0x00144088,"Bridge Resistors",BridgeResistors,DS,VM::N(1));
define_tag!("(0014,4089)",0x00144089,"Probe Orientation Angle",ProbeOrientationAngle,DS,VM::N(1));
define_tag!("(0014,408B)",0x0014408B,"User Selected Gain Y",UserSelectedGainY,DS,VM::N(1));
define_tag!("(0014,408C)",0x0014408C,"User Selected Phase",UserSelectedPhase,DS,VM::N(1));
define_tag!("(0014,408D)",0x0014408D,"User Selected Offset X",UserSelectedOffsetX,DS,VM::N(1));
define_tag!("(0014,408E)",0x0014408E,"User Selected Offset Y",UserSelectedOffsetY,DS,VM::N(1));
define_tag!("(0014,4091)",0x00144091,"Channel Settings Sequence",ChannelSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,4092)",0x00144092,"Channel Threshold",ChannelThreshold,DS,VM::N(1));
define_tag!("(0014,409A)",0x0014409A,"Scanner Settings Sequence",ScannerSettingsSequence,SQ,VM::N(1));
define_tag!("(0014,409B)",0x0014409B,"Scan Procedure",ScanProcedure,ST,VM::N(1));
define_tag!("(0014,409C)",0x0014409C,"Translation Rate X",TranslationRateX,DS,VM::N(1));
define_tag!("(0014,409D)",0x0014409D,"Translation Rate Y",TranslationRateY,DS,VM::N(1));
define_tag!("(0014,409F)",0x0014409F,"Channel Overlap",ChannelOverlap,DS,VM::N(1));
define_tag!("(0014,40A0)",0x001440A0,"Image Quality Indicator Type",ImageQualityIndicatorType,LO,VM::N(1));
define_tag!("(0014,40A1)",0x001440A1,"Image Quality Indicator Material",ImageQualityIndicatorMaterial,LO,VM::N(1));
define_tag!("(0014,40A2)",0x001440A2,"Image Quality Indicator Size",ImageQualityIndicatorSize,LO,VM::N(1));
define_tag!("(0014,5002)",0x00145002,"LINAC Energy",LINACEnergy,IS,VM::N(1));
define_tag!("(0014,5004)",0x00145004,"LINAC Output",LINACOutput,IS,VM::N(1));
define_tag!("(0014,5100)",0x00145100,"Active Aperture",ActiveAperture,US,VM::N(1));
define_tag!("(0014,5101)",0x00145101,"Total Aperture",TotalAperture,DS,VM::N(1));
define_tag!("(0014,5102)",0x00145102,"Aperture Elevation",ApertureElevation,DS,VM::N(1));
define_tag!("(0014,5103)",0x00145103,"Main Lobe Angle",MainLobeAngle,DS,VM::N(1));
define_tag!("(0014,5104)",0x00145104,"Main Roof Angle",MainRoofAngle,DS,VM::N(1));
define_tag!("(0014,5105)",0x00145105,"Connector Type",ConnectorType,CS,VM::N(1));
define_tag!("(0014,5106)",0x00145106,"Wedge Model Number",WedgeModelNumber,SH,VM::N(1));
define_tag!("(0014,5107)",0x00145107,"Wedge Angle Float",WedgeAngleFloat,DS,VM::N(1));
define_tag!("(0014,5108)",0x00145108,"Wedge Roof Angle",WedgeRoofAngle,DS,VM::N(1));
define_tag!("(0014,5109)",0x00145109,"Wedge Element 1 Position",WedgeElement1Position,CS,VM::N(1));
define_tag!("(0014,510A)",0x0014510A,"Wedge Material Velocity",WedgeMaterialVelocity,DS,VM::N(1));
define_tag!("(0014,510B)",0x0014510B,"Wedge Material",WedgeMaterial,SH,VM::N(1));
define_tag!("(0014,510C)",0x0014510C,"Wedge Offset Z",WedgeOffsetZ,DS,VM::N(1));
define_tag!("(0014,510D)",0x0014510D,"Wedge Origin Offset X",WedgeOriginOffsetX,DS,VM::N(1));
define_tag!("(0014,510E)",0x0014510E,"Wedge Time Delay",WedgeTimeDelay,DS,VM::N(1));
define_tag!("(0014,510F)",0x0014510F,"Wedge Name",WedgeName,SH,VM::N(1));
define_tag!("(0014,5110)",0x00145110,"Wedge Manufacturer Name",WedgeManufacturerName,SH,VM::N(1));
define_tag!("(0014,5111)",0x00145111,"Wedge Description",WedgeDescription,LO,VM::N(1));
define_tag!("(0014,5112)",0x00145112,"Nominal Beam Angle",NominalBeamAngle,DS,VM::N(1));
define_tag!("(0014,5113)",0x00145113,"Wedge Offset X",WedgeOffsetX,DS,VM::N(1));
define_tag!("(0014,5114)",0x00145114,"Wedge Offset Y",WedgeOffsetY,DS,VM::N(1));
define_tag!("(0014,5115)",0x00145115,"Wedge Total Length",WedgeTotalLength,DS,VM::N(1));
define_tag!("(0014,5116)",0x00145116,"Wedge In Contact Length",WedgeInContactLength,DS,VM::N(1));
define_tag!("(0014,5117)",0x00145117,"Wedge Front Gap",WedgeFrontGap,DS,VM::N(1));
define_tag!("(0014,5118)",0x00145118,"Wedge Total Height",WedgeTotalHeight,DS,VM::N(1));
define_tag!("(0014,5119)",0x00145119,"Wedge Front Height",WedgeFrontHeight,DS,VM::N(1));
define_tag!("(0014,511A)",0x0014511A,"Wedge Rear Height",WedgeRearHeight,DS,VM::N(1));
define_tag!("(0014,511B)",0x0014511B,"Wedge Total Width",WedgeTotalWidth,DS,VM::N(1));
define_tag!("(0014,511C)",0x0014511C,"Wedge In Contact Width",WedgeInContactWidth,DS,VM::N(1));
define_tag!("(0014,511D)",0x0014511D,"Wedge Chamfer Height",WedgeChamferHeight,DS,VM::N(1));
define_tag!("(0014,511E)",0x0014511E,"Wedge Curve",WedgeCurve,CS,VM::N(1));
define_tag!("(0014,511F)",0x0014511F,"Radius Along the Wedge",RadiusAlongWedge,DS,VM::N(1));
define_tag!("(0018,0010)",0x00180010,"Contrast/Bolus Agent",ContrastBolusAgent,LO,VM::N(1));
define_tag!("(0018,0012)",0x00180012,"Contrast/Bolus Agent Sequence",ContrastBolusAgentSequence,SQ,VM::N(1));
define_tag!("(0018,0013)",0x00180013,"Contrast/Bolus T1 Relaxivity",ContrastBolusT1Relaxivity,FL,VM::N(1));
define_tag!("(0018,0014)",0x00180014,"Contrast/Bolus Administration Route Sequence",ContrastBolusAdministrationRouteSequence,SQ,VM::N(1));
define_tag!("(0018,0015)",0x00180015,"Body Part Examined",BodyPartExamined,CS,VM::N(1));
define_tag!("(0018,0020)",0x00180020,"Scanning Sequence",ScanningSequence,CS,VM::NOrMore(1));
define_tag!("(0018,0021)",0x00180021,"Sequence Variant",SequenceVariant,CS,VM::NOrMore(1));
define_tag!("(0018,0022)",0x00180022,"Scan Options",ScanOptions,CS,VM::NOrMore(1));
define_tag!("(0018,0023)",0x00180023,"MR Acquisition Type",MRAcquisitionType,CS,VM::N(1));
define_tag!("(0018,0024)",0x00180024,"Sequence Name",SequenceName,SH,VM::N(1));
define_tag!("(0018,0025)",0x00180025,"Angio Flag",AngioFlag,CS,VM::N(1));
define_tag!("(0018,0026)",0x00180026,"Intervention Drug Information Sequence",InterventionDrugInformationSequence,SQ,VM::N(1));
define_tag!("(0018,0027)",0x00180027,"Intervention Drug Stop Time",InterventionDrugStopTime,TM,VM::N(1));
define_tag!("(0018,0028)",0x00180028,"Intervention Drug Dose",InterventionDrugDose,DS,VM::N(1));
define_tag!("(0018,0029)",0x00180029,"Intervention Drug Code Sequence",InterventionDrugCodeSequence,SQ,VM::N(1));
define_tag!("(0018,002A)",0x0018002A,"Additional Drug Sequence",AdditionalDrugSequence,SQ,VM::N(1));
define_tag!("(0018,0030)",0x00180030,"Radionuclide",Radionuclide,LO,VM::NOrMore(1));
define_tag!("(0018,0031)",0x00180031,"Radiopharmaceutical",Radiopharmaceutical,LO,VM::N(1));
define_tag!("(0018,0032)",0x00180032,"Energy Window Centerline",EnergyWindowCenterline,DS,VM::N(1));
define_tag!("(0018,0033)",0x00180033,"Energy Window Total Width",EnergyWindowTotalWidth,DS,VM::NOrMore(1));
define_tag!("(0018,0034)",0x00180034,"Intervention Drug Name",InterventionDrugName,LO,VM::N(1));
define_tag!("(0018,0035)",0x00180035,"Intervention Drug Start Time",InterventionDrugStartTime,TM,VM::N(1));
define_tag!("(0018,0036)",0x00180036,"Intervention Sequence",InterventionSequence,SQ,VM::N(1));
define_tag!("(0018,0037)",0x00180037,"Therapy Type",TherapyType,CS,VM::N(1));
define_tag!("(0018,0038)",0x00180038,"Intervention Status",InterventionStatus,CS,VM::N(1));
define_tag!("(0018,0039)",0x00180039,"Therapy Description",TherapyDescription,CS,VM::N(1));
define_tag!("(0018,003A)",0x0018003A,"Intervention Description",InterventionDescription,ST,VM::N(1));
define_tag!("(0018,0040)",0x00180040,"Cine Rate",CineRate,IS,VM::N(1));
define_tag!("(0018,0042)",0x00180042,"Initial Cine Run State",InitialCineRunState,CS,VM::N(1));
define_tag!("(0018,0050)",0x00180050,"Slice Thickness",SliceThickness,DS,VM::N(1));
define_tag!("(0018,0060)",0x00180060,"KVP",KVP,DS,VM::N(1));
define_tag!("(0018,0070)",0x00180070,"Counts Accumulated",CountsAccumulated,IS,VM::N(1));
define_tag!("(0018,0071)",0x00180071,"Acquisition Termination Condition",AcquisitionTerminationCondition,CS,VM::N(1));
define_tag!("(0018,0072)",0x00180072,"Effective Duration",EffectiveDuration,DS,VM::N(1));
define_tag!("(0018,0073)",0x00180073,"Acquisition Start Condition",AcquisitionStartCondition,CS,VM::N(1));
define_tag!("(0018,0074)",0x00180074,"Acquisition Start Condition Data",AcquisitionStartConditionData,IS,VM::N(1));
define_tag!("(0018,0075)",0x00180075,"Acquisition Termination Condition Data",AcquisitionTerminationConditionData,IS,VM::N(1));
define_tag!("(0018,0080)",0x00180080,"Repetition Time",RepetitionTime,DS,VM::N(1));
define_tag!("(0018,0081)",0x00180081,"Echo Time",EchoTime,DS,VM::N(1));
define_tag!("(0018,0082)",0x00180082,"Inversion Time",InversionTime,DS,VM::N(1));
define_tag!("(0018,0083)",0x00180083,"Number of Averages",NumberOfAverages,DS,VM::N(1));
define_tag!("(0018,0084)",0x00180084,"Imaging Frequency",ImagingFrequency,DS,VM::N(1));
define_tag!("(0018,0085)",0x00180085,"Imaged Nucleus",ImagedNucleus,SH,VM::N(1));
define_tag!("(0018,0086)",0x00180086,"Echo Number(s)",EchoNumbers,IS,VM::NOrMore(1));
define_tag!("(0018,0087)",0x00180087,"Magnetic Field Strength",MagneticFieldStrength,DS,VM::N(1));
define_tag!("(0018,0088)",0x00180088,"Spacing Between Slices",SpacingBetweenSlices,DS,VM::N(1));
define_tag!("(0018,0089)",0x00180089,"Number of Phase Encoding Steps",NumberOfPhaseEncodingSteps,IS,VM::N(1));
define_tag!("(0018,0090)",0x00180090,"Data Collection Diameter",DataCollectionDiameter,DS,VM::N(1));
define_tag!("(0018,0091)",0x00180091,"Echo Train Length",EchoTrainLength,IS,VM::N(1));
define_tag!("(0018,0093)",0x00180093,"Percent Sampling",PercentSampling,DS,VM::N(1));
define_tag!("(0018,0094)",0x00180094,"Percent Phase Field of View",PercentPhaseFieldOfView,DS,VM::N(1));
define_tag!("(0018,0095)",0x00180095,"Pixel Bandwidth",PixelBandwidth,DS,VM::N(1));
define_tag!("(0018,1000)",0x00181000,"Device Serial Number",DeviceSerialNumber,LO,VM::N(1));
define_tag!("(0018,1002)",0x00181002,"Device UID",DeviceUID,UI,VM::N(1));
define_tag!("(0018,1003)",0x00181003,"Device ID",DeviceID,LO,VM::N(1));
define_tag!("(0018,1004)",0x00181004,"Plate ID",PlateID,LO,VM::N(1));
define_tag!("(0018,1005)",0x00181005,"Generator ID",GeneratorID,LO,VM::N(1));
define_tag!("(0018,1006)",0x00181006,"Grid ID",GridID,LO,VM::N(1));
define_tag!("(0018,1007)",0x00181007,"Cassette ID",CassetteID,LO,VM::N(1));
define_tag!("(0018,1008)",0x00181008,"Gantry ID",GantryID,LO,VM::N(1));
define_tag!("(0018,1010)",0x00181010,"Secondary Capture Device ID",SecondaryCaptureDeviceID,LO,VM::N(1));
define_tag!("(0018,1011)",0x00181011,"Hardcopy Creation Device ID",HardcopyCreationDeviceID,LO,VM::N(1));
define_tag!("(0018,1012)",0x00181012,"Date of Secondary Capture",DateOfSecondaryCapture,DA,VM::N(1));
define_tag!("(0018,1014)",0x00181014,"Time of Secondary Capture",TimeOfSecondaryCapture,TM,VM::N(1));
define_tag!("(0018,1016)",0x00181016,"Secondary Capture Device Manufacturer",SecondaryCaptureDeviceManufacturer,LO,VM::N(1));
define_tag!("(0018,1017)",0x00181017,"Hardcopy Device Manufacturer",HardcopyDeviceManufacturer,LO,VM::N(1));
define_tag!("(0018,1018)",0x00181018,"Secondary Capture Device Manufacturer's Model Name",SecondaryCaptureDeviceManufacturerModelName,LO,VM::N(1));
define_tag!("(0018,1019)",0x00181019,"Secondary Capture Device Software Versions",SecondaryCaptureDeviceSoftwareVersions,LO,VM::NOrMore(1));
define_tag!("(0018,101A)",0x0018101A,"Hardcopy Device Software Version",HardcopyDeviceSoftwareVersion,LO,VM::NOrMore(1));
define_tag!("(0018,101B)",0x0018101B,"Hardcopy Device Manufacturer's Model Name",HardcopyDeviceManufacturerModelName,LO,VM::N(1));
define_tag!("(0018,1020)",0x00181020,"Software Version(s)",SoftwareVersions,LO,VM::NOrMore(1));
define_tag!("(0018,1022)",0x00181022,"Video Image Format Acquired",VideoImageFormatAcquired,SH,VM::N(1));
define_tag!("(0018,1023)",0x00181023,"Digital Image Format Acquired",DigitalImageFormatAcquired,LO,VM::N(1));
define_tag!("(0018,1030)",0x00181030,"Protocol Name",ProtocolName,LO,VM::N(1));
define_tag!("(0018,1040)",0x00181040,"Contrast/Bolus Route",ContrastBolusRoute,LO,VM::N(1));
define_tag!("(0018,1041)",0x00181041,"Contrast/Bolus Volume",ContrastBolusVolume,DS,VM::N(1));
define_tag!("(0018,1042)",0x00181042,"Contrast/Bolus Start Time",ContrastBolusStartTime,TM,VM::N(1));
define_tag!("(0018,1043)",0x00181043,"Contrast/Bolus Stop Time",ContrastBolusStopTime,TM,VM::N(1));
define_tag!("(0018,1044)",0x00181044,"Contrast/Bolus Total Dose",ContrastBolusTotalDose,DS,VM::N(1));
define_tag!("(0018,1045)",0x00181045,"Syringe Counts",SyringeCounts,IS,VM::N(1));
define_tag!("(0018,1046)",0x00181046,"Contrast Flow Rate",ContrastFlowRate,DS,VM::NOrMore(1));
define_tag!("(0018,1047)",0x00181047,"Contrast Flow Duration",ContrastFlowDuration,DS,VM::NOrMore(1));
define_tag!("(0018,1048)",0x00181048,"Contrast/Bolus Ingredient",ContrastBolusIngredient,CS,VM::N(1));
define_tag!("(0018,1049)",0x00181049,"Contrast/Bolus Ingredient Concentration",ContrastBolusIngredientConcentration,DS,VM::N(1));
define_tag!("(0018,1050)",0x00181050,"Spatial Resolution",SpatialResolution,DS,VM::N(1));
define_tag!("(0018,1060)",0x00181060,"Trigger Time",TriggerTime,DS,VM::N(1));
define_tag!("(0018,1061)",0x00181061,"Trigger Source or Type",TriggerSourceOrType,LO,VM::N(1));
define_tag!("(0018,1062)",0x00181062,"Nominal Interval",NominalInterval,IS,VM::N(1));
define_tag!("(0018,1063)",0x00181063,"Frame Time",FrameTime,DS,VM::N(1));
define_tag!("(0018,1064)",0x00181064,"Cardiac Framing Type",CardiacFramingType,LO,VM::N(1));
define_tag!("(0018,1065)",0x00181065,"Frame Time Vector",FrameTimeVector,DS,VM::NOrMore(1));
define_tag!("(0018,1066)",0x00181066,"Frame Delay",FrameDelay,DS,VM::N(1));
define_tag!("(0018,1067)",0x00181067,"Image Trigger Delay",ImageTriggerDelay,DS,VM::N(1));
define_tag!("(0018,1068)",0x00181068,"Multiplex Group Time Offset",MultiplexGroupTimeOffset,DS,VM::N(1));
define_tag!("(0018,1069)",0x00181069,"Trigger Time Offset",TriggerTimeOffset,DS,VM::N(1));
define_tag!("(0018,106A)",0x0018106A,"Synchronization Trigger",SynchronizationTrigger,CS,VM::N(1));
define_tag!("(0018,106C)",0x0018106C,"Synchronization Channel",SynchronizationChannel,US,VM::N(2));
define_tag!("(0018,106E)",0x0018106E,"Trigger Sample Position",TriggerSamplePosition,UL,VM::N(1));
define_tag!("(0018,1070)",0x00181070,"Radiopharmaceutical Route",RadiopharmaceuticalRoute,LO,VM::N(1));
define_tag!("(0018,1071)",0x00181071,"Radiopharmaceutical Volume",RadiopharmaceuticalVolume,DS,VM::N(1));
define_tag!("(0018,1072)",0x00181072,"Radiopharmaceutical Start Time",RadiopharmaceuticalStartTime,TM,VM::N(1));
define_tag!("(0018,1073)",0x00181073,"Radiopharmaceutical Stop Time",RadiopharmaceuticalStopTime,TM,VM::N(1));
define_tag!("(0018,1074)",0x00181074,"Radionuclide Total Dose",RadionuclideTotalDose,DS,VM::N(1));
define_tag!("(0018,1075)",0x00181075,"Radionuclide Half Life",RadionuclideHalfLife,DS,VM::N(1));
define_tag!("(0018,1076)",0x00181076,"Radionuclide Positron Fraction",RadionuclidePositronFraction,DS,VM::N(1));
define_tag!("(0018,1077)",0x00181077,"Radiopharmaceutical Specific Activity",RadiopharmaceuticalSpecificActivity,DS,VM::N(1));
define_tag!("(0018,1078)",0x00181078,"Radiopharmaceutical Start DateTime",RadiopharmaceuticalStartDateTime,DT,VM::N(1));
define_tag!("(0018,1079)",0x00181079,"Radiopharmaceutical Stop DateTime",RadiopharmaceuticalStopDateTime,DT,VM::N(1));
define_tag!("(0018,1080)",0x00181080,"Beat Rejection Flag",BeatRejectionFlag,CS,VM::N(1));
define_tag!("(0018,1081)",0x00181081,"Low R-R Value",LowRRValue,IS,VM::N(1));
define_tag!("(0018,1082)",0x00181082,"High R-R Value",HighRRValue,IS,VM::N(1));
define_tag!("(0018,1083)",0x00181083,"Intervals Acquired",IntervalsAcquired,IS,VM::N(1));
define_tag!("(0018,1084)",0x00181084,"Intervals Rejected",IntervalsRejected,IS,VM::N(1));
define_tag!("(0018,1085)",0x00181085,"PVC Rejection",PVCRejection,LO,VM::N(1));
define_tag!("(0018,1086)",0x00181086,"Skip Beats",SkipBeats,IS,VM::N(1));
define_tag!("(0018,1088)",0x00181088,"Heart Rate",HeartRate,IS,VM::N(1));
define_tag!("(0018,1090)",0x00181090,"Cardiac Number of Images",CardiacNumberOfImages,IS,VM::N(1));
define_tag!("(0018,1094)",0x00181094,"Trigger Window",TriggerWindow,IS,VM::N(1));
define_tag!("(0018,1100)",0x00181100,"Reconstruction Diameter",ReconstructionDiameter,DS,VM::N(1));
define_tag!("(0018,1110)",0x00181110,"Distance Source to Detector",DistanceSourceToDetector,DS,VM::N(1));
define_tag!("(0018,1111)",0x00181111,"Distance Source to Patient",DistanceSourceToPatient,DS,VM::N(1));
define_tag!("(0018,1114)",0x00181114,"Estimated Radiographic Magnification Factor",EstimatedRadiographicMagnificationFactor,DS,VM::N(1));
define_tag!("(0018,1120)",0x00181120,"Gantry/Detector Tilt",GantryDetectorTilt,DS,VM::N(1));
define_tag!("(0018,1121)",0x00181121,"Gantry/Detector Slew",GantryDetectorSlew,DS,VM::N(1));
define_tag!("(0018,1130)",0x00181130,"Table Height",TableHeight,DS,VM::N(1));
define_tag!("(0018,1131)",0x00181131,"Table Traverse",TableTraverse,DS,VM::N(1));
define_tag!("(0018,1134)",0x00181134,"Table Motion",TableMotion,CS,VM::N(1));
define_tag!("(0018,1135)",0x00181135,"Table Vertical Increment",TableVerticalIncrement,DS,VM::NOrMore(1));
define_tag!("(0018,1136)",0x00181136,"Table Lateral Increment",TableLateralIncrement,DS,VM::NOrMore(1));
define_tag!("(0018,1137)",0x00181137,"Table Longitudinal Increment",TableLongitudinalIncrement,DS,VM::NOrMore(1));
define_tag!("(0018,1138)",0x00181138,"Table Angle",TableAngle,DS,VM::N(1));
define_tag!("(0018,113A)",0x0018113A,"Table Type",TableType,CS,VM::N(1));
define_tag!("(0018,1140)",0x00181140,"Rotation Direction",RotationDirection,CS,VM::N(1));
define_tag!("(0018,1141)",0x00181141,"Angular Position",AngularPosition,DS,VM::N(1));
define_tag!("(0018,1142)",0x00181142,"Radial Position",RadialPosition,DS,VM::NOrMore(1));
define_tag!("(0018,1143)",0x00181143,"Scan Arc",ScanArc,DS,VM::N(1));
define_tag!("(0018,1144)",0x00181144,"Angular Step",AngularStep,DS,VM::N(1));
define_tag!("(0018,1145)",0x00181145,"Center of Rotation Offset",CenterOfRotationOffset,DS,VM::N(1));
define_tag!("(0018,1146)",0x00181146,"Rotation Offset",RotationOffset,DS,VM::NOrMore(1));
define_tag!("(0018,1147)",0x00181147,"Field of View Shape",FieldOfViewShape,CS,VM::N(1));
define_tag!("(0018,1149)",0x00181149,"Field of View Dimension(s)",FieldOfViewDimensions,IS,VM::MToN(1,2));
define_tag!("(0018,1150)",0x00181150,"Exposure Time",ExposureTime,IS,VM::N(1));
define_tag!("(0018,1151)",0x00181151,"X-Ray Tube Current",XRayTubeCurrent,IS,VM::N(1));
define_tag!("(0018,1152)",0x00181152,"Exposure",Exposure,IS,VM::N(1));
define_tag!("(0018,1153)",0x00181153,"Exposure in As",ExposureInuAs,IS,VM::N(1));
define_tag!("(0018,1154)",0x00181154,"Average Pulse Width",AveragePulseWidth,DS,VM::N(1));
define_tag!("(0018,1155)",0x00181155,"Radiation Setting",RadiationSetting,CS,VM::N(1));
define_tag!("(0018,1156)",0x00181156,"Rectification Type",RectificationType,CS,VM::N(1));
define_tag!("(0018,115A)",0x0018115A,"Radiation Mode",RadiationMode,CS,VM::N(1));
define_tag!("(0018,115E)",0x0018115E,"Image and Fluoroscopy Area Dose Product",ImageAndFluoroscopyAreaDoseProduct,DS,VM::N(1));
define_tag!("(0018,1160)",0x00181160,"Filter Type",FilterType,SH,VM::N(1));
define_tag!("(0018,1161)",0x00181161,"Type of Filters",TypeOfFilters,LO,VM::NOrMore(1));
define_tag!("(0018,1162)",0x00181162,"Intensifier Size",IntensifierSize,DS,VM::N(1));
define_tag!("(0018,1164)",0x00181164,"Imager Pixel Spacing",ImagerPixelSpacing,DS,VM::N(2));
define_tag!("(0018,1166)",0x00181166,"Grid",Grid,CS,VM::NOrMore(1));
define_tag!("(0018,1170)",0x00181170,"Generator Power",GeneratorPower,IS,VM::N(1));
define_tag!("(0018,1180)",0x00181180,"Collimator/grid Name",CollimatorGridName,SH,VM::N(1));
define_tag!("(0018,1181)",0x00181181,"Collimator Type",CollimatorType,CS,VM::N(1));
define_tag!("(0018,1182)",0x00181182,"Focal Distance",FocalDistance,IS,VM::MToN(1,2));
define_tag!("(0018,1183)",0x00181183,"X Focus Center",XFocusCenter,DS,VM::MToN(1,2));
define_tag!("(0018,1184)",0x00181184,"Y Focus Center",YFocusCenter,DS,VM::MToN(1,2));
define_tag!("(0018,1190)",0x00181190,"Focal Spot(s)",FocalSpots,DS,VM::NOrMore(1));
define_tag!("(0018,1191)",0x00181191,"Anode Target Material",AnodeTargetMaterial,CS,VM::N(1));
define_tag!("(0018,11A0)",0x001811A0,"Body Part Thickness",BodyPartThickness,DS,VM::N(1));
define_tag!("(0018,11A2)",0x001811A2,"Compression Force",CompressionForce,DS,VM::N(1));
define_tag!("(0018,11A4)",0x001811A4,"Paddle Description",PaddleDescription,LO,VM::N(1));
define_tag!("(0018,1200)",0x00181200,"Date of Last Calibration",DateOfLastCalibration,DA,VM::NOrMore(1));
define_tag!("(0018,1201)",0x00181201,"Time of Last Calibration",TimeOfLastCalibration,TM,VM::NOrMore(1));
define_tag!("(0018,1202)",0x00181202,"DateTime of Last Calibration",DateTimeOfLastCalibration,DT,VM::N(1));
define_tag!("(0018,1210)",0x00181210,"Convolution Kernel",ConvolutionKernel,SH,VM::NOrMore(1));
define_tag!("(0018,1240)",0x00181240,"Upper/Lower Pixel Values",UpperLowerPixelValues,IS,VM::NOrMore(1));
define_tag!("(0018,1242)",0x00181242,"Actual Frame Duration",ActualFrameDuration,IS,VM::N(1));
define_tag!("(0018,1243)",0x00181243,"Count Rate",CountRate,IS,VM::N(1));
define_tag!("(0018,1244)",0x00181244,"Preferred Playback Sequencing",PreferredPlaybackSequencing,US,VM::N(1));
define_tag!("(0018,1250)",0x00181250,"Receive Coil Name",ReceiveCoilName,SH,VM::N(1));
define_tag!("(0018,1251)",0x00181251,"Transmit Coil Name",TransmitCoilName,SH,VM::N(1));
define_tag!("(0018,1260)",0x00181260,"Plate Type",PlateType,SH,VM::N(1));
define_tag!("(0018,1261)",0x00181261,"Phosphor Type",PhosphorType,LO,VM::N(1));
define_tag!("(0018,1271)",0x00181271,"Water Equivalent Diameter",WaterEquivalentDiameter,FD,VM::N(1));
define_tag!("(0018,1272)",0x00181272,"Water Equivalent Diameter Calculation Method Code Sequence",WaterEquivalentDiameterCalculationMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0018,1300)",0x00181300,"Scan Velocity",ScanVelocity,DS,VM::N(1));
define_tag!("(0018,1301)",0x00181301,"Whole Body Technique",WholeBodyTechnique,CS,VM::NOrMore(1));
define_tag!("(0018,1302)",0x00181302,"Scan Length",ScanLength,IS,VM::N(1));
define_tag!("(0018,1310)",0x00181310,"Acquisition Matrix",AcquisitionMatrix,US,VM::N(4));
define_tag!("(0018,1312)",0x00181312,"In-plane Phase Encoding Direction",InPlanePhaseEncodingDirection,CS,VM::N(1));
define_tag!("(0018,1314)",0x00181314,"Flip Angle",FlipAngle,DS,VM::N(1));
define_tag!("(0018,1315)",0x00181315,"Variable Flip Angle Flag",VariableFlipAngleFlag,CS,VM::N(1));
define_tag!("(0018,1316)",0x00181316,"SAR",SAR,DS,VM::N(1));
define_tag!("(0018,1318)",0x00181318,"dB/dt",dBdt,DS,VM::N(1));
define_tag!("(0018,1320)",0x00181320,"B1rms",B1rms,FL,VM::N(1));
define_tag!("(0018,1400)",0x00181400,"Acquisition Device Processing Description",AcquisitionDeviceProcessingDescription,LO,VM::N(1));
define_tag!("(0018,1401)",0x00181401,"Acquisition Device Processing Code",AcquisitionDeviceProcessingCode,LO,VM::N(1));
define_tag!("(0018,1402)",0x00181402,"Cassette Orientation",CassetteOrientation,CS,VM::N(1));
define_tag!("(0018,1403)",0x00181403,"Cassette Size",CassetteSize,CS,VM::N(1));
define_tag!("(0018,1404)",0x00181404,"Exposures on Plate",ExposuresOnPlate,US,VM::N(1));
define_tag!("(0018,1405)",0x00181405,"Relative X-Ray Exposure",RelativeXRayExposure,IS,VM::N(1));
define_tag!("(0018,1411)",0x00181411,"Exposure Index",ExposureIndex,DS,VM::N(1));
define_tag!("(0018,1412)",0x00181412,"Target Exposure Index",TargetExposureIndex,DS,VM::N(1));
define_tag!("(0018,1413)",0x00181413,"Deviation Index",DeviationIndex,DS,VM::N(1));
define_tag!("(0018,1450)",0x00181450,"Column Angulation",ColumnAngulation,DS,VM::N(1));
define_tag!("(0018,1460)",0x00181460,"Tomo Layer Height",TomoLayerHeight,DS,VM::N(1));
define_tag!("(0018,1470)",0x00181470,"Tomo Angle",TomoAngle,DS,VM::N(1));
define_tag!("(0018,1480)",0x00181480,"Tomo Time",TomoTime,DS,VM::N(1));
define_tag!("(0018,1490)",0x00181490,"Tomo Type",TomoType,CS,VM::N(1));
define_tag!("(0018,1491)",0x00181491,"Tomo Class",TomoClass,CS,VM::N(1));
define_tag!("(0018,1495)",0x00181495,"Number of Tomosynthesis Source Images",NumberOfTomosynthesisSourceImages,IS,VM::N(1));
define_tag!("(0018,1500)",0x00181500,"Positioner Motion",PositionerMotion,CS,VM::N(1));
define_tag!("(0018,1508)",0x00181508,"Positioner Type",PositionerType,CS,VM::N(1));
define_tag!("(0018,1510)",0x00181510,"Positioner Primary Angle",PositionerPrimaryAngle,DS,VM::N(1));
define_tag!("(0018,1511)",0x00181511,"Positioner Secondary Angle",PositionerSecondaryAngle,DS,VM::N(1));
define_tag!("(0018,1520)",0x00181520,"Positioner Primary Angle Increment",PositionerPrimaryAngleIncrement,DS,VM::NOrMore(1));
define_tag!("(0018,1521)",0x00181521,"Positioner Secondary Angle Increment",PositionerSecondaryAngleIncrement,DS,VM::NOrMore(1));
define_tag!("(0018,1530)",0x00181530,"Detector Primary Angle",DetectorPrimaryAngle,DS,VM::N(1));
define_tag!("(0018,1531)",0x00181531,"Detector Secondary Angle",DetectorSecondaryAngle,DS,VM::N(1));
define_tag!("(0018,1600)",0x00181600,"Shutter Shape",ShutterShape,CS,VM::MToN(1,3));
define_tag!("(0018,1602)",0x00181602,"Shutter Left Vertical Edge",ShutterLeftVerticalEdge,IS,VM::N(1));
define_tag!("(0018,1604)",0x00181604,"Shutter Right Vertical Edge",ShutterRightVerticalEdge,IS,VM::N(1));
define_tag!("(0018,1606)",0x00181606,"Shutter Upper Horizontal Edge",ShutterUpperHorizontalEdge,IS,VM::N(1));
define_tag!("(0018,1608)",0x00181608,"Shutter Lower Horizontal Edge",ShutterLowerHorizontalEdge,IS,VM::N(1));
define_tag!("(0018,1610)",0x00181610,"Center of Circular Shutter",CenterOfCircularShutter,IS,VM::N(2));
define_tag!("(0018,1612)",0x00181612,"Radius of Circular Shutter",RadiusOfCircularShutter,IS,VM::N(1));
define_tag!("(0018,1620)",0x00181620,"Vertices of the Polygonal Shutter",VerticesOfThePolygonalShutter,IS,VM::MultipleOfN(2));
define_tag!("(0018,1622)",0x00181622,"Shutter Presentation Value",ShutterPresentationValue,US,VM::N(1));
define_tag!("(0018,1623)",0x00181623,"Shutter Overlay Group",ShutterOverlayGroup,US,VM::N(1));
define_tag!("(0018,1624)",0x00181624,"Shutter Presentation Color CIELab Value",ShutterPresentationColorCIELabValue,US,VM::N(3));
define_tag!("(0018,1700)",0x00181700,"Collimator Shape",CollimatorShape,CS,VM::MToN(1,3));
define_tag!("(0018,1702)",0x00181702,"Collimator Left Vertical Edge",CollimatorLeftVerticalEdge,IS,VM::N(1));
define_tag!("(0018,1704)",0x00181704,"Collimator Right Vertical Edge",CollimatorRightVerticalEdge,IS,VM::N(1));
define_tag!("(0018,1706)",0x00181706,"Collimator Upper Horizontal Edge",CollimatorUpperHorizontalEdge,IS,VM::N(1));
define_tag!("(0018,1708)",0x00181708,"Collimator Lower Horizontal Edge",CollimatorLowerHorizontalEdge,IS,VM::N(1));
define_tag!("(0018,1710)",0x00181710,"Center of Circular Collimator",CenterOfCircularCollimator,IS,VM::N(2));
define_tag!("(0018,1712)",0x00181712,"Radius of Circular Collimator",RadiusOfCircularCollimator,IS,VM::N(1));
define_tag!("(0018,1720)",0x00181720,"Vertices of the Polygonal Collimator",VerticesOfThePolygonalCollimator,IS,VM::MultipleOfN(2));
define_tag!("(0018,1800)",0x00181800,"Acquisition Time Synchronized",AcquisitionTimeSynchronized,CS,VM::N(1));
define_tag!("(0018,1801)",0x00181801,"Time Source",TimeSource,SH,VM::N(1));
define_tag!("(0018,1802)",0x00181802,"Time Distribution Protocol",TimeDistributionProtocol,CS,VM::N(1));
define_tag!("(0018,1803)",0x00181803,"NTP Source Address",NTPSourceAddress,LO,VM::N(1));
define_tag!("(0018,2001)",0x00182001,"Page Number Vector",PageNumberVector,IS,VM::NOrMore(1));
define_tag!("(0018,2002)",0x00182002,"Frame Label Vector",FrameLabelVector,SH,VM::NOrMore(1));
define_tag!("(0018,2003)",0x00182003,"Frame Primary Angle Vector",FramePrimaryAngleVector,DS,VM::NOrMore(1));
define_tag!("(0018,2004)",0x00182004,"Frame Secondary Angle Vector",FrameSecondaryAngleVector,DS,VM::NOrMore(1));
define_tag!("(0018,2005)",0x00182005,"Slice Location Vector",SliceLocationVector,DS,VM::NOrMore(1));
define_tag!("(0018,2006)",0x00182006,"Display Window Label Vector",DisplayWindowLabelVector,SH,VM::NOrMore(1));
define_tag!("(0018,2010)",0x00182010,"Nominal Scanned Pixel Spacing",NominalScannedPixelSpacing,DS,VM::N(2));
define_tag!("(0018,2020)",0x00182020,"Digitizing Device Transport Direction",DigitizingDeviceTransportDirection,CS,VM::N(1));
define_tag!("(0018,2030)",0x00182030,"Rotation of Scanned Film",RotationOfScannedFilm,DS,VM::N(1));
define_tag!("(0018,2041)",0x00182041,"Biopsy Target Sequence",BiopsyTargetSequence,SQ,VM::N(1));
define_tag!("(0018,2042)",0x00182042,"Target UID",TargetUID,UI,VM::N(1));
define_tag!("(0018,2043)",0x00182043,"Localizing Cursor Position",LocalizingCursorPosition,FL,VM::N(2));
define_tag!("(0018,2044)",0x00182044,"Calculated Target Position",CalculatedTargetPosition,FL,VM::N(3));
define_tag!("(0018,2045)",0x00182045,"Target Label",TargetLabel,SH,VM::N(1));
define_tag!("(0018,2046)",0x00182046,"Displayed Z Value",DisplayedZValue,FL,VM::N(1));
define_tag!("(0018,3100)",0x00183100,"IVUS Acquisition",IVUSAcquisition,CS,VM::N(1));
define_tag!("(0018,3101)",0x00183101,"IVUS Pullback Rate",IVUSPullbackRate,DS,VM::N(1));
define_tag!("(0018,3102)",0x00183102,"IVUS Gated Rate",IVUSGatedRate,DS,VM::N(1));
define_tag!("(0018,3103)",0x00183103,"IVUS Pullback Start Frame Number",IVUSPullbackStartFrameNumber,IS,VM::N(1));
define_tag!("(0018,3104)",0x00183104,"IVUS Pullback Stop Frame Number",IVUSPullbackStopFrameNumber,IS,VM::N(1));
define_tag!("(0018,3105)",0x00183105,"Lesion Number",LesionNumber,IS,VM::NOrMore(1));
define_tag!("(0018,4000)",0x00184000,"Acquisition Comments",AcquisitionComments,LT,VM::N(1));
define_tag!("(0018,5000)",0x00185000,"Output Power",OutputPower,SH,VM::NOrMore(1));
define_tag!("(0018,5010)",0x00185010,"Transducer Data",TransducerData,LO,VM::NOrMore(1));
define_tag!("(0018,5012)",0x00185012,"Focus Depth",FocusDepth,DS,VM::N(1));
define_tag!("(0018,5020)",0x00185020,"Processing Function",ProcessingFunction,LO,VM::N(1));
define_tag!("(0018,5021)",0x00185021,"Postprocessing Function",PostprocessingFunction,LO,VM::N(1));
define_tag!("(0018,5022)",0x00185022,"Mechanical Index",MechanicalIndex,DS,VM::N(1));
define_tag!("(0018,5024)",0x00185024,"Bone Thermal Index",BoneThermalIndex,DS,VM::N(1));
define_tag!("(0018,5026)",0x00185026,"Cranial Thermal Index",CranialThermalIndex,DS,VM::N(1));
define_tag!("(0018,5027)",0x00185027,"Soft Tissue Thermal Index",SoftTissueThermalIndex,DS,VM::N(1));
define_tag!("(0018,5028)",0x00185028,"Soft Tissue-focus Thermal Index",SoftTissueFocusThermalIndex,DS,VM::N(1));
define_tag!("(0018,5029)",0x00185029,"Soft Tissue-surface Thermal Index",SoftTissueSurfaceThermalIndex,DS,VM::N(1));
define_tag!("(0018,5030)",0x00185030,"Dynamic Range",DynamicRange,DS,VM::N(1));
define_tag!("(0018,5040)",0x00185040,"Total Gain",TotalGain,DS,VM::N(1));
define_tag!("(0018,5050)",0x00185050,"Depth of Scan Field",DepthOfScanField,IS,VM::N(1));
define_tag!("(0018,5100)",0x00185100,"Patient Position",PatientPosition,CS,VM::N(1));
define_tag!("(0018,5101)",0x00185101,"View Position",ViewPosition,CS,VM::N(1));
define_tag!("(0018,5104)",0x00185104,"Projection Eponymous Name Code Sequence",ProjectionEponymousNameCodeSequence,SQ,VM::N(1));
define_tag!("(0018,5210)",0x00185210,"Image Transformation Matrix",ImageTransformationMatrix,DS,VM::N(6));
define_tag!("(0018,5212)",0x00185212,"Image Translation Vector",ImageTranslationVector,DS,VM::N(3));
define_tag!("(0018,6000)",0x00186000,"Sensitivity",Sensitivity,DS,VM::N(1));
define_tag!("(0018,6011)",0x00186011,"Sequence of Ultrasound Regions",SequenceOfUltrasoundRegions,SQ,VM::N(1));
define_tag!("(0018,6012)",0x00186012,"Region Spatial Format",RegionSpatialFormat,US,VM::N(1));
define_tag!("(0018,6014)",0x00186014,"Region Data Type",RegionDataType,US,VM::N(1));
define_tag!("(0018,6016)",0x00186016,"Region Flags",RegionFlags,UL,VM::N(1));
define_tag!("(0018,6018)",0x00186018,"Region Location Min X0",RegionLocationMinX0,UL,VM::N(1));
define_tag!("(0018,601A)",0x0018601A,"Region Location Min Y0",RegionLocationMinY0,UL,VM::N(1));
define_tag!("(0018,601C)",0x0018601C,"Region Location Max X1",RegionLocationMaxX1,UL,VM::N(1));
define_tag!("(0018,601E)",0x0018601E,"Region Location Max Y1",RegionLocationMaxY1,UL,VM::N(1));
define_tag!("(0018,6020)",0x00186020,"Reference Pixel X0",ReferencePixelX0,SL,VM::N(1));
define_tag!("(0018,6022)",0x00186022,"Reference Pixel Y0",ReferencePixelY0,SL,VM::N(1));
define_tag!("(0018,6024)",0x00186024,"Physical Units X Direction",PhysicalUnitsXDirection,US,VM::N(1));
define_tag!("(0018,6026)",0x00186026,"Physical Units Y Direction",PhysicalUnitsYDirection,US,VM::N(1));
define_tag!("(0018,6028)",0x00186028,"Reference Pixel Physical Value X",ReferencePixelPhysicalValueX,FD,VM::N(1));
define_tag!("(0018,602A)",0x0018602A,"Reference Pixel Physical Value Y",ReferencePixelPhysicalValueY,FD,VM::N(1));
define_tag!("(0018,602C)",0x0018602C,"Physical Delta X",PhysicalDeltaX,FD,VM::N(1));
define_tag!("(0018,602E)",0x0018602E,"Physical Delta Y",PhysicalDeltaY,FD,VM::N(1));
define_tag!("(0018,6030)",0x00186030,"Transducer Frequency",TransducerFrequency,UL,VM::N(1));
define_tag!("(0018,6031)",0x00186031,"Transducer Type",TransducerType,CS,VM::N(1));
define_tag!("(0018,6032)",0x00186032,"Pulse Repetition Frequency",PulseRepetitionFrequency,UL,VM::N(1));
define_tag!("(0018,6034)",0x00186034,"Doppler Correction Angle",DopplerCorrectionAngle,FD,VM::N(1));
define_tag!("(0018,6036)",0x00186036,"Steering Angle",SteeringAngle,FD,VM::N(1));
define_tag!("(0018,6038)",0x00186038,"Doppler Sample Volume X Position (Retired)",DopplerSampleVolumeXPositionRetired,UL,VM::N(1));
define_tag!("(0018,6039)",0x00186039,"Doppler Sample Volume X Position",DopplerSampleVolumeXPosition,SL,VM::N(1));
define_tag!("(0018,603A)",0x0018603A,"Doppler Sample Volume Y Position (Retired)",DopplerSampleVolumeYPositionRetired,UL,VM::N(1));
define_tag!("(0018,603B)",0x0018603B,"Doppler Sample Volume Y Position",DopplerSampleVolumeYPosition,SL,VM::N(1));
define_tag!("(0018,603C)",0x0018603C,"TM-Line Position X0 (Retired)",TMLinePositionX0Retired,UL,VM::N(1));
define_tag!("(0018,603D)",0x0018603D,"TM-Line Position X0",TMLinePositionX0,SL,VM::N(1));
define_tag!("(0018,603E)",0x0018603E,"TM-Line Position Y0 (Retired)",TMLinePositionY0Retired,UL,VM::N(1));
define_tag!("(0018,603F)",0x0018603F,"TM-Line Position Y0",TMLinePositionY0,SL,VM::N(1));
define_tag!("(0018,6040)",0x00186040,"TM-Line Position X1 (Retired)",TMLinePositionX1Retired,UL,VM::N(1));
define_tag!("(0018,6041)",0x00186041,"TM-Line Position X1",TMLinePositionX1,SL,VM::N(1));
define_tag!("(0018,6042)",0x00186042,"TM-Line Position Y1 (Retired)",TMLinePositionY1Retired,UL,VM::N(1));
define_tag!("(0018,6043)",0x00186043,"TM-Line Position Y1",TMLinePositionY1,SL,VM::N(1));
define_tag!("(0018,6044)",0x00186044,"Pixel Component Organization",PixelComponentOrganization,US,VM::N(1));
define_tag!("(0018,6046)",0x00186046,"Pixel Component Mask",PixelComponentMask,UL,VM::N(1));
define_tag!("(0018,6048)",0x00186048,"Pixel Component Range Start",PixelComponentRangeStart,UL,VM::N(1));
define_tag!("(0018,604A)",0x0018604A,"Pixel Component Range Stop",PixelComponentRangeStop,UL,VM::N(1));
define_tag!("(0018,604C)",0x0018604C,"Pixel Component Physical Units",PixelComponentPhysicalUnits,US,VM::N(1));
define_tag!("(0018,604E)",0x0018604E,"Pixel Component Data Type",PixelComponentDataType,US,VM::N(1));
define_tag!("(0018,6050)",0x00186050,"Number of Table Break Points",NumberOfTableBreakPoints,UL,VM::N(1));
define_tag!("(0018,6052)",0x00186052,"Table of X Break Points",TableOfXBreakPoints,UL,VM::NOrMore(1));
define_tag!("(0018,6054)",0x00186054,"Table of Y Break Points",TableOfYBreakPoints,FD,VM::NOrMore(1));
define_tag!("(0018,6056)",0x00186056,"Number of Table Entries",NumberOfTableEntries,UL,VM::N(1));
define_tag!("(0018,6058)",0x00186058,"Table of Pixel Values",TableOfPixelValues,UL,VM::NOrMore(1));
define_tag!("(0018,605A)",0x0018605A,"Table of Parameter Values",TableOfParameterValues,FL,VM::NOrMore(1));
define_tag!("(0018,6060)",0x00186060,"R Wave Time Vector",RWaveTimeVector,FL,VM::NOrMore(1));
define_tag!("(0018,7000)",0x00187000,"Detector Conditions Nominal Flag",DetectorConditionsNominalFlag,CS,VM::N(1));
define_tag!("(0018,7001)",0x00187001,"Detector Temperature",DetectorTemperature,DS,VM::N(1));
define_tag!("(0018,7004)",0x00187004,"Detector Type",DetectorType,CS,VM::N(1));
define_tag!("(0018,7005)",0x00187005,"Detector Configuration",DetectorConfiguration,CS,VM::N(1));
define_tag!("(0018,7006)",0x00187006,"Detector Description",DetectorDescription,LT,VM::N(1));
define_tag!("(0018,7008)",0x00187008,"Detector Mode",DetectorMode,LT,VM::N(1));
define_tag!("(0018,700A)",0x0018700A,"Detector ID",DetectorID,SH,VM::N(1));
define_tag!("(0018,700C)",0x0018700C,"Date of Last Detector Calibration",DateOfLastDetectorCalibration,DA,VM::N(1));
define_tag!("(0018,700E)",0x0018700E,"Time of Last Detector Calibration",TimeOfLastDetectorCalibration,TM,VM::N(1));
define_tag!("(0018,7010)",0x00187010,"Exposures on Detector Since Last Calibration",ExposuresOnDetectorSinceLastCalibration,IS,VM::N(1));
define_tag!("(0018,7011)",0x00187011,"Exposures on Detector Since Manufactured",ExposuresOnDetectorSinceManufactured,IS,VM::N(1));
define_tag!("(0018,7012)",0x00187012,"Detector Time Since Last Exposure",DetectorTimeSinceLastExposure,DS,VM::N(1));
define_tag!("(0018,7014)",0x00187014,"Detector Active Time",DetectorActiveTime,DS,VM::N(1));
define_tag!("(0018,7016)",0x00187016,"Detector Activation Offset From Exposure",DetectorActivationOffsetFromExposure,DS,VM::N(1));
define_tag!("(0018,701A)",0x0018701A,"Detector Binning",DetectorBinning,DS,VM::N(2));
define_tag!("(0018,7020)",0x00187020,"Detector Element Physical Size",DetectorElementPhysicalSize,DS,VM::N(2));
define_tag!("(0018,7022)",0x00187022,"Detector Element Spacing",DetectorElementSpacing,DS,VM::N(2));
define_tag!("(0018,7024)",0x00187024,"Detector Active Shape",DetectorActiveShape,CS,VM::N(1));
define_tag!("(0018,7026)",0x00187026,"Detector Active Dimension(s)",DetectorActiveDimensions,DS,VM::MToN(1,2));
define_tag!("(0018,7028)",0x00187028,"Detector Active Origin",DetectorActiveOrigin,DS,VM::N(2));
define_tag!("(0018,702A)",0x0018702A,"Detector Manufacturer Name",DetectorManufacturerName,LO,VM::N(1));
define_tag!("(0018,702B)",0x0018702B,"Detector Manufacturer's Model Name",DetectorManufacturerModelName,LO,VM::N(1));
define_tag!("(0018,7030)",0x00187030,"Field of View Origin",FieldOfViewOrigin,DS,VM::N(2));
define_tag!("(0018,7032)",0x00187032,"Field of View Rotation",FieldOfViewRotation,DS,VM::N(1));
define_tag!("(0018,7034)",0x00187034,"Field of View Horizontal Flip",FieldOfViewHorizontalFlip,CS,VM::N(1));
define_tag!("(0018,7036)",0x00187036,"Pixel Data Area Origin Relative To FOV",PixelDataAreaOriginRelativeToFOV,FL,VM::N(2));
define_tag!("(0018,7038)",0x00187038,"Pixel Data Area Rotation Angle Relative To FOV",PixelDataAreaRotationAngleRelativeToFOV,FL,VM::N(1));
define_tag!("(0018,7040)",0x00187040,"Grid Absorbing Material",GridAbsorbingMaterial,LT,VM::N(1));
define_tag!("(0018,7041)",0x00187041,"Grid Spacing Material",GridSpacingMaterial,LT,VM::N(1));
define_tag!("(0018,7042)",0x00187042,"Grid Thickness",GridThickness,DS,VM::N(1));
define_tag!("(0018,7044)",0x00187044,"Grid Pitch",GridPitch,DS,VM::N(1));
define_tag!("(0018,7046)",0x00187046,"Grid Aspect Ratio",GridAspectRatio,IS,VM::N(2));
define_tag!("(0018,7048)",0x00187048,"Grid Period",GridPeriod,DS,VM::N(1));
define_tag!("(0018,704C)",0x0018704C,"Grid Focal Distance",GridFocalDistance,DS,VM::N(1));
define_tag!("(0018,7050)",0x00187050,"Filter Material",FilterMaterial,CS,VM::NOrMore(1));
define_tag!("(0018,7052)",0x00187052,"Filter Thickness Minimum",FilterThicknessMinimum,DS,VM::NOrMore(1));
define_tag!("(0018,7054)",0x00187054,"Filter Thickness Maximum",FilterThicknessMaximum,DS,VM::NOrMore(1));
define_tag!("(0018,7056)",0x00187056,"Filter Beam Path Length Minimum",FilterBeamPathLengthMinimum,FL,VM::NOrMore(1));
define_tag!("(0018,7058)",0x00187058,"Filter Beam Path Length Maximum",FilterBeamPathLengthMaximum,FL,VM::NOrMore(1));
define_tag!("(0018,7060)",0x00187060,"Exposure Control Mode",ExposureControlMode,CS,VM::N(1));
define_tag!("(0018,7062)",0x00187062,"Exposure Control Mode Description",ExposureControlModeDescription,LT,VM::N(1));
define_tag!("(0018,7064)",0x00187064,"Exposure Status",ExposureStatus,CS,VM::N(1));
define_tag!("(0018,7065)",0x00187065,"Phototimer Setting",PhototimerSetting,DS,VM::N(1));
define_tag!("(0018,8150)",0x00188150,"Exposure Time in S",ExposureTimeInuS,DS,VM::N(1));
define_tag!("(0018,8151)",0x00188151,"X-Ray Tube Current in A",XRayTubeCurrentInuA,DS,VM::N(1));
define_tag!("(0018,9004)",0x00189004,"Content Qualification",ContentQualification,CS,VM::N(1));
define_tag!("(0018,9005)",0x00189005,"Pulse Sequence Name",PulseSequenceName,SH,VM::N(1));
define_tag!("(0018,9006)",0x00189006,"MR Imaging Modifier Sequence",MRImagingModifierSequence,SQ,VM::N(1));
define_tag!("(0018,9008)",0x00189008,"Echo Pulse Sequence",EchoPulseSequence,CS,VM::N(1));
define_tag!("(0018,9009)",0x00189009,"Inversion Recovery",InversionRecovery,CS,VM::N(1));
define_tag!("(0018,9010)",0x00189010,"Flow Compensation",FlowCompensation,CS,VM::N(1));
define_tag!("(0018,9011)",0x00189011,"Multiple Spin Echo",MultipleSpinEcho,CS,VM::N(1));
define_tag!("(0018,9012)",0x00189012,"Multi-planar Excitation",MultiPlanarExcitation,CS,VM::N(1));
define_tag!("(0018,9014)",0x00189014,"Phase Contrast",PhaseContrast,CS,VM::N(1));
define_tag!("(0018,9015)",0x00189015,"Time of Flight Contrast",TimeOfFlightContrast,CS,VM::N(1));
define_tag!("(0018,9016)",0x00189016,"Spoiling",Spoiling,CS,VM::N(1));
define_tag!("(0018,9017)",0x00189017,"Steady State Pulse Sequence",SteadyStatePulseSequence,CS,VM::N(1));
define_tag!("(0018,9018)",0x00189018,"Echo Planar Pulse Sequence",EchoPlanarPulseSequence,CS,VM::N(1));
define_tag!("(0018,9019)",0x00189019,"Tag Angle First Axis",TagAngleFirstAxis,FD,VM::N(1));
define_tag!("(0018,9020)",0x00189020,"Magnetization Transfer",MagnetizationTransfer,CS,VM::N(1));
define_tag!("(0018,9021)",0x00189021,"T2 Preparation",T2Preparation,CS,VM::N(1));
define_tag!("(0018,9022)",0x00189022,"Blood Signal Nulling",BloodSignalNulling,CS,VM::N(1));
define_tag!("(0018,9024)",0x00189024,"Saturation Recovery",SaturationRecovery,CS,VM::N(1));
define_tag!("(0018,9025)",0x00189025,"Spectrally Selected Suppression",SpectrallySelectedSuppression,CS,VM::N(1));
define_tag!("(0018,9026)",0x00189026,"Spectrally Selected Excitation",SpectrallySelectedExcitation,CS,VM::N(1));
define_tag!("(0018,9027)",0x00189027,"Spatial Pre-saturation",SpatialPresaturation,CS,VM::N(1));
define_tag!("(0018,9028)",0x00189028,"Tagging",Tagging,CS,VM::N(1));
define_tag!("(0018,9029)",0x00189029,"Oversampling Phase",OversamplingPhase,CS,VM::N(1));
define_tag!("(0018,9030)",0x00189030,"Tag Spacing First Dimension",TagSpacingFirstDimension,FD,VM::N(1));
define_tag!("(0018,9032)",0x00189032,"Geometry of k-Space Traversal",GeometryOfKSpaceTraversal,CS,VM::N(1));
define_tag!("(0018,9033)",0x00189033,"Segmented k-Space Traversal",SegmentedKSpaceTraversal,CS,VM::N(1));
define_tag!("(0018,9034)",0x00189034,"Rectilinear Phase Encode Reordering",RectilinearPhaseEncodeReordering,CS,VM::N(1));
define_tag!("(0018,9035)",0x00189035,"Tag Thickness",TagThickness,FD,VM::N(1));
define_tag!("(0018,9036)",0x00189036,"Partial Fourier Direction",PartialFourierDirection,CS,VM::N(1));
define_tag!("(0018,9037)",0x00189037,"Cardiac Synchronization Technique",CardiacSynchronizationTechnique,CS,VM::N(1));
define_tag!("(0018,9041)",0x00189041,"Receive Coil Manufacturer Name",ReceiveCoilManufacturerName,LO,VM::N(1));
define_tag!("(0018,9042)",0x00189042,"MR Receive Coil Sequence",MRReceiveCoilSequence,SQ,VM::N(1));
define_tag!("(0018,9043)",0x00189043,"Receive Coil Type",ReceiveCoilType,CS,VM::N(1));
define_tag!("(0018,9044)",0x00189044,"Quadrature Receive Coil",QuadratureReceiveCoil,CS,VM::N(1));
define_tag!("(0018,9045)",0x00189045,"Multi-Coil Definition Sequence",MultiCoilDefinitionSequence,SQ,VM::N(1));
define_tag!("(0018,9046)",0x00189046,"Multi-Coil Configuration",MultiCoilConfiguration,LO,VM::N(1));
define_tag!("(0018,9047)",0x00189047,"Multi-Coil Element Name",MultiCoilElementName,SH,VM::N(1));
define_tag!("(0018,9048)",0x00189048,"Multi-Coil Element Used",MultiCoilElementUsed,CS,VM::N(1));
define_tag!("(0018,9049)",0x00189049,"MR Transmit Coil Sequence",MRTransmitCoilSequence,SQ,VM::N(1));
define_tag!("(0018,9050)",0x00189050,"Transmit Coil Manufacturer Name",TransmitCoilManufacturerName,LO,VM::N(1));
define_tag!("(0018,9051)",0x00189051,"Transmit Coil Type",TransmitCoilType,CS,VM::N(1));
define_tag!("(0018,9052)",0x00189052,"Spectral Width",SpectralWidth,FD,VM::MToN(1,2));
define_tag!("(0018,9053)",0x00189053,"Chemical Shift Reference",ChemicalShiftReference,FD,VM::MToN(1,2));
define_tag!("(0018,9054)",0x00189054,"Volume Localization Technique",VolumeLocalizationTechnique,CS,VM::N(1));
define_tag!("(0018,9058)",0x00189058,"MR Acquisition Frequency Encoding Steps",MRAcquisitionFrequencyEncodingSteps,US,VM::N(1));
define_tag!("(0018,9059)",0x00189059,"De-coupling",Decoupling,CS,VM::N(1));
define_tag!("(0018,9060)",0x00189060,"De-coupled Nucleus",DecoupledNucleus,CS,VM::MToN(1,2));
define_tag!("(0018,9061)",0x00189061,"De-coupling Frequency",DecouplingFrequency,FD,VM::MToN(1,2));
define_tag!("(0018,9062)",0x00189062,"De-coupling Method",DecouplingMethod,CS,VM::N(1));
define_tag!("(0018,9063)",0x00189063,"De-coupling Chemical Shift Reference",DecouplingChemicalShiftReference,FD,VM::MToN(1,2));
define_tag!("(0018,9064)",0x00189064,"k-space Filtering",KSpaceFiltering,CS,VM::N(1));
define_tag!("(0018,9065)",0x00189065,"Time Domain Filtering",TimeDomainFiltering,CS,VM::MToN(1,2));
define_tag!("(0018,9066)",0x00189066,"Number of Zero Fills",NumberOfZeroFills,US,VM::MToN(1,2));
define_tag!("(0018,9067)",0x00189067,"Baseline Correction",BaselineCorrection,CS,VM::N(1));
define_tag!("(0018,9069)",0x00189069,"Parallel Reduction Factor In-plane",ParallelReductionFactorInPlane,FD,VM::N(1));
define_tag!("(0018,9070)",0x00189070,"Cardiac R-R Interval Specified",CardiacRRIntervalSpecified,FD,VM::N(1));
define_tag!("(0018,9073)",0x00189073,"Acquisition Duration",AcquisitionDuration,FD,VM::N(1));
define_tag!("(0018,9074)",0x00189074,"Frame Acquisition DateTime",FrameAcquisitionDateTime,DT,VM::N(1));
define_tag!("(0018,9075)",0x00189075,"Diffusion Directionality",DiffusionDirectionality,CS,VM::N(1));
define_tag!("(0018,9076)",0x00189076,"Diffusion Gradient Direction Sequence",DiffusionGradientDirectionSequence,SQ,VM::N(1));
define_tag!("(0018,9077)",0x00189077,"Parallel Acquisition",ParallelAcquisition,CS,VM::N(1));
define_tag!("(0018,9078)",0x00189078,"Parallel Acquisition Technique",ParallelAcquisitionTechnique,CS,VM::N(1));
define_tag!("(0018,9079)",0x00189079,"Inversion Times",InversionTimes,FD,VM::NOrMore(1));
define_tag!("(0018,9080)",0x00189080,"Metabolite Map Description",MetaboliteMapDescription,ST,VM::N(1));
define_tag!("(0018,9081)",0x00189081,"Partial Fourier",PartialFourier,CS,VM::N(1));
define_tag!("(0018,9082)",0x00189082,"Effective Echo Time",EffectiveEchoTime,FD,VM::N(1));
define_tag!("(0018,9083)",0x00189083,"Metabolite Map Code Sequence",MetaboliteMapCodeSequence,SQ,VM::N(1));
define_tag!("(0018,9084)",0x00189084,"Chemical Shift Sequence",ChemicalShiftSequence,SQ,VM::N(1));
define_tag!("(0018,9085)",0x00189085,"Cardiac Signal Source",CardiacSignalSource,CS,VM::N(1));
define_tag!("(0018,9087)",0x00189087,"Diffusion b-value",DiffusionBValue,FD,VM::N(1));
define_tag!("(0018,9089)",0x00189089,"Diffusion Gradient Orientation",DiffusionGradientOrientation,FD,VM::N(3));
define_tag!("(0018,9090)",0x00189090,"Velocity Encoding Direction",VelocityEncodingDirection,FD,VM::N(3));
define_tag!("(0018,9091)",0x00189091,"Velocity Encoding Minimum Value",VelocityEncodingMinimumValue,FD,VM::N(1));
define_tag!("(0018,9092)",0x00189092,"Velocity Encoding Acquisition Sequence",VelocityEncodingAcquisitionSequence,SQ,VM::N(1));
define_tag!("(0018,9093)",0x00189093,"Number of k-Space Trajectories",NumberOfKSpaceTrajectories,US,VM::N(1));
define_tag!("(0018,9094)",0x00189094,"Coverage of k-Space",CoverageOfKSpace,CS,VM::N(1));
define_tag!("(0018,9095)",0x00189095,"Spectroscopy Acquisition Phase Rows",SpectroscopyAcquisitionPhaseRows,UL,VM::N(1));
define_tag!("(0018,9096)",0x00189096,"Parallel Reduction Factor In-plane (Retired)",ParallelReductionFactorInPlaneRetired,FD,VM::N(1));
define_tag!("(0018,9098)",0x00189098,"Transmitter Frequency",TransmitterFrequency,FD,VM::MToN(1,2));
define_tag!("(0018,9100)",0x00189100,"Resonant Nucleus",ResonantNucleus,CS,VM::MToN(1,2));
define_tag!("(0018,9101)",0x00189101,"Frequency Correction",FrequencyCorrection,CS,VM::N(1));
define_tag!("(0018,9103)",0x00189103,"MR Spectroscopy FOV/Geometry Sequence",MRSpectroscopyFOVGeometrySequence,SQ,VM::N(1));
define_tag!("(0018,9104)",0x00189104,"Slab Thickness",SlabThickness,FD,VM::N(1));
define_tag!("(0018,9105)",0x00189105,"Slab Orientation",SlabOrientation,FD,VM::N(3));
define_tag!("(0018,9106)",0x00189106,"Mid Slab Position",MidSlabPosition,FD,VM::N(3));
define_tag!("(0018,9107)",0x00189107,"MR Spatial Saturation Sequence",MRSpatialSaturationSequence,SQ,VM::N(1));
define_tag!("(0018,9112)",0x00189112,"MR Timing and Related Parameters Sequence",MRTimingAndRelatedParametersSequence,SQ,VM::N(1));
define_tag!("(0018,9114)",0x00189114,"MR Echo Sequence",MREchoSequence,SQ,VM::N(1));
define_tag!("(0018,9115)",0x00189115,"MR Modifier Sequence",MRModifierSequence,SQ,VM::N(1));
define_tag!("(0018,9117)",0x00189117,"MR Diffusion Sequence",MRDiffusionSequence,SQ,VM::N(1));
define_tag!("(0018,9118)",0x00189118,"Cardiac Synchronization Sequence",CardiacSynchronizationSequence,SQ,VM::N(1));
define_tag!("(0018,9119)",0x00189119,"MR Averages Sequence",MRAveragesSequence,SQ,VM::N(1));
define_tag!("(0018,9125)",0x00189125,"MR FOV/Geometry Sequence",MRFOVGeometrySequence,SQ,VM::N(1));
define_tag!("(0018,9126)",0x00189126,"Volume Localization Sequence",VolumeLocalizationSequence,SQ,VM::N(1));
define_tag!("(0018,9127)",0x00189127,"Spectroscopy Acquisition Data Columns",SpectroscopyAcquisitionDataColumns,UL,VM::N(1));
define_tag!("(0018,9147)",0x00189147,"Diffusion Anisotropy Type",DiffusionAnisotropyType,CS,VM::N(1));
define_tag!("(0018,9151)",0x00189151,"Frame Reference DateTime",FrameReferenceDateTime,DT,VM::N(1));
define_tag!("(0018,9152)",0x00189152,"MR Metabolite Map Sequence",MRMetaboliteMapSequence,SQ,VM::N(1));
define_tag!("(0018,9155)",0x00189155,"Parallel Reduction Factor out-of-plane",ParallelReductionFactorOutOfPlane,FD,VM::N(1));
define_tag!("(0018,9159)",0x00189159,"Spectroscopy Acquisition Out-of-plane Phase Steps",SpectroscopyAcquisitionOutOfPlanePhaseSteps,UL,VM::N(1));
define_tag!("(0018,9166)",0x00189166,"Bulk Motion Status",BulkMotionStatus,CS,VM::N(1));
define_tag!("(0018,9168)",0x00189168,"Parallel Reduction Factor Second In-plane",ParallelReductionFactorSecondInPlane,FD,VM::N(1));
define_tag!("(0018,9169)",0x00189169,"Cardiac Beat Rejection Technique",CardiacBeatRejectionTechnique,CS,VM::N(1));
define_tag!("(0018,9170)",0x00189170,"Respiratory Motion Compensation Technique",RespiratoryMotionCompensationTechnique,CS,VM::N(1));
define_tag!("(0018,9171)",0x00189171,"Respiratory Signal Source",RespiratorySignalSource,CS,VM::N(1));
define_tag!("(0018,9172)",0x00189172,"Bulk Motion Compensation Technique",BulkMotionCompensationTechnique,CS,VM::N(1));
define_tag!("(0018,9173)",0x00189173,"Bulk Motion Signal Source",BulkMotionSignalSource,CS,VM::N(1));
define_tag!("(0018,9174)",0x00189174,"Applicable Safety Standard Agency",ApplicableSafetyStandardAgency,CS,VM::N(1));
define_tag!("(0018,9175)",0x00189175,"Applicable Safety Standard Description",ApplicableSafetyStandardDescription,LO,VM::N(1));
define_tag!("(0018,9176)",0x00189176,"Operating Mode Sequence",OperatingModeSequence,SQ,VM::N(1));
define_tag!("(0018,9177)",0x00189177,"Operating Mode Type",OperatingModeType,CS,VM::N(1));
define_tag!("(0018,9178)",0x00189178,"Operating Mode",OperatingMode,CS,VM::N(1));
define_tag!("(0018,9179)",0x00189179,"Specific Absorption Rate Definition",SpecificAbsorptionRateDefinition,CS,VM::N(1));
define_tag!("(0018,9180)",0x00189180,"Gradient Output Type",GradientOutputType,CS,VM::N(1));
define_tag!("(0018,9181)",0x00189181,"Specific Absorption Rate Value",SpecificAbsorptionRateValue,FD,VM::N(1));
define_tag!("(0018,9182)",0x00189182,"Gradient Output",GradientOutput,FD,VM::N(1));
define_tag!("(0018,9183)",0x00189183,"Flow Compensation Direction",FlowCompensationDirection,CS,VM::N(1));
define_tag!("(0018,9184)",0x00189184,"Tagging Delay",TaggingDelay,FD,VM::N(1));
define_tag!("(0018,9185)",0x00189185,"Respiratory Motion Compensation Technique Description",RespiratoryMotionCompensationTechniqueDescription,ST,VM::N(1));
define_tag!("(0018,9186)",0x00189186,"Respiratory Signal Source ID",RespiratorySignalSourceID,SH,VM::N(1));
define_tag!("(0018,9195)",0x00189195,"Chemical Shift Minimum Integration Limit in Hz",ChemicalShiftMinimumIntegrationLimitInHz,FD,VM::N(1));
define_tag!("(0018,9196)",0x00189196,"Chemical Shift Maximum Integration Limit in Hz",ChemicalShiftMaximumIntegrationLimitInHz,FD,VM::N(1));
define_tag!("(0018,9197)",0x00189197,"MR Velocity Encoding Sequence",MRVelocityEncodingSequence,SQ,VM::N(1));
define_tag!("(0018,9198)",0x00189198,"First Order Phase Correction",FirstOrderPhaseCorrection,CS,VM::N(1));
define_tag!("(0018,9199)",0x00189199,"Water Referenced Phase Correction",WaterReferencedPhaseCorrection,CS,VM::N(1));
define_tag!("(0018,9200)",0x00189200,"MR Spectroscopy Acquisition Type",MRSpectroscopyAcquisitionType,CS,VM::N(1));
define_tag!("(0018,9214)",0x00189214,"Respiratory Cycle Position",RespiratoryCyclePosition,CS,VM::N(1));
define_tag!("(0018,9217)",0x00189217,"Velocity Encoding Maximum Value",VelocityEncodingMaximumValue,FD,VM::N(1));
define_tag!("(0018,9218)",0x00189218,"Tag Spacing Second Dimension",TagSpacingSecondDimension,FD,VM::N(1));
define_tag!("(0018,9219)",0x00189219,"Tag Angle Second Axis",TagAngleSecondAxis,SS,VM::N(1));
define_tag!("(0018,9220)",0x00189220,"Frame Acquisition Duration",FrameAcquisitionDuration,FD,VM::N(1));
define_tag!("(0018,9226)",0x00189226,"MR Image Frame Type Sequence",MRImageFrameTypeSequence,SQ,VM::N(1));
define_tag!("(0018,9227)",0x00189227,"MR Spectroscopy Frame Type Sequence",MRSpectroscopyFrameTypeSequence,SQ,VM::N(1));
define_tag!("(0018,9231)",0x00189231,"MR Acquisition Phase Encoding Steps in-plane",MRAcquisitionPhaseEncodingStepsInPlane,US,VM::N(1));
define_tag!("(0018,9232)",0x00189232,"MR Acquisition Phase Encoding Steps out-of-plane",MRAcquisitionPhaseEncodingStepsOutOfPlane,US,VM::N(1));
define_tag!("(0018,9234)",0x00189234,"Spectroscopy Acquisition Phase Columns",SpectroscopyAcquisitionPhaseColumns,UL,VM::N(1));
define_tag!("(0018,9236)",0x00189236,"Cardiac Cycle Position",CardiacCyclePosition,CS,VM::N(1));
define_tag!("(0018,9239)",0x00189239,"Specific Absorption Rate Sequence",SpecificAbsorptionRateSequence,SQ,VM::N(1));
define_tag!("(0018,9240)",0x00189240,"RF Echo Train Length",RFEchoTrainLength,US,VM::N(1));
define_tag!("(0018,9241)",0x00189241,"Gradient Echo Train Length",GradientEchoTrainLength,US,VM::N(1));
define_tag!("(0018,9250)",0x00189250,"Arterial Spin Labeling Contrast",ArterialSpinLabelingContrast,CS,VM::N(1));
define_tag!("(0018,9251)",0x00189251,"MR Arterial Spin Labeling Sequence",MRArterialSpinLabelingSequence,SQ,VM::N(1));
define_tag!("(0018,9252)",0x00189252,"ASL Technique Description",ASLTechniqueDescription,LO,VM::N(1));
define_tag!("(0018,9253)",0x00189253,"ASL Slab Number",ASLSlabNumber,US,VM::N(1));
define_tag!("(0018,9254)",0x00189254,"ASL Slab Thickness",ASLSlabThickness,FD,VM::N(1));
define_tag!("(0018,9255)",0x00189255,"ASL Slab Orientation",ASLSlabOrientation,FD,VM::N(3));
define_tag!("(0018,9256)",0x00189256,"ASL Mid Slab Position",ASLMidSlabPosition,FD,VM::N(3));
define_tag!("(0018,9257)",0x00189257,"ASL Context",ASLContext,CS,VM::N(1));
define_tag!("(0018,9258)",0x00189258,"ASL Pulse Train Duration",ASLPulseTrainDuration,UL,VM::N(1));
define_tag!("(0018,9259)",0x00189259,"ASL Crusher Flag",ASLCrusherFlag,CS,VM::N(1));
define_tag!("(0018,925A)",0x0018925A,"ASL Crusher Flow Limit",ASLCrusherFlowLimit,FD,VM::N(1));
define_tag!("(0018,925B)",0x0018925B,"ASL Crusher Description",ASLCrusherDescription,LO,VM::N(1));
define_tag!("(0018,925C)",0x0018925C,"ASL Bolus Cut-off Flag",ASLBolusCutoffFlag,CS,VM::N(1));
define_tag!("(0018,925D)",0x0018925D,"ASL Bolus Cut-off Timing Sequence",ASLBolusCutoffTimingSequence,SQ,VM::N(1));
define_tag!("(0018,925E)",0x0018925E,"ASL Bolus Cut-off Technique",ASLBolusCutoffTechnique,LO,VM::N(1));
define_tag!("(0018,925F)",0x0018925F,"ASL Bolus Cut-off Delay Time",ASLBolusCutoffDelayTime,UL,VM::N(1));
define_tag!("(0018,9260)",0x00189260,"ASL Slab Sequence",ASLSlabSequence,SQ,VM::N(1));
define_tag!("(0018,9295)",0x00189295,"Chemical Shift Minimum Integration Limit in ppm",ChemicalShiftMinimumIntegrationLimitInppm,FD,VM::N(1));
define_tag!("(0018,9296)",0x00189296,"Chemical Shift Maximum Integration Limit in ppm",ChemicalShiftMaximumIntegrationLimitInppm,FD,VM::N(1));
define_tag!("(0018,9297)",0x00189297,"Water Reference Acquisition",WaterReferenceAcquisition,CS,VM::N(1));
define_tag!("(0018,9298)",0x00189298,"Echo Peak Position",EchoPeakPosition,IS,VM::N(1));
define_tag!("(0018,9301)",0x00189301,"CT Acquisition Type Sequence",CTAcquisitionTypeSequence,SQ,VM::N(1));
define_tag!("(0018,9302)",0x00189302,"Acquisition Type",AcquisitionType,CS,VM::N(1));
define_tag!("(0018,9303)",0x00189303,"Tube Angle",TubeAngle,FD,VM::N(1));
define_tag!("(0018,9304)",0x00189304,"CT Acquisition Details Sequence",CTAcquisitionDetailsSequence,SQ,VM::N(1));
define_tag!("(0018,9305)",0x00189305,"Revolution Time",RevolutionTime,FD,VM::N(1));
define_tag!("(0018,9306)",0x00189306,"Single Collimation Width",SingleCollimationWidth,FD,VM::N(1));
define_tag!("(0018,9307)",0x00189307,"Total Collimation Width",TotalCollimationWidth,FD,VM::N(1));
define_tag!("(0018,9308)",0x00189308,"CT Table Dynamics Sequence",CTTableDynamicsSequence,SQ,VM::N(1));
define_tag!("(0018,9309)",0x00189309,"Table Speed",TableSpeed,FD,VM::N(1));
define_tag!("(0018,9310)",0x00189310,"Table Feed per Rotation",TableFeedPerRotation,FD,VM::N(1));
define_tag!("(0018,9311)",0x00189311,"Spiral Pitch Factor",SpiralPitchFactor,FD,VM::N(1));
define_tag!("(0018,9312)",0x00189312,"CT Geometry Sequence",CTGeometrySequence,SQ,VM::N(1));
define_tag!("(0018,9313)",0x00189313,"Data Collection Center (Patient)",DataCollectionCenterPatient,FD,VM::N(3));
define_tag!("(0018,9314)",0x00189314,"CT Reconstruction Sequence",CTReconstructionSequence,SQ,VM::N(1));
define_tag!("(0018,9315)",0x00189315,"Reconstruction Algorithm",ReconstructionAlgorithm,CS,VM::N(1));
define_tag!("(0018,9316)",0x00189316,"Convolution Kernel Group",ConvolutionKernelGroup,CS,VM::N(1));
define_tag!("(0018,9317)",0x00189317,"Reconstruction Field of View",ReconstructionFieldOfView,FD,VM::N(2));
define_tag!("(0018,9318)",0x00189318,"Reconstruction Target Center (Patient)",ReconstructionTargetCenterPatient,FD,VM::N(3));
define_tag!("(0018,9319)",0x00189319,"Reconstruction Angle",ReconstructionAngle,FD,VM::N(1));
define_tag!("(0018,9320)",0x00189320,"Image Filter",ImageFilter,SH,VM::N(1));
define_tag!("(0018,9321)",0x00189321,"CT Exposure Sequence",CTExposureSequence,SQ,VM::N(1));
define_tag!("(0018,9322)",0x00189322,"Reconstruction Pixel Spacing",ReconstructionPixelSpacing,FD,VM::N(2));
define_tag!("(0018,9323)",0x00189323,"Exposure Modulation Type",ExposureModulationType,CS,VM::N(1));
define_tag!("(0018,9324)",0x00189324,"Estimated Dose Saving",EstimatedDoseSaving,FD,VM::N(1));
define_tag!("(0018,9325)",0x00189325,"CT X-Ray Details Sequence",CTXRayDetailsSequence,SQ,VM::N(1));
define_tag!("(0018,9326)",0x00189326,"CT Position Sequence",CTPositionSequence,SQ,VM::N(1));
define_tag!("(0018,9327)",0x00189327,"Table Position",TablePosition,FD,VM::N(1));
define_tag!("(0018,9328)",0x00189328,"Exposure Time in ms",ExposureTimeInms,FD,VM::N(1));
define_tag!("(0018,9329)",0x00189329,"CT Image Frame Type Sequence",CTImageFrameTypeSequence,SQ,VM::N(1));
define_tag!("(0018,9330)",0x00189330,"X-Ray Tube Current in mA",XRayTubeCurrentInmA,FD,VM::N(1));
define_tag!("(0018,9332)",0x00189332,"Exposure in mAs",ExposureInmAs,FD,VM::N(1));
define_tag!("(0018,9333)",0x00189333,"Constant Volume Flag",ConstantVolumeFlag,CS,VM::N(1));
define_tag!("(0018,9334)",0x00189334,"Fluoroscopy Flag",FluoroscopyFlag,CS,VM::N(1));
define_tag!("(0018,9335)",0x00189335,"Distance Source to Data Collection Center",DistanceSourceToDataCollectionCenter,FD,VM::N(1));
define_tag!("(0018,9337)",0x00189337,"Contrast/Bolus Agent Number",ContrastBolusAgentNumber,US,VM::N(1));
define_tag!("(0018,9338)",0x00189338,"Contrast/Bolus Ingredient Code Sequence",ContrastBolusIngredientCodeSequence,SQ,VM::N(1));
define_tag!("(0018,9340)",0x00189340,"Contrast Administration Profile Sequence",ContrastAdministrationProfileSequence,SQ,VM::N(1));
define_tag!("(0018,9341)",0x00189341,"Contrast/Bolus Usage Sequence",ContrastBolusUsageSequence,SQ,VM::N(1));
define_tag!("(0018,9342)",0x00189342,"Contrast/Bolus Agent Administered",ContrastBolusAgentAdministered,CS,VM::N(1));
define_tag!("(0018,9343)",0x00189343,"Contrast/Bolus Agent Detected",ContrastBolusAgentDetected,CS,VM::N(1));
define_tag!("(0018,9344)",0x00189344,"Contrast/Bolus Agent Phase",ContrastBolusAgentPhase,CS,VM::N(1));
define_tag!("(0018,9345)",0x00189345,"CTDIvol",CTDIvol,FD,VM::N(1));
define_tag!("(0018,9346)",0x00189346,"CTDI Phantom Type Code Sequence",CTDIPhantomTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0018,9351)",0x00189351,"Calcium Scoring Mass Factor Patient",CalciumScoringMassFactorPatient,FL,VM::N(1));
define_tag!("(0018,9352)",0x00189352,"Calcium Scoring Mass Factor Device",CalciumScoringMassFactorDevice,FL,VM::N(3));
define_tag!("(0018,9353)",0x00189353,"Energy Weighting Factor",EnergyWeightingFactor,FL,VM::N(1));
define_tag!("(0018,9360)",0x00189360,"CT Additional X-Ray Source Sequence",CTAdditionalXRaySourceSequence,SQ,VM::N(1));
define_tag!("(0018,9401)",0x00189401,"Projection Pixel Calibration Sequence",ProjectionPixelCalibrationSequence,SQ,VM::N(1));
define_tag!("(0018,9402)",0x00189402,"Distance Source to Isocenter",DistanceSourceToIsocenter,FL,VM::N(1));
define_tag!("(0018,9403)",0x00189403,"Distance Object to Table Top",DistanceObjectToTableTop,FL,VM::N(1));
define_tag!("(0018,9404)",0x00189404,"Object Pixel Spacing in Center of Beam",ObjectPixelSpacingInCenterOfBeam,FL,VM::N(2));
define_tag!("(0018,9405)",0x00189405,"Positioner Position Sequence",PositionerPositionSequence,SQ,VM::N(1));
define_tag!("(0018,9406)",0x00189406,"Table Position Sequence",TablePositionSequence,SQ,VM::N(1));
define_tag!("(0018,9407)",0x00189407,"Collimator Shape Sequence",CollimatorShapeSequence,SQ,VM::N(1));
define_tag!("(0018,9410)",0x00189410,"Planes in Acquisition",PlanesInAcquisition,CS,VM::N(1));
define_tag!("(0018,9412)",0x00189412,"XA/XRF Frame Characteristics Sequence",XAXRFFrameCharacteristicsSequence,SQ,VM::N(1));
define_tag!("(0018,9417)",0x00189417,"Frame Acquisition Sequence",FrameAcquisitionSequence,SQ,VM::N(1));
define_tag!("(0018,9420)",0x00189420,"X-Ray Receptor Type",XRayReceptorType,CS,VM::N(1));
define_tag!("(0018,9423)",0x00189423,"Acquisition Protocol Name",AcquisitionProtocolName,LO,VM::N(1));
define_tag!("(0018,9424)",0x00189424,"Acquisition Protocol Description",AcquisitionProtocolDescription,LT,VM::N(1));
define_tag!("(0018,9425)",0x00189425,"Contrast/Bolus Ingredient Opaque",ContrastBolusIngredientOpaque,CS,VM::N(1));
define_tag!("(0018,9426)",0x00189426,"Distance Receptor Plane to Detector Housing",DistanceReceptorPlaneToDetectorHousing,FL,VM::N(1));
define_tag!("(0018,9427)",0x00189427,"Intensifier Active Shape",IntensifierActiveShape,CS,VM::N(1));
define_tag!("(0018,9428)",0x00189428,"Intensifier Active Dimension(s)",IntensifierActiveDimensions,FL,VM::MToN(1,2));
define_tag!("(0018,9429)",0x00189429,"Physical Detector Size",PhysicalDetectorSize,FL,VM::N(2));
define_tag!("(0018,9430)",0x00189430,"Position of Isocenter Projection",PositionOfIsocenterProjection,FL,VM::N(2));
define_tag!("(0018,9432)",0x00189432,"Field of View Sequence",FieldOfViewSequence,SQ,VM::N(1));
define_tag!("(0018,9433)",0x00189433,"Field of View Description",FieldOfViewDescription,LO,VM::N(1));
define_tag!("(0018,9434)",0x00189434,"Exposure Control Sensing Regions Sequence",ExposureControlSensingRegionsSequence,SQ,VM::N(1));
define_tag!("(0018,9435)",0x00189435,"Exposure Control Sensing Region Shape",ExposureControlSensingRegionShape,CS,VM::N(1));
define_tag!("(0018,9436)",0x00189436,"Exposure Control Sensing Region Left Vertical Edge",ExposureControlSensingRegionLeftVerticalEdge,SS,VM::N(1));
define_tag!("(0018,9437)",0x00189437,"Exposure Control Sensing Region Right Vertical Edge",ExposureControlSensingRegionRightVerticalEdge,SS,VM::N(1));
define_tag!("(0018,9438)",0x00189438,"Exposure Control Sensing Region Upper Horizontal Edge",ExposureControlSensingRegionUpperHorizontalEdge,SS,VM::N(1));
define_tag!("(0018,9439)",0x00189439,"Exposure Control Sensing Region Lower Horizontal Edge",ExposureControlSensingRegionLowerHorizontalEdge,SS,VM::N(1));
define_tag!("(0018,9440)",0x00189440,"Center of Circular Exposure Control Sensing Region",CenterOfCircularExposureControlSensingRegion,SS,VM::N(2));
define_tag!("(0018,9441)",0x00189441,"Radius of Circular Exposure Control Sensing Region",RadiusOfCircularExposureControlSensingRegion,US,VM::N(1));
define_tag!("(0018,9442)",0x00189442,"Vertices of the Polygonal Exposure Control Sensing Region",VerticesOfThePolygonalExposureControlSensingRegion,SS,VM::NOrMore(2));
define_tag!("(0018,9447)",0x00189447,"Column Angulation (Patient)",ColumnAngulationPatient,FL,VM::N(1));
define_tag!("(0018,9449)",0x00189449,"Beam Angle",BeamAngle,FL,VM::N(1));
define_tag!("(0018,9451)",0x00189451,"Frame Detector Parameters Sequence",FrameDetectorParametersSequence,SQ,VM::N(1));
define_tag!("(0018,9452)",0x00189452,"Calculated Anatomy Thickness",CalculatedAnatomyThickness,FL,VM::N(1));
define_tag!("(0018,9455)",0x00189455,"Calibration Sequence",CalibrationSequence,SQ,VM::N(1));
define_tag!("(0018,9456)",0x00189456,"Object Thickness Sequence",ObjectThicknessSequence,SQ,VM::N(1));
define_tag!("(0018,9457)",0x00189457,"Plane Identification",PlaneIdentification,CS,VM::N(1));
define_tag!("(0018,9461)",0x00189461,"Field of View Dimension(s) in Float",FieldOfViewDimensionsInFloat,FL,VM::MToN(1,2));
define_tag!("(0018,9462)",0x00189462,"Isocenter Reference System Sequence",IsocenterReferenceSystemSequence,SQ,VM::N(1));
define_tag!("(0018,9463)",0x00189463,"Positioner Isocenter Primary Angle",PositionerIsocenterPrimaryAngle,FL,VM::N(1));
define_tag!("(0018,9464)",0x00189464,"Positioner Isocenter Secondary Angle",PositionerIsocenterSecondaryAngle,FL,VM::N(1));
define_tag!("(0018,9465)",0x00189465,"Positioner Isocenter Detector Rotation Angle",PositionerIsocenterDetectorRotationAngle,FL,VM::N(1));
define_tag!("(0018,9466)",0x00189466,"Table X Position to Isocenter",TableXPositionToIsocenter,FL,VM::N(1));
define_tag!("(0018,9467)",0x00189467,"Table Y Position to Isocenter",TableYPositionToIsocenter,FL,VM::N(1));
define_tag!("(0018,9468)",0x00189468,"Table Z Position to Isocenter",TableZPositionToIsocenter,FL,VM::N(1));
define_tag!("(0018,9469)",0x00189469,"Table Horizontal Rotation Angle",TableHorizontalRotationAngle,FL,VM::N(1));
define_tag!("(0018,9470)",0x00189470,"Table Head Tilt Angle",TableHeadTiltAngle,FL,VM::N(1));
define_tag!("(0018,9471)",0x00189471,"Table Cradle Tilt Angle",TableCradleTiltAngle,FL,VM::N(1));
define_tag!("(0018,9472)",0x00189472,"Frame Display Shutter Sequence",FrameDisplayShutterSequence,SQ,VM::N(1));
define_tag!("(0018,9473)",0x00189473,"Acquired Image Area Dose Product",AcquiredImageAreaDoseProduct,FL,VM::N(1));
define_tag!("(0018,9474)",0x00189474,"C-arm Positioner Tabletop Relationship",CArmPositionerTabletopRelationship,CS,VM::N(1));
define_tag!("(0018,9476)",0x00189476,"X-Ray Geometry Sequence",XRayGeometrySequence,SQ,VM::N(1));
define_tag!("(0018,9477)",0x00189477,"Irradiation Event Identification Sequence",IrradiationEventIdentificationSequence,SQ,VM::N(1));
define_tag!("(0018,9504)",0x00189504,"X-Ray 3D Frame Type Sequence",XRay3DFrameTypeSequence,SQ,VM::N(1));
define_tag!("(0018,9506)",0x00189506,"Contributing Sources Sequence",ContributingSourcesSequence,SQ,VM::N(1));
define_tag!("(0018,9507)",0x00189507,"X-Ray 3D Acquisition Sequence",XRay3DAcquisitionSequence,SQ,VM::N(1));
define_tag!("(0018,9508)",0x00189508,"Primary Positioner Scan Arc",PrimaryPositionerScanArc,FL,VM::N(1));
define_tag!("(0018,9509)",0x00189509,"Secondary Positioner Scan Arc",SecondaryPositionerScanArc,FL,VM::N(1));
define_tag!("(0018,9510)",0x00189510,"Primary Positioner Scan Start Angle",PrimaryPositionerScanStartAngle,FL,VM::N(1));
define_tag!("(0018,9511)",0x00189511,"Secondary Positioner Scan Start Angle",SecondaryPositionerScanStartAngle,FL,VM::N(1));
define_tag!("(0018,9514)",0x00189514,"Primary Positioner Increment",PrimaryPositionerIncrement,FL,VM::N(1));
define_tag!("(0018,9515)",0x00189515,"Secondary Positioner Increment",SecondaryPositionerIncrement,FL,VM::N(1));
define_tag!("(0018,9516)",0x00189516,"Start Acquisition DateTime",StartAcquisitionDateTime,DT,VM::N(1));
define_tag!("(0018,9517)",0x00189517,"End Acquisition DateTime",EndAcquisitionDateTime,DT,VM::N(1));
define_tag!("(0018,9518)",0x00189518,"Primary Positioner Increment Sign",PrimaryPositionerIncrementSign,SS,VM::N(1));
define_tag!("(0018,9519)",0x00189519,"Secondary Positioner Increment Sign",SecondaryPositionerIncrementSign,SS,VM::N(1));
define_tag!("(0018,9524)",0x00189524,"Application Name",ApplicationName,LO,VM::N(1));
define_tag!("(0018,9525)",0x00189525,"Application Version",ApplicationVersion,LO,VM::N(1));
define_tag!("(0018,9526)",0x00189526,"Application Manufacturer",ApplicationManufacturer,LO,VM::N(1));
define_tag!("(0018,9527)",0x00189527,"Algorithm Type",AlgorithmType,CS,VM::N(1));
define_tag!("(0018,9528)",0x00189528,"Algorithm Description",AlgorithmDescription,LO,VM::N(1));
define_tag!("(0018,9530)",0x00189530,"X-Ray 3D Reconstruction Sequence",XRay3DReconstructionSequence,SQ,VM::N(1));
define_tag!("(0018,9531)",0x00189531,"Reconstruction Description",ReconstructionDescription,LO,VM::N(1));
define_tag!("(0018,9538)",0x00189538,"Per Projection Acquisition Sequence",PerProjectionAcquisitionSequence,SQ,VM::N(1));
define_tag!("(0018,9541)",0x00189541,"Detector Position Sequence",DetectorPositionSequence,SQ,VM::N(1));
define_tag!("(0018,9542)",0x00189542,"X-Ray Acquisition Dose Sequence",XRayAcquisitionDoseSequence,SQ,VM::N(1));
define_tag!("(0018,9543)",0x00189543,"X-Ray Source Isocenter Primary Angle",XRaySourceIsocenterPrimaryAngle,FD,VM::N(1));
define_tag!("(0018,9544)",0x00189544,"X-Ray Source Isocenter Secondary Angle",XRaySourceIsocenterSecondaryAngle,FD,VM::N(1));
define_tag!("(0018,9545)",0x00189545,"Breast Support Isocenter Primary Angle",BreastSupportIsocenterPrimaryAngle,FD,VM::N(1));
define_tag!("(0018,9546)",0x00189546,"Breast Support Isocenter Secondary Angle",BreastSupportIsocenterSecondaryAngle,FD,VM::N(1));
define_tag!("(0018,9547)",0x00189547,"Breast Support X Position to Isocenter",BreastSupportXPositionToIsocenter,FD,VM::N(1));
define_tag!("(0018,9548)",0x00189548,"Breast Support Y Position to Isocenter",BreastSupportYPositionToIsocenter,FD,VM::N(1));
define_tag!("(0018,9549)",0x00189549,"Breast Support Z Position to Isocenter",BreastSupportZPositionToIsocenter,FD,VM::N(1));
define_tag!("(0018,9550)",0x00189550,"Detector Isocenter Primary Angle",DetectorIsocenterPrimaryAngle,FD,VM::N(1));
define_tag!("(0018,9551)",0x00189551,"Detector Isocenter Secondary Angle",DetectorIsocenterSecondaryAngle,FD,VM::N(1));
define_tag!("(0018,9552)",0x00189552,"Detector X Position to Isocenter",DetectorXPositionToIsocenter,FD,VM::N(1));
define_tag!("(0018,9553)",0x00189553,"Detector Y Position to Isocenter",DetectorYPositionToIsocenter,FD,VM::N(1));
define_tag!("(0018,9554)",0x00189554,"Detector Z Position to Isocenter",DetectorZPositionToIsocenter,FD,VM::N(1));
define_tag!("(0018,9555)",0x00189555,"X-Ray Grid Sequence",XRayGridSequence,SQ,VM::N(1));
define_tag!("(0018,9556)",0x00189556,"X-Ray Filter Sequence",XRayFilterSequence,SQ,VM::N(1));
define_tag!("(0018,9557)",0x00189557,"Detector Active Area TLHC Position",DetectorActiveAreaTLHCPosition,FD,VM::N(3));
define_tag!("(0018,9558)",0x00189558,"Detector Active Area Orientation",DetectorActiveAreaOrientation,FD,VM::N(6));
define_tag!("(0018,9559)",0x00189559,"Positioner Primary Angle Direction",PositionerPrimaryAngleDirection,CS,VM::N(1));
define_tag!("(0018,9601)",0x00189601,"Diffusion b-matrix Sequence",DiffusionBMatrixSequence,SQ,VM::N(1));
define_tag!("(0018,9602)",0x00189602,"Diffusion b-value XX",DiffusionBValueXX,FD,VM::N(1));
define_tag!("(0018,9603)",0x00189603,"Diffusion b-value XY",DiffusionBValueXY,FD,VM::N(1));
define_tag!("(0018,9604)",0x00189604,"Diffusion b-value XZ",DiffusionBValueXZ,FD,VM::N(1));
define_tag!("(0018,9605)",0x00189605,"Diffusion b-value YY",DiffusionBValueYY,FD,VM::N(1));
define_tag!("(0018,9606)",0x00189606,"Diffusion b-value YZ",DiffusionBValueYZ,FD,VM::N(1));
define_tag!("(0018,9607)",0x00189607,"Diffusion b-value ZZ",DiffusionBValueZZ,FD,VM::N(1));
define_tag!("(0018,9621)",0x00189621,"Functional MR Sequence",FunctionalMRSequence,SQ,VM::N(1));
define_tag!("(0018,9622)",0x00189622,"Functional Settling Phase Frames Present",FunctionalSettlingPhaseFramesPresent,CS,VM::N(1));
define_tag!("(0018,9623)",0x00189623,"Functional Sync Pulse",FunctionalSyncPulse,DT,VM::N(1));
define_tag!("(0018,9624)",0x00189624,"Settling Phase Frame",SettlingPhaseFrame,CS,VM::N(1));
define_tag!("(0018,9701)",0x00189701,"Decay Correction DateTime",DecayCorrectionDateTime,DT,VM::N(1));
define_tag!("(0018,9715)",0x00189715,"Start Density Threshold",StartDensityThreshold,FD,VM::N(1));
define_tag!("(0018,9716)",0x00189716,"Start Relative Density Difference Threshold",StartRelativeDensityDifferenceThreshold,FD,VM::N(1));
define_tag!("(0018,9717)",0x00189717,"Start Cardiac Trigger Count Threshold",StartCardiacTriggerCountThreshold,FD,VM::N(1));
define_tag!("(0018,9718)",0x00189718,"Start Respiratory Trigger Count Threshold",StartRespiratoryTriggerCountThreshold,FD,VM::N(1));
define_tag!("(0018,9719)",0x00189719,"Termination Counts Threshold",TerminationCountsThreshold,FD,VM::N(1));
define_tag!("(0018,9720)",0x00189720,"Termination Density Threshold",TerminationDensityThreshold,FD,VM::N(1));
define_tag!("(0018,9721)",0x00189721,"Termination Relative Density Threshold",TerminationRelativeDensityThreshold,FD,VM::N(1));
define_tag!("(0018,9722)",0x00189722,"Termination Time Threshold",TerminationTimeThreshold,FD,VM::N(1));
define_tag!("(0018,9723)",0x00189723,"Termination Cardiac Trigger Count Threshold",TerminationCardiacTriggerCountThreshold,FD,VM::N(1));
define_tag!("(0018,9724)",0x00189724,"Termination Respiratory Trigger Count Threshold",TerminationRespiratoryTriggerCountThreshold,FD,VM::N(1));
define_tag!("(0018,9725)",0x00189725,"Detector Geometry",DetectorGeometry,CS,VM::N(1));
define_tag!("(0018,9726)",0x00189726,"Transverse Detector Separation",TransverseDetectorSeparation,FD,VM::N(1));
define_tag!("(0018,9727)",0x00189727,"Axial Detector Dimension",AxialDetectorDimension,FD,VM::N(1));
define_tag!("(0018,9729)",0x00189729,"Radiopharmaceutical Agent Number",RadiopharmaceuticalAgentNumber,US,VM::N(1));
define_tag!("(0018,9732)",0x00189732,"PET Frame Acquisition Sequence",PETFrameAcquisitionSequence,SQ,VM::N(1));
define_tag!("(0018,9733)",0x00189733,"PET Detector Motion Details Sequence",PETDetectorMotionDetailsSequence,SQ,VM::N(1));
define_tag!("(0018,9734)",0x00189734,"PET Table Dynamics Sequence",PETTableDynamicsSequence,SQ,VM::N(1));
define_tag!("(0018,9735)",0x00189735,"PET Position Sequence",PETPositionSequence,SQ,VM::N(1));
define_tag!("(0018,9736)",0x00189736,"PET Frame Correction Factors Sequence",PETFrameCorrectionFactorsSequence,SQ,VM::N(1));
define_tag!("(0018,9737)",0x00189737,"Radiopharmaceutical Usage Sequence",RadiopharmaceuticalUsageSequence,SQ,VM::N(1));
define_tag!("(0018,9738)",0x00189738,"Attenuation Correction Source",AttenuationCorrectionSource,CS,VM::N(1));
define_tag!("(0018,9739)",0x00189739,"Number of Iterations",NumberOfIterations,US,VM::N(1));
define_tag!("(0018,9740)",0x00189740,"Number of Subsets",NumberOfSubsets,US,VM::N(1));
define_tag!("(0018,9749)",0x00189749,"PET Reconstruction Sequence",PETReconstructionSequence,SQ,VM::N(1));
define_tag!("(0018,9751)",0x00189751,"PET Frame Type Sequence",PETFrameTypeSequence,SQ,VM::N(1));
define_tag!("(0018,9755)",0x00189755,"Time of Flight Information Used",TimeOfFlightInformationUsed,CS,VM::N(1));
define_tag!("(0018,9756)",0x00189756,"Reconstruction Type",ReconstructionType,CS,VM::N(1));
define_tag!("(0018,9758)",0x00189758,"Decay Corrected",DecayCorrected,CS,VM::N(1));
define_tag!("(0018,9759)",0x00189759,"Attenuation Corrected",AttenuationCorrected,CS,VM::N(1));
define_tag!("(0018,9760)",0x00189760,"Scatter Corrected",ScatterCorrected,CS,VM::N(1));
define_tag!("(0018,9761)",0x00189761,"Dead Time Corrected",DeadTimeCorrected,CS,VM::N(1));
define_tag!("(0018,9762)",0x00189762,"Gantry Motion Corrected",GantryMotionCorrected,CS,VM::N(1));
define_tag!("(0018,9763)",0x00189763,"Patient Motion Corrected",PatientMotionCorrected,CS,VM::N(1));
define_tag!("(0018,9764)",0x00189764,"Count Loss Normalization Corrected",CountLossNormalizationCorrected,CS,VM::N(1));
define_tag!("(0018,9765)",0x00189765,"Randoms Corrected",RandomsCorrected,CS,VM::N(1));
define_tag!("(0018,9766)",0x00189766,"Non-uniform Radial Sampling Corrected",NonUniformRadialSamplingCorrected,CS,VM::N(1));
define_tag!("(0018,9767)",0x00189767,"Sensitivity Calibrated",SensitivityCalibrated,CS,VM::N(1));
define_tag!("(0018,9768)",0x00189768,"Detector Normalization Correction",DetectorNormalizationCorrection,CS,VM::N(1));
define_tag!("(0018,9769)",0x00189769,"Iterative Reconstruction Method",IterativeReconstructionMethod,CS,VM::N(1));
define_tag!("(0018,9770)",0x00189770,"Attenuation Correction Temporal Relationship",AttenuationCorrectionTemporalRelationship,CS,VM::N(1));
define_tag!("(0018,9771)",0x00189771,"Patient Physiological State Sequence",PatientPhysiologicalStateSequence,SQ,VM::N(1));
define_tag!("(0018,9772)",0x00189772,"Patient Physiological State Code Sequence",PatientPhysiologicalStateCodeSequence,SQ,VM::N(1));
define_tag!("(0018,9801)",0x00189801,"Depth(s) of Focus",DepthsOfFocus,FD,VM::NOrMore(1));
define_tag!("(0018,9803)",0x00189803,"Excluded Intervals Sequence",ExcludedIntervalsSequence,SQ,VM::N(1));
define_tag!("(0018,9804)",0x00189804,"Exclusion Start DateTime",ExclusionStartDateTime,DT,VM::N(1));
define_tag!("(0018,9805)",0x00189805,"Exclusion Duration",ExclusionDuration,FD,VM::N(1));
define_tag!("(0018,9806)",0x00189806,"US Image Description Sequence",USImageDescriptionSequence,SQ,VM::N(1));
define_tag!("(0018,9807)",0x00189807,"Image Data Type Sequence",ImageDataTypeSequence,SQ,VM::N(1));
define_tag!("(0018,9808)",0x00189808,"Data Type",DataType,CS,VM::N(1));
define_tag!("(0018,9809)",0x00189809,"Transducer Scan Pattern Code Sequence",TransducerScanPatternCodeSequence,SQ,VM::N(1));
define_tag!("(0018,980B)",0x0018980B,"Aliased Data Type",AliasedDataType,CS,VM::N(1));
define_tag!("(0018,980C)",0x0018980C,"Position Measuring Device Used",PositionMeasuringDeviceUsed,CS,VM::N(1));
define_tag!("(0018,980D)",0x0018980D,"Transducer Geometry Code Sequence",TransducerGeometryCodeSequence,SQ,VM::N(1));
define_tag!("(0018,980E)",0x0018980E,"Transducer Beam Steering Code Sequence",TransducerBeamSteeringCodeSequence,SQ,VM::N(1));
define_tag!("(0018,980F)",0x0018980F,"Transducer Application Code Sequence",TransducerApplicationCodeSequence,SQ,VM::N(1));
define_tag!("(0018,9810)",0x00189810,"Zero Velocity Pixel Value",ZeroVelocityPixelValue,Option::None,VM::N(1));
define_tag!("(0018,A001)",0x0018A001,"Contributing Equipment Sequence",ContributingEquipmentSequence,SQ,VM::N(1));
define_tag!("(0018,A002)",0x0018A002,"Contribution DateTime",ContributionDateTime,DT,VM::N(1));
define_tag!("(0018,A003)",0x0018A003,"Contribution Description",ContributionDescription,ST,VM::N(1));
define_tag!("(0020,000D)",0x0020000D,"Study Instance UID",StudyInstanceUID,UI,VM::N(1));
define_tag!("(0020,000E)",0x0020000E,"Series Instance UID",SeriesInstanceUID,UI,VM::N(1));
define_tag!("(0020,0010)",0x00200010,"Study ID",StudyID,SH,VM::N(1));
define_tag!("(0020,0011)",0x00200011,"Series Number",SeriesNumber,IS,VM::N(1));
define_tag!("(0020,0012)",0x00200012,"Acquisition Number",AcquisitionNumber,IS,VM::N(1));
define_tag!("(0020,0013)",0x00200013,"Instance Number",InstanceNumber,IS,VM::N(1));
define_tag!("(0020,0014)",0x00200014,"Isotope Number",IsotopeNumber,IS,VM::N(1));
define_tag!("(0020,0015)",0x00200015,"Phase Number",PhaseNumber,IS,VM::N(1));
define_tag!("(0020,0016)",0x00200016,"Interval Number",IntervalNumber,IS,VM::N(1));
define_tag!("(0020,0017)",0x00200017,"Time Slot Number",TimeSlotNumber,IS,VM::N(1));
define_tag!("(0020,0018)",0x00200018,"Angle Number",AngleNumber,IS,VM::N(1));
define_tag!("(0020,0019)",0x00200019,"Item Number",ItemNumber,IS,VM::N(1));
define_tag!("(0020,0020)",0x00200020,"Patient Orientation",PatientOrientation,CS,VM::N(2));
define_tag!("(0020,0022)",0x00200022,"Overlay Number",OverlayNumber,IS,VM::N(1));
define_tag!("(0020,0024)",0x00200024,"Curve Number",CurveNumber,IS,VM::N(1));
define_tag!("(0020,0026)",0x00200026,"LUT Number",LUTNumber,IS,VM::N(1));
define_tag!("(0020,0030)",0x00200030,"Image Position",ImagePosition,DS,VM::N(3));
define_tag!("(0020,0032)",0x00200032,"Image Position (Patient)",ImagePositionPatient,DS,VM::N(3));
define_tag!("(0020,0035)",0x00200035,"Image Orientation",ImageOrientation,DS,VM::N(6));
define_tag!("(0020,0037)",0x00200037,"Image Orientation (Patient)",ImageOrientationPatient,DS,VM::N(6));
define_tag!("(0020,0050)",0x00200050,"Location",Location,DS,VM::N(1));
define_tag!("(0020,0052)",0x00200052,"Frame of Reference UID",FrameOfReferenceUID,UI,VM::N(1));
define_tag!("(0020,0060)",0x00200060,"Laterality",Laterality,CS,VM::N(1));
define_tag!("(0020,0062)",0x00200062,"Image Laterality",ImageLaterality,CS,VM::N(1));
define_tag!("(0020,0070)",0x00200070,"Image Geometry Type",ImageGeometryType,LO,VM::N(1));
define_tag!("(0020,0080)",0x00200080,"Masking Image",MaskingImage,CS,VM::NOrMore(1));
define_tag!("(0020,00AA)",0x002000AA,"Report Number",ReportNumber,IS,VM::N(1));
define_tag!("(0020,0100)",0x00200100,"Temporal Position Identifier",TemporalPositionIdentifier,IS,VM::N(1));
define_tag!("(0020,0105)",0x00200105,"Number of Temporal Positions",NumberOfTemporalPositions,IS,VM::N(1));
define_tag!("(0020,0110)",0x00200110,"Temporal Resolution",TemporalResolution,DS,VM::N(1));
define_tag!("(0020,0200)",0x00200200,"Synchronization Frame of Reference UID",SynchronizationFrameOfReferenceUID,UI,VM::N(1));
define_tag!("(0020,0242)",0x00200242,"SOP Instance UID of Concatenation Source",SOPInstanceUIDOfConcatenationSource,UI,VM::N(1));
define_tag!("(0020,1000)",0x00201000,"Series in Study",SeriesInStudy,IS,VM::N(1));
define_tag!("(0020,1001)",0x00201001,"Acquisitions in Series",AcquisitionsInSeries,IS,VM::N(1));
define_tag!("(0020,1002)",0x00201002,"Images in Acquisition",ImagesInAcquisition,IS,VM::N(1));
define_tag!("(0020,1003)",0x00201003,"Images in Series",ImagesInSeries,IS,VM::N(1));
define_tag!("(0020,1004)",0x00201004,"Acquisitions in Study",AcquisitionsInStudy,IS,VM::N(1));
define_tag!("(0020,1005)",0x00201005,"Images in Study",ImagesInStudy,IS,VM::N(1));
define_tag!("(0020,1020)",0x00201020,"Reference",Reference,LO,VM::NOrMore(1));
define_tag!("(0020,1040)",0x00201040,"Position Reference Indicator",PositionReferenceIndicator,LO,VM::N(1));
define_tag!("(0020,1041)",0x00201041,"Slice Location",SliceLocation,DS,VM::N(1));
define_tag!("(0020,1070)",0x00201070,"Other Study Numbers",OtherStudyNumbers,IS,VM::NOrMore(1));
define_tag!("(0020,1200)",0x00201200,"Number of Patient Related Studies",NumberOfPatientRelatedStudies,IS,VM::N(1));
define_tag!("(0020,1202)",0x00201202,"Number of Patient Related Series",NumberOfPatientRelatedSeries,IS,VM::N(1));
define_tag!("(0020,1204)",0x00201204,"Number of Patient Related Instances",NumberOfPatientRelatedInstances,IS,VM::N(1));
define_tag!("(0020,1206)",0x00201206,"Number of Study Related Series",NumberOfStudyRelatedSeries,IS,VM::N(1));
define_tag!("(0020,1208)",0x00201208,"Number of Study Related Instances",NumberOfStudyRelatedInstances,IS,VM::N(1));
define_tag!("(0020,1209)",0x00201209,"Number of Series Related Instances",NumberOfSeriesRelatedInstances,IS,VM::N(1));
define_tag!("(0020,3401)",0x00203401,"Modifying Device ID",ModifyingDeviceID,CS,VM::N(1));
define_tag!("(0020,3402)",0x00203402,"Modified Image ID",ModifiedImageID,CS,VM::N(1));
define_tag!("(0020,3403)",0x00203403,"Modified Image Date",ModifiedImageDate,DA,VM::N(1));
define_tag!("(0020,3404)",0x00203404,"Modifying Device Manufacturer",ModifyingDeviceManufacturer,LO,VM::N(1));
define_tag!("(0020,3405)",0x00203405,"Modified Image Time",ModifiedImageTime,TM,VM::N(1));
define_tag!("(0020,3406)",0x00203406,"Modified Image Description",ModifiedImageDescription,LO,VM::N(1));
define_tag!("(0020,4000)",0x00204000,"Image Comments",ImageComments,LT,VM::N(1));
define_tag!("(0020,5000)",0x00205000,"Original Image Identification",OriginalImageIdentification,AT,VM::NOrMore(1));
define_tag!("(0020,5002)",0x00205002,"Original Image Identification Nomenclature",OriginalImageIdentificationNomenclature,LO,VM::NOrMore(1));
define_tag!("(0020,9056)",0x00209056,"Stack ID",StackID,SH,VM::N(1));
define_tag!("(0020,9057)",0x00209057,"In-Stack Position Number",InStackPositionNumber,UL,VM::N(1));
define_tag!("(0020,9071)",0x00209071,"Frame Anatomy Sequence",FrameAnatomySequence,SQ,VM::N(1));
define_tag!("(0020,9072)",0x00209072,"Frame Laterality",FrameLaterality,CS,VM::N(1));
define_tag!("(0020,9111)",0x00209111,"Frame Content Sequence",FrameContentSequence,SQ,VM::N(1));
define_tag!("(0020,9113)",0x00209113,"Plane Position Sequence",PlanePositionSequence,SQ,VM::N(1));
define_tag!("(0020,9116)",0x00209116,"Plane Orientation Sequence",PlaneOrientationSequence,SQ,VM::N(1));
define_tag!("(0020,9128)",0x00209128,"Temporal Position Index",TemporalPositionIndex,UL,VM::N(1));
define_tag!("(0020,9153)",0x00209153,"Nominal Cardiac Trigger Delay Time",NominalCardiacTriggerDelayTime,FD,VM::N(1));
define_tag!("(0020,9154)",0x00209154,"Nominal Cardiac Trigger Time Prior To R-Peak",NominalCardiacTriggerTimePriorToRPeak,FL,VM::N(1));
define_tag!("(0020,9155)",0x00209155,"Actual Cardiac Trigger Time Prior To R-Peak",ActualCardiacTriggerTimePriorToRPeak,FL,VM::N(1));
define_tag!("(0020,9156)",0x00209156,"Frame Acquisition Number",FrameAcquisitionNumber,US,VM::N(1));
define_tag!("(0020,9157)",0x00209157,"Dimension Index Values",DimensionIndexValues,UL,VM::NOrMore(1));
define_tag!("(0020,9158)",0x00209158,"Frame Comments",FrameComments,LT,VM::N(1));
define_tag!("(0020,9161)",0x00209161,"Concatenation UID",ConcatenationUID,UI,VM::N(1));
define_tag!("(0020,9162)",0x00209162,"In-concatenation Number",InConcatenationNumber,US,VM::N(1));
define_tag!("(0020,9163)",0x00209163,"In-concatenation Total Number",InConcatenationTotalNumber,US,VM::N(1));
define_tag!("(0020,9164)",0x00209164,"Dimension Organization UID",DimensionOrganizationUID,UI,VM::N(1));
define_tag!("(0020,9165)",0x00209165,"Dimension Index Pointer",DimensionIndexPointer,AT,VM::N(1));
define_tag!("(0020,9167)",0x00209167,"Functional Group Pointer",FunctionalGroupPointer,AT,VM::N(1));
define_tag!("(0020,9170)",0x00209170,"Unassigned Shared Converted Attributes Sequence",UnassignedSharedConvertedAttributesSequence,SQ,VM::N(1));
define_tag!("(0020,9171)",0x00209171,"Unassigned Per-Frame Converted Attributes Sequence",UnassignedPerFrameConvertedAttributesSequence,SQ,VM::N(1));
define_tag!("(0020,9172)",0x00209172,"Conversion Source Attributes Sequence",ConversionSourceAttributesSequence,SQ,VM::N(1));
define_tag!("(0020,9213)",0x00209213,"Dimension Index Private Creator",DimensionIndexPrivateCreator,LO,VM::N(1));
define_tag!("(0020,9221)",0x00209221,"Dimension Organization Sequence",DimensionOrganizationSequence,SQ,VM::N(1));
define_tag!("(0020,9222)",0x00209222,"Dimension Index Sequence",DimensionIndexSequence,SQ,VM::N(1));
define_tag!("(0020,9228)",0x00209228,"Concatenation Frame Offset Number",ConcatenationFrameOffsetNumber,UL,VM::N(1));
define_tag!("(0020,9238)",0x00209238,"Functional Group Private Creator",FunctionalGroupPrivateCreator,LO,VM::N(1));
define_tag!("(0020,9241)",0x00209241,"Nominal Percentage of Cardiac Phase",NominalPercentageOfCardiacPhase,FL,VM::N(1));
define_tag!("(0020,9245)",0x00209245,"Nominal Percentage of Respiratory Phase",NominalPercentageOfRespiratoryPhase,FL,VM::N(1));
define_tag!("(0020,9246)",0x00209246,"Starting Respiratory Amplitude",StartingRespiratoryAmplitude,FL,VM::N(1));
define_tag!("(0020,9247)",0x00209247,"Starting Respiratory Phase",StartingRespiratoryPhase,CS,VM::N(1));
define_tag!("(0020,9248)",0x00209248,"Ending Respiratory Amplitude",EndingRespiratoryAmplitude,FL,VM::N(1));
define_tag!("(0020,9249)",0x00209249,"Ending Respiratory Phase",EndingRespiratoryPhase,CS,VM::N(1));
define_tag!("(0020,9250)",0x00209250,"Respiratory Trigger Type",RespiratoryTriggerType,CS,VM::N(1));
define_tag!("(0020,9251)",0x00209251,"R-R Interval Time Nominal",RRIntervalTimeNominal,FD,VM::N(1));
define_tag!("(0020,9252)",0x00209252,"Actual Cardiac Trigger Delay Time",ActualCardiacTriggerDelayTime,FD,VM::N(1));
define_tag!("(0020,9253)",0x00209253,"Respiratory Synchronization Sequence",RespiratorySynchronizationSequence,SQ,VM::N(1));
define_tag!("(0020,9254)",0x00209254,"Respiratory Interval Time",RespiratoryIntervalTime,FD,VM::N(1));
define_tag!("(0020,9255)",0x00209255,"Nominal Respiratory Trigger Delay Time",NominalRespiratoryTriggerDelayTime,FD,VM::N(1));
define_tag!("(0020,9256)",0x00209256,"Respiratory Trigger Delay Threshold",RespiratoryTriggerDelayThreshold,FD,VM::N(1));
define_tag!("(0020,9257)",0x00209257,"Actual Respiratory Trigger Delay Time",ActualRespiratoryTriggerDelayTime,FD,VM::N(1));
define_tag!("(0020,9301)",0x00209301,"Image Position (Volume)",ImagePositionVolume,FD,VM::N(3));
define_tag!("(0020,9302)",0x00209302,"Image Orientation (Volume)",ImageOrientationVolume,FD,VM::N(6));
define_tag!("(0020,9307)",0x00209307,"Ultrasound Acquisition Geometry",UltrasoundAcquisitionGeometry,CS,VM::N(1));
define_tag!("(0020,9308)",0x00209308,"Apex Position",ApexPosition,FD,VM::N(3));
define_tag!("(0020,9309)",0x00209309,"Volume to Transducer Mapping Matrix",VolumeToTransducerMappingMatrix,FD,VM::N(16));
define_tag!("(0020,930A)",0x0020930A,"Volume to Table Mapping Matrix",VolumeToTableMappingMatrix,FD,VM::N(16));
define_tag!("(0020,930B)",0x0020930B,"Volume to Transducer Relationship",VolumeToTransducerRelationship,CS,VM::N(1));
define_tag!("(0020,930C)",0x0020930C,"Patient Frame of Reference Source",PatientFrameOfReferenceSource,CS,VM::N(1));
define_tag!("(0020,930D)",0x0020930D,"Temporal Position Time Offset",TemporalPositionTimeOffset,FD,VM::N(1));
define_tag!("(0020,930E)",0x0020930E,"Plane Position (Volume) Sequence",PlanePositionVolumeSequence,SQ,VM::N(1));
define_tag!("(0020,930F)",0x0020930F,"Plane Orientation (Volume) Sequence",PlaneOrientationVolumeSequence,SQ,VM::N(1));
define_tag!("(0020,9310)",0x00209310,"Temporal Position Sequence",TemporalPositionSequence,SQ,VM::N(1));
define_tag!("(0020,9311)",0x00209311,"Dimension Organization Type",DimensionOrganizationType,CS,VM::N(1));
define_tag!("(0020,9312)",0x00209312,"Volume Frame of Reference UID",VolumeFrameOfReferenceUID,UI,VM::N(1));
define_tag!("(0020,9313)",0x00209313,"Table Frame of Reference UID",TableFrameOfReferenceUID,UI,VM::N(1));
define_tag!("(0020,9421)",0x00209421,"Dimension Description Label",DimensionDescriptionLabel,LO,VM::N(1));
define_tag!("(0020,9450)",0x00209450,"Patient Orientation in Frame Sequence",PatientOrientationInFrameSequence,SQ,VM::N(1));
define_tag!("(0020,9453)",0x00209453,"Frame Label",FrameLabel,LO,VM::N(1));
define_tag!("(0020,9518)",0x00209518,"Acquisition Index",AcquisitionIndex,US,VM::NOrMore(1));
define_tag!("(0020,9529)",0x00209529,"Contributing SOP Instances Reference Sequence",ContributingSOPInstancesReferenceSequence,SQ,VM::N(1));
define_tag!("(0020,9536)",0x00209536,"Reconstruction Index",ReconstructionIndex,US,VM::N(1));
define_tag!("(0022,0001)",0x00220001,"Light Path Filter Pass-Through Wavelength",LightPathFilterPassThroughWavelength,US,VM::N(1));
define_tag!("(0022,0002)",0x00220002,"Light Path Filter Pass Band",LightPathFilterPassBand,US,VM::N(2));
define_tag!("(0022,0003)",0x00220003,"Image Path Filter Pass-Through Wavelength",ImagePathFilterPassThroughWavelength,US,VM::N(1));
define_tag!("(0022,0004)",0x00220004,"Image Path Filter Pass Band",ImagePathFilterPassBand,US,VM::N(2));
define_tag!("(0022,0005)",0x00220005,"Patient Eye Movement Commanded",PatientEyeMovementCommanded,CS,VM::N(1));
define_tag!("(0022,0006)",0x00220006,"Patient Eye Movement Command Code Sequence",PatientEyeMovementCommandCodeSequence,SQ,VM::N(1));
define_tag!("(0022,0007)",0x00220007,"Spherical Lens Power",SphericalLensPower,FL,VM::N(1));
define_tag!("(0022,0008)",0x00220008,"Cylinder Lens Power",CylinderLensPower,FL,VM::N(1));
define_tag!("(0022,0009)",0x00220009,"Cylinder Axis",CylinderAxis,FL,VM::N(1));
define_tag!("(0022,000A)",0x0022000A,"Emmetropic Magnification",EmmetropicMagnification,FL,VM::N(1));
define_tag!("(0022,000B)",0x0022000B,"Intra Ocular Pressure",IntraOcularPressure,FL,VM::N(1));
define_tag!("(0022,000C)",0x0022000C,"Horizontal Field of View",HorizontalFieldOfView,FL,VM::N(1));
define_tag!("(0022,000D)",0x0022000D,"Pupil Dilated",PupilDilated,CS,VM::N(1));
define_tag!("(0022,000E)",0x0022000E,"Degree of Dilation",DegreeOfDilation,FL,VM::N(1));
define_tag!("(0022,0010)",0x00220010,"Stereo Baseline Angle",StereoBaselineAngle,FL,VM::N(1));
define_tag!("(0022,0011)",0x00220011,"Stereo Baseline Displacement",StereoBaselineDisplacement,FL,VM::N(1));
define_tag!("(0022,0012)",0x00220012,"Stereo Horizontal Pixel Offset",StereoHorizontalPixelOffset,FL,VM::N(1));
define_tag!("(0022,0013)",0x00220013,"Stereo Vertical Pixel Offset",StereoVerticalPixelOffset,FL,VM::N(1));
define_tag!("(0022,0014)",0x00220014,"Stereo Rotation",StereoRotation,FL,VM::N(1));
define_tag!("(0022,0015)",0x00220015,"Acquisition Device Type Code Sequence",AcquisitionDeviceTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0022,0016)",0x00220016,"Illumination Type Code Sequence",IlluminationTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0022,0017)",0x00220017,"Light Path Filter Type Stack Code Sequence",LightPathFilterTypeStackCodeSequence,SQ,VM::N(1));
define_tag!("(0022,0018)",0x00220018,"Image Path Filter Type Stack Code Sequence",ImagePathFilterTypeStackCodeSequence,SQ,VM::N(1));
define_tag!("(0022,0019)",0x00220019,"Lenses Code Sequence",LensesCodeSequence,SQ,VM::N(1));
define_tag!("(0022,001A)",0x0022001A,"Channel Description Code Sequence",ChannelDescriptionCodeSequence,SQ,VM::N(1));
define_tag!("(0022,001B)",0x0022001B,"Refractive State Sequence",RefractiveStateSequence,SQ,VM::N(1));
define_tag!("(0022,001C)",0x0022001C,"Mydriatic Agent Code Sequence",MydriaticAgentCodeSequence,SQ,VM::N(1));
define_tag!("(0022,001D)",0x0022001D,"Relative Image Position Code Sequence",RelativeImagePositionCodeSequence,SQ,VM::N(1));
define_tag!("(0022,001E)",0x0022001E,"Camera Angle of View",CameraAngleOfView,FL,VM::N(1));
define_tag!("(0022,0020)",0x00220020,"Stereo Pairs Sequence",StereoPairsSequence,SQ,VM::N(1));
define_tag!("(0022,0021)",0x00220021,"Left Image Sequence",LeftImageSequence,SQ,VM::N(1));
define_tag!("(0022,0022)",0x00220022,"Right Image Sequence",RightImageSequence,SQ,VM::N(1));
define_tag!("(0022,0028)",0x00220028,"Stereo Pairs Present",StereoPairsPresent,CS,VM::N(1));
define_tag!("(0022,0030)",0x00220030,"Axial Length of the Eye",AxialLengthOfTheEye,FL,VM::N(1));
define_tag!("(0022,0031)",0x00220031,"Ophthalmic Frame Location Sequence",OphthalmicFrameLocationSequence,SQ,VM::N(1));
define_tag!("(0022,0032)",0x00220032,"Reference Coordinates",ReferenceCoordinates,FL,VM::MultipleOfN(2));
define_tag!("(0022,0035)",0x00220035,"Depth Spatial Resolution",DepthSpatialResolution,FL,VM::N(1));
define_tag!("(0022,0036)",0x00220036,"Maximum Depth Distortion",MaximumDepthDistortion,FL,VM::N(1));
define_tag!("(0022,0037)",0x00220037,"Along-scan Spatial Resolution",AlongScanSpatialResolution,FL,VM::N(1));
define_tag!("(0022,0038)",0x00220038,"Maximum Along-scan Distortion",MaximumAlongScanDistortion,FL,VM::N(1));
define_tag!("(0022,0039)",0x00220039,"Ophthalmic Image Orientation",OphthalmicImageOrientation,CS,VM::N(1));
define_tag!("(0022,0041)",0x00220041,"Depth of Transverse Image",DepthOfTransverseImage,FL,VM::N(1));
define_tag!("(0022,0042)",0x00220042,"Mydriatic Agent Concentration Units Sequence",MydriaticAgentConcentrationUnitsSequence,SQ,VM::N(1));
define_tag!("(0022,0048)",0x00220048,"Across-scan Spatial Resolution",AcrossScanSpatialResolution,FL,VM::N(1));
define_tag!("(0022,0049)",0x00220049,"Maximum Across-scan Distortion",MaximumAcrossScanDistortion,FL,VM::N(1));
define_tag!("(0022,004E)",0x0022004E,"Mydriatic Agent Concentration",MydriaticAgentConcentration,DS,VM::N(1));
define_tag!("(0022,0055)",0x00220055,"Illumination Wave Length",IlluminationWaveLength,FL,VM::N(1));
define_tag!("(0022,0056)",0x00220056,"Illumination Power",IlluminationPower,FL,VM::N(1));
define_tag!("(0022,0057)",0x00220057,"Illumination Bandwidth",IlluminationBandwidth,FL,VM::N(1));
define_tag!("(0022,0058)",0x00220058,"Mydriatic Agent Sequence",MydriaticAgentSequence,SQ,VM::N(1));
define_tag!("(0022,1007)",0x00221007,"Ophthalmic Axial Measurements Right Eye Sequence",OphthalmicAxialMeasurementsRightEyeSequence,SQ,VM::N(1));
define_tag!("(0022,1008)",0x00221008,"Ophthalmic Axial Measurements Left Eye Sequence",OphthalmicAxialMeasurementsLeftEyeSequence,SQ,VM::N(1));
define_tag!("(0022,1009)",0x00221009,"Ophthalmic Axial Measurements Device Type",OphthalmicAxialMeasurementsDeviceType,CS,VM::N(1));
define_tag!("(0022,1010)",0x00221010,"Ophthalmic Axial Length Measurements Type",OphthalmicAxialLengthMeasurementsType,CS,VM::N(1));
define_tag!("(0022,1012)",0x00221012,"Ophthalmic Axial Length Sequence",OphthalmicAxialLengthSequence,SQ,VM::N(1));
define_tag!("(0022,1019)",0x00221019,"Ophthalmic Axial Length",OphthalmicAxialLength,FL,VM::N(1));
define_tag!("(0022,1024)",0x00221024,"Lens Status Code Sequence",LensStatusCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1025)",0x00221025,"Vitreous Status Code Sequence",VitreousStatusCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1028)",0x00221028,"IOL Formula Code Sequence",IOLFormulaCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1029)",0x00221029,"IOL Formula Detail",IOLFormulaDetail,LO,VM::N(1));
define_tag!("(0022,1033)",0x00221033,"Keratometer Index",KeratometerIndex,FL,VM::N(1));
define_tag!("(0022,1035)",0x00221035,"Source of Ophthalmic Axial Length Code Sequence",SourceOfOphthalmicAxialLengthCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1037)",0x00221037,"Target Refraction",TargetRefraction,FL,VM::N(1));
define_tag!("(0022,1039)",0x00221039,"Refractive Procedure Occurred",RefractiveProcedureOccurred,CS,VM::N(1));
define_tag!("(0022,1040)",0x00221040,"Refractive Surgery Type Code Sequence",RefractiveSurgeryTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1044)",0x00221044,"Ophthalmic Ultrasound Method Code Sequence",OphthalmicUltrasoundMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1050)",0x00221050,"Ophthalmic Axial Length Measurements Sequence",OphthalmicAxialLengthMeasurementsSequence,SQ,VM::N(1));
define_tag!("(0022,1053)",0x00221053,"IOL Power",IOLPower,FL,VM::N(1));
define_tag!("(0022,1054)",0x00221054,"Predicted Refractive Error",PredictedRefractiveError,FL,VM::N(1));
define_tag!("(0022,1059)",0x00221059,"Ophthalmic Axial Length Velocity",OphthalmicAxialLengthVelocity,FL,VM::N(1));
define_tag!("(0022,1065)",0x00221065,"Lens Status Description",LensStatusDescription,LO,VM::N(1));
define_tag!("(0022,1066)",0x00221066,"Vitreous Status Description",VitreousStatusDescription,LO,VM::N(1));
define_tag!("(0022,1090)",0x00221090,"IOL Power Sequence",IOLPowerSequence,SQ,VM::N(1));
define_tag!("(0022,1092)",0x00221092,"Lens Constant Sequence",LensConstantSequence,SQ,VM::N(1));
define_tag!("(0022,1093)",0x00221093,"IOL Manufacturer",IOLManufacturer,LO,VM::N(1));
define_tag!("(0022,1094)",0x00221094,"Lens Constant Description",LensConstantDescription,LO,VM::N(1));
define_tag!("(0022,1095)",0x00221095,"Implant Name",ImplantName,LO,VM::N(1));
define_tag!("(0022,1096)",0x00221096,"Keratometry Measurement Type Code Sequence",KeratometryMeasurementTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1097)",0x00221097,"Implant Part Number",ImplantPartNumber,LO,VM::N(1));
define_tag!("(0022,1100)",0x00221100,"Referenced Ophthalmic Axial Measurements Sequence",ReferencedOphthalmicAxialMeasurementsSequence,SQ,VM::N(1));
define_tag!("(0022,1101)",0x00221101,"Ophthalmic Axial Length Measurements Segment Name Code Sequence",OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1103)",0x00221103,"Refractive Error Before Refractive Surgery Code Sequence",RefractiveErrorBeforeRefractiveSurgeryCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1121)",0x00221121,"IOL Power For Exact Emmetropia",IOLPowerForExactEmmetropia,FL,VM::N(1));
define_tag!("(0022,1122)",0x00221122,"IOL Power For Exact Target Refraction",IOLPowerForExactTargetRefraction,FL,VM::N(1));
define_tag!("(0022,1125)",0x00221125,"Anterior Chamber Depth Definition Code Sequence",AnteriorChamberDepthDefinitionCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1127)",0x00221127,"Lens Thickness Sequence",LensThicknessSequence,SQ,VM::N(1));
define_tag!("(0022,1128)",0x00221128,"Anterior Chamber Depth Sequence",AnteriorChamberDepthSequence,SQ,VM::N(1));
define_tag!("(0022,1130)",0x00221130,"Lens Thickness",LensThickness,FL,VM::N(1));
define_tag!("(0022,1131)",0x00221131,"Anterior Chamber Depth",AnteriorChamberDepth,FL,VM::N(1));
define_tag!("(0022,1132)",0x00221132,"Source of Lens Thickness Data Code Sequence",SourceOfLensThicknessDataCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1133)",0x00221133,"Source of Anterior Chamber Depth Data Code Sequence",SourceOfAnteriorChamberDepthDataCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1134)",0x00221134,"Source of Refractive Measurements Sequence",SourceOfRefractiveMeasurementsSequence,SQ,VM::N(1));
define_tag!("(0022,1135)",0x00221135,"Source of Refractive Measurements Code Sequence",SourceOfRefractiveMeasurementsCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1140)",0x00221140,"Ophthalmic Axial Length Measurement Modified",OphthalmicAxialLengthMeasurementModified,CS,VM::N(1));
define_tag!("(0022,1150)",0x00221150,"Ophthalmic Axial Length Data Source Code Sequence",OphthalmicAxialLengthDataSourceCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1153)",0x00221153,"Ophthalmic Axial Length Acquisition Method Code Sequence",OphthalmicAxialLengthAcquisitionMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1155)",0x00221155,"Signal to Noise Ratio",SignalToNoiseRatio,FL,VM::N(1));
define_tag!("(0022,1159)",0x00221159,"Ophthalmic Axial Length Data Source Description",OphthalmicAxialLengthDataSourceDescription,LO,VM::N(1));
define_tag!("(0022,1210)",0x00221210,"Ophthalmic Axial Length Measurements Total Length Sequence",OphthalmicAxialLengthMeasurementsTotalLengthSequence,SQ,VM::N(1));
define_tag!("(0022,1211)",0x00221211,"Ophthalmic Axial Length Measurements Segmental Length Sequence",OphthalmicAxialLengthMeasurementsSegmentalLengthSequence,SQ,VM::N(1));
define_tag!("(0022,1212)",0x00221212,"Ophthalmic Axial Length Measurements Length Summation Sequence",OphthalmicAxialLengthMeasurementsLengthSummationSequence,SQ,VM::N(1));
define_tag!("(0022,1220)",0x00221220,"Ultrasound Ophthalmic Axial Length Measurements Sequence",UltrasoundOphthalmicAxialLengthMeasurementsSequence,SQ,VM::N(1));
define_tag!("(0022,1225)",0x00221225,"Optical Ophthalmic Axial Length Measurements Sequence",OpticalOphthalmicAxialLengthMeasurementsSequence,SQ,VM::N(1));
define_tag!("(0022,1230)",0x00221230,"Ultrasound Selected Ophthalmic Axial Length Sequence",UltrasoundSelectedOphthalmicAxialLengthSequence,SQ,VM::N(1));
define_tag!("(0022,1250)",0x00221250,"Ophthalmic Axial Length Selection Method Code Sequence",OphthalmicAxialLengthSelectionMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1255)",0x00221255,"Optical Selected Ophthalmic Axial Length Sequence",OpticalSelectedOphthalmicAxialLengthSequence,SQ,VM::N(1));
define_tag!("(0022,1257)",0x00221257,"Selected Segmental Ophthalmic Axial Length Sequence",SelectedSegmentalOphthalmicAxialLengthSequence,SQ,VM::N(1));
define_tag!("(0022,1260)",0x00221260,"Selected Total Ophthalmic Axial Length Sequence",SelectedTotalOphthalmicAxialLengthSequence,SQ,VM::N(1));
define_tag!("(0022,1262)",0x00221262,"Ophthalmic Axial Length Quality Metric Sequence",OphthalmicAxialLengthQualityMetricSequence,SQ,VM::N(1));
define_tag!("(0022,1265)",0x00221265,"Ophthalmic Axial Length Quality Metric Type Code Sequence",OphthalmicAxialLengthQualityMetricTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1273)",0x00221273,"Ophthalmic Axial Length Quality Metric Type Description",OphthalmicAxialLengthQualityMetricTypeDescription,LO,VM::N(1));
define_tag!("(0022,1300)",0x00221300,"Intraocular Lens Calculations Right Eye Sequence",IntraocularLensCalculationsRightEyeSequence,SQ,VM::N(1));
define_tag!("(0022,1310)",0x00221310,"Intraocular Lens Calculations Left Eye Sequence",IntraocularLensCalculationsLeftEyeSequence,SQ,VM::N(1));
define_tag!("(0022,1330)",0x00221330,"Referenced Ophthalmic Axial Length Measurement QC Image Sequence",ReferencedOphthalmicAxialLengthMeasurementQCImageSequence,SQ,VM::N(1));
define_tag!("(0022,1415)",0x00221415,"Ophthalmic Mapping Device Type",OphthalmicMappingDeviceType,CS,VM::N(1));
define_tag!("(0022,1420)",0x00221420,"Acquisition Method Code Sequence",AcquisitionMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1423)",0x00221423,"Acquisition Method Algorithm Sequence",AcquisitionMethodAlgorithmSequence,SQ,VM::N(1));
define_tag!("(0022,1436)",0x00221436,"Ophthalmic Thickness Map Type Code Sequence",OphthalmicThicknessMapTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1443)",0x00221443,"Ophthalmic Thickness Mapping Normals Sequence",OphthalmicThicknessMappingNormalsSequence,SQ,VM::N(1));
define_tag!("(0022,1445)",0x00221445,"Retinal Thickness Definition Code Sequence",RetinalThicknessDefinitionCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1450)",0x00221450,"Pixel Value Mapping to Coded Concept Sequence",PixelValueMappingToCodedConceptSequence,SQ,VM::N(1));
define_tag!("(0022,1452)",0x00221452,"Mapped Pixel Value",MappedPixelValue,Option::None,VM::N(1));
define_tag!("(0022,1454)",0x00221454,"Pixel Value Mapping Explanation",PixelValueMappingExplanation,LO,VM::N(1));
define_tag!("(0022,1458)",0x00221458,"Ophthalmic Thickness Map Quality Threshold Sequence",OphthalmicThicknessMapQualityThresholdSequence,SQ,VM::N(1));
define_tag!("(0022,1460)",0x00221460,"Ophthalmic Thickness Map Threshold Quality Rating",OphthalmicThicknessMapThresholdQualityRating,FL,VM::N(1));
define_tag!("(0022,1463)",0x00221463,"Anatomic Structure Reference Point",AnatomicStructureReferencePoint,FL,VM::N(2));
define_tag!("(0022,1465)",0x00221465,"Registration to Localizer Sequence",RegistrationToLocalizerSequence,SQ,VM::N(1));
define_tag!("(0022,1466)",0x00221466,"Registered Localizer Units",RegisteredLocalizerUnits,CS,VM::N(1));
define_tag!("(0022,1467)",0x00221467,"Registered Localizer Top Left Hand Corner",RegisteredLocalizerTopLeftHandCorner,FL,VM::N(2));
define_tag!("(0022,1468)",0x00221468,"Registered Localizer Bottom Right Hand Corner",RegisteredLocalizerBottomRightHandCorner,FL,VM::N(2));
define_tag!("(0022,1470)",0x00221470,"Ophthalmic Thickness Map Quality Rating Sequence",OphthalmicThicknessMapQualityRatingSequence,SQ,VM::N(1));
define_tag!("(0022,1472)",0x00221472,"Relevant OPT Attributes Sequence",RelevantOPTAttributesSequence,SQ,VM::N(1));
define_tag!("(0022,1512)",0x00221512,"Transformation Method Code Sequence",TransformationMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0022,1513)",0x00221513,"Transformation Algorithm Sequence",TransformationAlgorithmSequence,SQ,VM::N(1));
define_tag!("(0022,1515)",0x00221515,"Ophthalmic Axial Length Method",OphthalmicAxialLengthMethod,CS,VM::N(1));
define_tag!("(0022,1517)",0x00221517,"Ophthalmic FOV",OphthalmicFOV,FL,VM::N(1));
define_tag!("(0022,1518)",0x00221518,"Two Dimensional to Three Dimensional Map Sequence",TwoDimensionalToThreeDimensionalMapSequence,SQ,VM::N(1));
define_tag!("(0022,1525)",0x00221525,"Wide Field Ophthalmic Photography Quality Rating Sequence",WideFieldOphthalmicPhotographyQualityRatingSequence,SQ,VM::N(1));
define_tag!("(0022,1526)",0x00221526,"Wide Field Ophthalmic Photography Quality Threshold Sequence",WideFieldOphthalmicPhotographyQualityThresholdSequence,SQ,VM::N(1));
define_tag!("(0022,1527)",0x00221527,"Wide Field Ophthalmic Photography Threshold Quality Rating",WideFieldOphthalmicPhotographyThresholdQualityRating,FL,VM::N(1));
define_tag!("(0022,1528)",0x00221528,"X Coordinates Center Pixel View Angle",XCoordinatesCenterPixelViewAngle,FL,VM::N(1));
define_tag!("(0022,1529)",0x00221529,"Y Coordinates Center Pixel View Angle",YCoordinatesCenterPixelViewAngle,FL,VM::N(1));
define_tag!("(0022,1530)",0x00221530,"Number of Map Points",NumberOfMapPoints,UL,VM::N(1));
define_tag!("(0022,1531)",0x00221531,"Two Dimensional to Three Dimensional Map Data",TwoDimensionalToThreeDimensionalMapData,OF,VM::N(1));
define_tag!("(0024,0010)",0x00240010,"Visual Field Horizontal Extent",VisualFieldHorizontalExtent,FL,VM::N(1));
define_tag!("(0024,0011)",0x00240011,"Visual Field Vertical Extent",VisualFieldVerticalExtent,FL,VM::N(1));
define_tag!("(0024,0012)",0x00240012,"Visual Field Shape",VisualFieldShape,CS,VM::N(1));
define_tag!("(0024,0016)",0x00240016,"Screening Test Mode Code Sequence",ScreeningTestModeCodeSequence,SQ,VM::N(1));
define_tag!("(0024,0018)",0x00240018,"Maximum Stimulus Luminance",MaximumStimulusLuminance,FL,VM::N(1));
define_tag!("(0024,0020)",0x00240020,"Background Luminance",BackgroundLuminance,FL,VM::N(1));
define_tag!("(0024,0021)",0x00240021,"Stimulus Color Code Sequence",StimulusColorCodeSequence,SQ,VM::N(1));
define_tag!("(0024,0024)",0x00240024,"Background Illumination Color Code Sequence",BackgroundIlluminationColorCodeSequence,SQ,VM::N(1));
define_tag!("(0024,0025)",0x00240025,"Stimulus Area",StimulusArea,FL,VM::N(1));
define_tag!("(0024,0028)",0x00240028,"Stimulus Presentation Time",StimulusPresentationTime,FL,VM::N(1));
define_tag!("(0024,0032)",0x00240032,"Fixation Sequence",FixationSequence,SQ,VM::N(1));
define_tag!("(0024,0033)",0x00240033,"Fixation Monitoring Code Sequence",FixationMonitoringCodeSequence,SQ,VM::N(1));
define_tag!("(0024,0034)",0x00240034,"Visual Field Catch Trial Sequence",VisualFieldCatchTrialSequence,SQ,VM::N(1));
define_tag!("(0024,0035)",0x00240035,"Fixation Checked Quantity",FixationCheckedQuantity,US,VM::N(1));
define_tag!("(0024,0036)",0x00240036,"Patient Not Properly Fixated Quantity",PatientNotProperlyFixatedQuantity,US,VM::N(1));
define_tag!("(0024,0037)",0x00240037,"Presented Visual Stimuli Data Flag",PresentedVisualStimuliDataFlag,CS,VM::N(1));
define_tag!("(0024,0038)",0x00240038,"Number of Visual Stimuli",NumberOfVisualStimuli,US,VM::N(1));
define_tag!("(0024,0039)",0x00240039,"Excessive Fixation Losses Data Flag",ExcessiveFixationLossesDataFlag,CS,VM::N(1));
define_tag!("(0024,0040)",0x00240040,"Excessive Fixation Losses",ExcessiveFixationLosses,CS,VM::N(1));
define_tag!("(0024,0042)",0x00240042,"Stimuli Retesting Quantity",StimuliRetestingQuantity,US,VM::N(1));
define_tag!("(0024,0044)",0x00240044,"Comments on Patient's Performance of Visual Field",CommentsOnPatientPerformanceOfVisualField,LT,VM::N(1));
define_tag!("(0024,0045)",0x00240045,"False Negatives Estimate Flag",FalseNegativesEstimateFlag,CS,VM::N(1));
define_tag!("(0024,0046)",0x00240046,"False Negatives Estimate",FalseNegativesEstimate,FL,VM::N(1));
define_tag!("(0024,0048)",0x00240048,"Negative Catch Trials Quantity",NegativeCatchTrialsQuantity,US,VM::N(1));
define_tag!("(0024,0050)",0x00240050,"False Negatives Quantity",FalseNegativesQuantity,US,VM::N(1));
define_tag!("(0024,0051)",0x00240051,"Excessive False Negatives Data Flag",ExcessiveFalseNegativesDataFlag,CS,VM::N(1));
define_tag!("(0024,0052)",0x00240052,"Excessive False Negatives",ExcessiveFalseNegatives,CS,VM::N(1));
define_tag!("(0024,0053)",0x00240053,"False Positives Estimate Flag",FalsePositivesEstimateFlag,CS,VM::N(1));
define_tag!("(0024,0054)",0x00240054,"False Positives Estimate",FalsePositivesEstimate,FL,VM::N(1));
define_tag!("(0024,0055)",0x00240055,"Catch Trials Data Flag",CatchTrialsDataFlag,CS,VM::N(1));
define_tag!("(0024,0056)",0x00240056,"Positive Catch Trials Quantity",PositiveCatchTrialsQuantity,US,VM::N(1));
define_tag!("(0024,0057)",0x00240057,"Test Point Normals Data Flag",TestPointNormalsDataFlag,CS,VM::N(1));
define_tag!("(0024,0058)",0x00240058,"Test Point Normals Sequence",TestPointNormalsSequence,SQ,VM::N(1));
define_tag!("(0024,0059)",0x00240059,"Global Deviation Probability Normals Flag",GlobalDeviationProbabilityNormalsFlag,CS,VM::N(1));
define_tag!("(0024,0060)",0x00240060,"False Positives Quantity",FalsePositivesQuantity,US,VM::N(1));
define_tag!("(0024,0061)",0x00240061,"Excessive False Positives Data Flag",ExcessiveFalsePositivesDataFlag,CS,VM::N(1));
define_tag!("(0024,0062)",0x00240062,"Excessive False Positives",ExcessiveFalsePositives,CS,VM::N(1));
define_tag!("(0024,0063)",0x00240063,"Visual Field Test Normals Flag",VisualFieldTestNormalsFlag,CS,VM::N(1));
define_tag!("(0024,0064)",0x00240064,"Results Normals Sequence",ResultsNormalsSequence,SQ,VM::N(1));
define_tag!("(0024,0065)",0x00240065,"Age Corrected Sensitivity Deviation Algorithm Sequence",AgeCorrectedSensitivityDeviationAlgorithmSequence,SQ,VM::N(1));
define_tag!("(0024,0066)",0x00240066,"Global Deviation From Normal",GlobalDeviationFromNormal,FL,VM::N(1));
define_tag!("(0024,0067)",0x00240067,"Generalized Defect Sensitivity Deviation Algorithm Sequence",GeneralizedDefectSensitivityDeviationAlgorithmSequence,SQ,VM::N(1));
define_tag!("(0024,0068)",0x00240068,"Localized Deviation From Normal",LocalizedDeviationFromNormal,FL,VM::N(1));
define_tag!("(0024,0069)",0x00240069,"Patient Reliability Indicator",PatientReliabilityIndicator,LO,VM::N(1));
define_tag!("(0024,0070)",0x00240070,"Visual Field Mean Sensitivity",VisualFieldMeanSensitivity,FL,VM::N(1));
define_tag!("(0024,0071)",0x00240071,"Global Deviation Probability",GlobalDeviationProbability,FL,VM::N(1));
define_tag!("(0024,0072)",0x00240072,"Local Deviation Probability Normals Flag",LocalDeviationProbabilityNormalsFlag,CS,VM::N(1));
define_tag!("(0024,0073)",0x00240073,"Localized Deviation Probability",LocalizedDeviationProbability,FL,VM::N(1));
define_tag!("(0024,0074)",0x00240074,"Short Term Fluctuation Calculated",ShortTermFluctuationCalculated,CS,VM::N(1));
define_tag!("(0024,0075)",0x00240075,"Short Term Fluctuation",ShortTermFluctuation,FL,VM::N(1));
define_tag!("(0024,0076)",0x00240076,"Short Term Fluctuation Probability Calculated",ShortTermFluctuationProbabilityCalculated,CS,VM::N(1));
define_tag!("(0024,0077)",0x00240077,"Short Term Fluctuation Probability",ShortTermFluctuationProbability,FL,VM::N(1));
define_tag!("(0024,0078)",0x00240078,"Corrected Localized Deviation From Normal Calculated",CorrectedLocalizedDeviationFromNormalCalculated,CS,VM::N(1));
define_tag!("(0024,0079)",0x00240079,"Corrected Localized Deviation From Normal",CorrectedLocalizedDeviationFromNormal,FL,VM::N(1));
define_tag!("(0024,0080)",0x00240080,"Corrected Localized Deviation From Normal Probability Calculated",CorrectedLocalizedDeviationFromNormalProbabilityCalculated,CS,VM::N(1));
define_tag!("(0024,0081)",0x00240081,"Corrected Localized Deviation From Normal Probability",CorrectedLocalizedDeviationFromNormalProbability,FL,VM::N(1));
define_tag!("(0024,0083)",0x00240083,"Global Deviation Probability Sequence",GlobalDeviationProbabilitySequence,SQ,VM::N(1));
define_tag!("(0024,0085)",0x00240085,"Localized Deviation Probability Sequence",LocalizedDeviationProbabilitySequence,SQ,VM::N(1));
define_tag!("(0024,0086)",0x00240086,"Foveal Sensitivity Measured",FovealSensitivityMeasured,CS,VM::N(1));
define_tag!("(0024,0087)",0x00240087,"Foveal Sensitivity",FovealSensitivity,FL,VM::N(1));
define_tag!("(0024,0088)",0x00240088,"Visual Field Test Duration",VisualFieldTestDuration,FL,VM::N(1));
define_tag!("(0024,0089)",0x00240089,"Visual Field Test Point Sequence",VisualFieldTestPointSequence,SQ,VM::N(1));
define_tag!("(0024,0090)",0x00240090,"Visual Field Test Point X-Coordinate",VisualFieldTestPointXCoordinate,FL,VM::N(1));
define_tag!("(0024,0091)",0x00240091,"Visual Field Test Point Y-Coordinate",VisualFieldTestPointYCoordinate,FL,VM::N(1));
define_tag!("(0024,0092)",0x00240092,"Age Corrected Sensitivity Deviation Value",AgeCorrectedSensitivityDeviationValue,FL,VM::N(1));
define_tag!("(0024,0093)",0x00240093,"Stimulus Results",StimulusResults,CS,VM::N(1));
define_tag!("(0024,0094)",0x00240094,"Sensitivity Value",SensitivityValue,FL,VM::N(1));
define_tag!("(0024,0095)",0x00240095,"Retest Stimulus Seen",RetestStimulusSeen,CS,VM::N(1));
define_tag!("(0024,0096)",0x00240096,"Retest Sensitivity Value",RetestSensitivityValue,FL,VM::N(1));
define_tag!("(0024,0097)",0x00240097,"Visual Field Test Point Normals Sequence",VisualFieldTestPointNormalsSequence,SQ,VM::N(1));
define_tag!("(0024,0098)",0x00240098,"Quantified Defect",QuantifiedDefect,FL,VM::N(1));
define_tag!("(0024,0100)",0x00240100,"Age Corrected Sensitivity Deviation Probability Value",AgeCorrectedSensitivityDeviationProbabilityValue,FL,VM::N(1));
define_tag!("(0024,0102)",0x00240102,"Generalized Defect Corrected Sensitivity Deviation Flag",GeneralizedDefectCorrectedSensitivityDeviationFlag,CS,VM::N(1));
define_tag!("(0024,0103)",0x00240103,"Generalized Defect Corrected Sensitivity Deviation Value",GeneralizedDefectCorrectedSensitivityDeviationValue,FL,VM::N(1));
define_tag!("(0024,0104)",0x00240104,"Generalized Defect Corrected Sensitivity Deviation Probability Value",GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue,FL,VM::N(1));
define_tag!("(0024,0105)",0x00240105,"Minimum Sensitivity Value",MinimumSensitivityValue,FL,VM::N(1));
define_tag!("(0024,0106)",0x00240106,"Blind Spot Localized",BlindSpotLocalized,CS,VM::N(1));
define_tag!("(0024,0107)",0x00240107,"Blind Spot X-Coordinate",BlindSpotXCoordinate,FL,VM::N(1));
define_tag!("(0024,0108)",0x00240108,"Blind Spot Y-Coordinate",BlindSpotYCoordinate,FL,VM::N(1));
define_tag!("(0024,0110)",0x00240110,"Visual Acuity Measurement Sequence",VisualAcuityMeasurementSequence,SQ,VM::N(1));
define_tag!("(0024,0112)",0x00240112,"Refractive Parameters Used on Patient Sequence",RefractiveParametersUsedOnPatientSequence,SQ,VM::N(1));
define_tag!("(0024,0113)",0x00240113,"Measurement Laterality",MeasurementLaterality,CS,VM::N(1));
define_tag!("(0024,0114)",0x00240114,"Ophthalmic Patient Clinical Information Left Eye Sequence",OphthalmicPatientClinicalInformationLeftEyeSequence,SQ,VM::N(1));
define_tag!("(0024,0115)",0x00240115,"Ophthalmic Patient Clinical Information Right Eye Sequence",OphthalmicPatientClinicalInformationRightEyeSequence,SQ,VM::N(1));
define_tag!("(0024,0117)",0x00240117,"Foveal Point Normative Data Flag",FovealPointNormativeDataFlag,CS,VM::N(1));
define_tag!("(0024,0118)",0x00240118,"Foveal Point Probability Value",FovealPointProbabilityValue,FL,VM::N(1));
define_tag!("(0024,0120)",0x00240120,"Screening Baseline Measured",ScreeningBaselineMeasured,CS,VM::N(1));
define_tag!("(0024,0122)",0x00240122,"Screening Baseline Measured Sequence",ScreeningBaselineMeasuredSequence,SQ,VM::N(1));
define_tag!("(0024,0124)",0x00240124,"Screening Baseline Type",ScreeningBaselineType,CS,VM::N(1));
define_tag!("(0024,0126)",0x00240126,"Screening Baseline Value",ScreeningBaselineValue,FL,VM::N(1));
define_tag!("(0024,0202)",0x00240202,"Algorithm Source",AlgorithmSource,LO,VM::N(1));
define_tag!("(0024,0306)",0x00240306,"Data Set Name",DataSetName,LO,VM::N(1));
define_tag!("(0024,0307)",0x00240307,"Data Set Version",DataSetVersion,LO,VM::N(1));
define_tag!("(0024,0308)",0x00240308,"Data Set Source",DataSetSource,LO,VM::N(1));
define_tag!("(0024,0309)",0x00240309,"Data Set Description",DataSetDescription,LO,VM::N(1));
define_tag!("(0024,0317)",0x00240317,"Visual Field Test Reliability Global Index Sequence",VisualFieldTestReliabilityGlobalIndexSequence,SQ,VM::N(1));
define_tag!("(0024,0320)",0x00240320,"Visual Field Global Results Index Sequence",VisualFieldGlobalResultsIndexSequence,SQ,VM::N(1));
define_tag!("(0024,0325)",0x00240325,"Data Observation Sequence",DataObservationSequence,SQ,VM::N(1));
define_tag!("(0024,0338)",0x00240338,"Index Normals Flag",IndexNormalsFlag,CS,VM::N(1));
define_tag!("(0024,0341)",0x00240341,"Index Probability",IndexProbability,FL,VM::N(1));
define_tag!("(0024,0344)",0x00240344,"Index Probability Sequence",IndexProbabilitySequence,SQ,VM::N(1));
define_tag!("(0028,0002)",0x00280002,"Samples per Pixel",SamplesPerPixel,US,VM::N(1));
define_tag!("(0028,0003)",0x00280003,"Samples per Pixel Used",SamplesPerPixelUsed,US,VM::N(1));
define_tag!("(0028,0004)",0x00280004,"Photometric Interpretation",PhotometricInterpretation,CS,VM::N(1));
define_tag!("(0028,0005)",0x00280005,"Image Dimensions",ImageDimensions,US,VM::N(1));
define_tag!("(0028,0006)",0x00280006,"Planar Configuration",PlanarConfiguration,US,VM::N(1));
define_tag!("(0028,0008)",0x00280008,"Number of Frames",NumberOfFrames,IS,VM::N(1));
define_tag!("(0028,0009)",0x00280009,"Frame Increment Pointer",FrameIncrementPointer,AT,VM::NOrMore(1));
define_tag!("(0028,000A)",0x0028000A,"Frame Dimension Pointer",FrameDimensionPointer,AT,VM::NOrMore(1));
define_tag!("(0028,0010)",0x00280010,"Rows",Rows,US,VM::N(1));
define_tag!("(0028,0011)",0x00280011,"Columns",Columns,US,VM::N(1));
define_tag!("(0028,0012)",0x00280012,"Planes",Planes,US,VM::N(1));
define_tag!("(0028,0014)",0x00280014,"Ultrasound Color Data Present",UltrasoundColorDataPresent,US,VM::N(1));
define_tag!("(0028,0030)",0x00280030,"Pixel Spacing",PixelSpacing,DS,VM::N(2));
define_tag!("(0028,0031)",0x00280031,"Zoom Factor",ZoomFactor,DS,VM::N(2));
define_tag!("(0028,0032)",0x00280032,"Zoom Center",ZoomCenter,DS,VM::N(2));
define_tag!("(0028,0034)",0x00280034,"Pixel Aspect Ratio",PixelAspectRatio,IS,VM::N(2));
define_tag!("(0028,0040)",0x00280040,"Image Format",ImageFormat,CS,VM::N(1));
define_tag!("(0028,0050)",0x00280050,"Manipulated Image",ManipulatedImage,LO,VM::NOrMore(1));
define_tag!("(0028,0051)",0x00280051,"Corrected Image",CorrectedImage,CS,VM::NOrMore(1));
define_tag!("(0028,005F)",0x0028005F,"Compression Recognition Code",CompressionRecognitionCode,LO,VM::N(1));
define_tag!("(0028,0060)",0x00280060,"Compression Code",CompressionCode,CS,VM::N(1));
define_tag!("(0028,0061)",0x00280061,"Compression Originator",CompressionOriginator,SH,VM::N(1));
define_tag!("(0028,0062)",0x00280062,"Compression Label",CompressionLabel,LO,VM::N(1));
define_tag!("(0028,0063)",0x00280063,"Compression Description",CompressionDescription,SH,VM::N(1));
define_tag!("(0028,0065)",0x00280065,"Compression Sequence",CompressionSequence,CS,VM::NOrMore(1));
define_tag!("(0028,0066)",0x00280066,"Compression Step Pointers",CompressionStepPointers,AT,VM::NOrMore(1));
define_tag!("(0028,0068)",0x00280068,"Repeat Interval",RepeatInterval,US,VM::N(1));
define_tag!("(0028,0069)",0x00280069,"Bits Grouped",BitsGrouped,US,VM::N(1));
define_tag!("(0028,0070)",0x00280070,"Perimeter Table",PerimeterTable,US,VM::NOrMore(1));
define_tag!("(0028,0071)",0x00280071,"Perimeter Value",PerimeterValue,Option::None,VM::N(1));
define_tag!("(0028,0080)",0x00280080,"Predictor Rows",PredictorRows,US,VM::N(1));
define_tag!("(0028,0081)",0x00280081,"Predictor Columns",PredictorColumns,US,VM::N(1));
define_tag!("(0028,0082)",0x00280082,"Predictor Constants",PredictorConstants,US,VM::NOrMore(1));
define_tag!("(0028,0090)",0x00280090,"Blocked Pixels",BlockedPixels,CS,VM::N(1));
define_tag!("(0028,0091)",0x00280091,"Block Rows",BlockRows,US,VM::N(1));
define_tag!("(0028,0092)",0x00280092,"Block Columns",BlockColumns,US,VM::N(1));
define_tag!("(0028,0093)",0x00280093,"Row Overlap",RowOverlap,US,VM::N(1));
define_tag!("(0028,0094)",0x00280094,"Column Overlap",ColumnOverlap,US,VM::N(1));
define_tag!("(0028,0100)",0x00280100,"Bits Allocated",BitsAllocated,US,VM::N(1));
define_tag!("(0028,0101)",0x00280101,"Bits Stored",BitsStored,US,VM::N(1));
define_tag!("(0028,0102)",0x00280102,"High Bit",HighBit,US,VM::N(1));
define_tag!("(0028,0103)",0x00280103,"Pixel Representation",PixelRepresentation,US,VM::N(1));
define_tag!("(0028,0104)",0x00280104,"Smallest Valid Pixel Value",SmallestValidPixelValue,Option::None,VM::N(1));
define_tag!("(0028,0105)",0x00280105,"Largest Valid Pixel Value",LargestValidPixelValue,Option::None,VM::N(1));
define_tag!("(0028,0106)",0x00280106,"Smallest Image Pixel Value",SmallestImagePixelValue,Option::None,VM::N(1));
define_tag!("(0028,0107)",0x00280107,"Largest Image Pixel Value",LargestImagePixelValue,Option::None,VM::N(1));
define_tag!("(0028,0108)",0x00280108,"Smallest Pixel Value in Series",SmallestPixelValueInSeries,Option::None,VM::N(1));
define_tag!("(0028,0109)",0x00280109,"Largest Pixel Value in Series",LargestPixelValueInSeries,Option::None,VM::N(1));
define_tag!("(0028,0110)",0x00280110,"Smallest Image Pixel Value in Plane",SmallestImagePixelValueInPlane,Option::None,VM::N(1));
define_tag!("(0028,0111)",0x00280111,"Largest Image Pixel Value in Plane",LargestImagePixelValueInPlane,Option::None,VM::N(1));
define_tag!("(0028,0120)",0x00280120,"Pixel Padding Value",PixelPaddingValue,Option::None,VM::N(1));
define_tag!("(0028,0121)",0x00280121,"Pixel Padding Range Limit",PixelPaddingRangeLimit,Option::None,VM::N(1));
define_tag!("(0028,0122)",0x00280122,"Float Pixel Padding Value",FloatPixelPaddingValue,FL,VM::N(1));
define_tag!("(0028,0123)",0x00280123,"Double Float Pixel Padding Value",DoubleFloatPixelPaddingValue,FD,VM::N(1));
define_tag!("(0028,0124)",0x00280124,"Float Pixel Padding Range Limit",FloatPixelPaddingRangeLimit,FL,VM::N(1));
define_tag!("(0028,0125)",0x00280125,"Double Float Pixel Padding Range Limit",DoubleFloatPixelPaddingRangeLimit,FD,VM::N(1));
define_tag!("(0028,0200)",0x00280200,"Image Location",ImageLocation,US,VM::N(1));
define_tag!("(0028,0300)",0x00280300,"Quality Control Image",QualityControlImage,CS,VM::N(1));
define_tag!("(0028,0301)",0x00280301,"Burned In Annotation",BurnedInAnnotation,CS,VM::N(1));
define_tag!("(0028,0302)",0x00280302,"Recognizable Visual Features",RecognizableVisualFeatures,CS,VM::N(1));
define_tag!("(0028,0303)",0x00280303,"Longitudinal Temporal Information Modified",LongitudinalTemporalInformationModified,CS,VM::N(1));
define_tag!("(0028,0304)",0x00280304,"Referenced Color Palette Instance UID",ReferencedColorPaletteInstanceUID,UI,VM::N(1));
define_tag!("(0028,0400)",0x00280400,"Transform Label",TransformLabel,LO,VM::N(1));
define_tag!("(0028,0401)",0x00280401,"Transform Version Number",TransformVersionNumber,LO,VM::N(1));
define_tag!("(0028,0402)",0x00280402,"Number of Transform Steps",NumberOfTransformSteps,US,VM::N(1));
define_tag!("(0028,0403)",0x00280403,"Sequence of Compressed Data",SequenceOfCompressedData,LO,VM::NOrMore(1));
define_tag!("(0028,0404)",0x00280404,"Details of Coefficients",DetailsOfCoefficients,AT,VM::NOrMore(1));
define_tag!("(0028,0700)",0x00280700,"DCT Label",DCTLabel,LO,VM::N(1));
define_tag!("(0028,0701)",0x00280701,"Data Block Description",DataBlockDescription,CS,VM::NOrMore(1));
define_tag!("(0028,0702)",0x00280702,"Data Block",DataBlock,AT,VM::NOrMore(1));
define_tag!("(0028,0710)",0x00280710,"Normalization Factor Format",NormalizationFactorFormat,US,VM::N(1));
define_tag!("(0028,0720)",0x00280720,"Zonal Map Number Format",ZonalMapNumberFormat,US,VM::N(1));
define_tag!("(0028,0721)",0x00280721,"Zonal Map Location",ZonalMapLocation,AT,VM::NOrMore(1));
define_tag!("(0028,0722)",0x00280722,"Zonal Map Format",ZonalMapFormat,US,VM::N(1));
define_tag!("(0028,0730)",0x00280730,"Adaptive Map Format",AdaptiveMapFormat,US,VM::N(1));
define_tag!("(0028,0740)",0x00280740,"Code Number Format",CodeNumberFormat,US,VM::N(1));
define_tag!("(0028,0A02)",0x00280A02,"Pixel Spacing Calibration Type",PixelSpacingCalibrationType,CS,VM::N(1));
define_tag!("(0028,0A04)",0x00280A04,"Pixel Spacing Calibration Description",PixelSpacingCalibrationDescription,LO,VM::N(1));
define_tag!("(0028,1040)",0x00281040,"Pixel Intensity Relationship",PixelIntensityRelationship,CS,VM::N(1));
define_tag!("(0028,1041)",0x00281041,"Pixel Intensity Relationship Sign",PixelIntensityRelationshipSign,SS,VM::N(1));
define_tag!("(0028,1050)",0x00281050,"Window Center",WindowCenter,DS,VM::NOrMore(1));
define_tag!("(0028,1051)",0x00281051,"Window Width",WindowWidth,DS,VM::NOrMore(1));
define_tag!("(0028,1052)",0x00281052,"Rescale Intercept",RescaleIntercept,DS,VM::N(1));
define_tag!("(0028,1053)",0x00281053,"Rescale Slope",RescaleSlope,DS,VM::N(1));
define_tag!("(0028,1054)",0x00281054,"Rescale Type",RescaleType,LO,VM::N(1));
define_tag!("(0028,1055)",0x00281055,"Window Center & Width Explanation",WindowCenterWidthExplanation,LO,VM::NOrMore(1));
define_tag!("(0028,1056)",0x00281056,"VOI LUT Function",VOILUTFunction,CS,VM::N(1));
define_tag!("(0028,1080)",0x00281080,"Gray Scale",GrayScale,CS,VM::N(1));
define_tag!("(0028,1090)",0x00281090,"Recommended Viewing Mode",RecommendedViewingMode,CS,VM::N(1));
define_tag!("(0028,1100)",0x00281100,"Gray Lookup Table Descriptor",GrayLookupTableDescriptor,Option::None,VM::N(3));
define_tag!("(0028,1101)",0x00281101,"Red Palette Color Lookup Table Descriptor",RedPaletteColorLookupTableDescriptor,Option::None,VM::N(3));
define_tag!("(0028,1102)",0x00281102,"Green Palette Color Lookup Table Descriptor",GreenPaletteColorLookupTableDescriptor,Option::None,VM::N(3));
define_tag!("(0028,1103)",0x00281103,"Blue Palette Color Lookup Table Descriptor",BluePaletteColorLookupTableDescriptor,Option::None,VM::N(3));
define_tag!("(0028,1104)",0x00281104,"Alpha Palette Color Lookup Table Descriptor",AlphaPaletteColorLookupTableDescriptor,US,VM::N(3));
define_tag!("(0028,1111)",0x00281111,"Large Red Palette Color Lookup Table Descriptor",LargeRedPaletteColorLookupTableDescriptor,Option::None,VM::N(4));
define_tag!("(0028,1112)",0x00281112,"Large Green Palette Color Lookup Table Descriptor",LargeGreenPaletteColorLookupTableDescriptor,Option::None,VM::N(4));
define_tag!("(0028,1113)",0x00281113,"Large Blue Palette Color Lookup Table Descriptor",LargeBluePaletteColorLookupTableDescriptor,Option::None,VM::N(4));
define_tag!("(0028,1199)",0x00281199,"Palette Color Lookup Table UID",PaletteColorLookupTableUID,UI,VM::N(1));
define_tag!("(0028,1200)",0x00281200,"Gray Lookup Table Data",GrayLookupTableData,Option::None,VM::OneOrOneOrMore);
define_tag!("(0028,1201)",0x00281201,"Red Palette Color Lookup Table Data",RedPaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1202)",0x00281202,"Green Palette Color Lookup Table Data",GreenPaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1203)",0x00281203,"Blue Palette Color Lookup Table Data",BluePaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1204)",0x00281204,"Alpha Palette Color Lookup Table Data",AlphaPaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1211)",0x00281211,"Large Red Palette Color Lookup Table Data",LargeRedPaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1212)",0x00281212,"Large Green Palette Color Lookup Table Data",LargeGreenPaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1213)",0x00281213,"Large Blue Palette Color Lookup Table Data",LargeBluePaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1214)",0x00281214,"Large Palette Color Lookup Table UID",LargePaletteColorLookupTableUID,UI,VM::N(1));
define_tag!("(0028,1221)",0x00281221,"Segmented Red Palette Color Lookup Table Data",SegmentedRedPaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1222)",0x00281222,"Segmented Green Palette Color Lookup Table Data",SegmentedGreenPaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1223)",0x00281223,"Segmented Blue Palette Color Lookup Table Data",SegmentedBluePaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1224)",0x00281224,"Segmented Alpha Palette Color Lookup Table Data",SegmentedAlphaPaletteColorLookupTableData,OW,VM::N(1));
define_tag!("(0028,1300)",0x00281300,"Breast Implant Present",BreastImplantPresent,CS,VM::N(1));
define_tag!("(0028,1350)",0x00281350,"Partial View",PartialView,CS,VM::N(1));
define_tag!("(0028,1351)",0x00281351,"Partial View Description",PartialViewDescription,ST,VM::N(1));
define_tag!("(0028,1352)",0x00281352,"Partial View Code Sequence",PartialViewCodeSequence,SQ,VM::N(1));
define_tag!("(0028,135A)",0x0028135A,"Spatial Locations Preserved",SpatialLocationsPreserved,CS,VM::N(1));
define_tag!("(0028,1401)",0x00281401,"Data Frame Assignment Sequence",DataFrameAssignmentSequence,SQ,VM::N(1));
define_tag!("(0028,1402)",0x00281402,"Data Path Assignment",DataPathAssignment,CS,VM::N(1));
define_tag!("(0028,1403)",0x00281403,"Bits Mapped to Color Lookup Table",BitsMappedToColorLookupTable,US,VM::N(1));
define_tag!("(0028,1404)",0x00281404,"Blending LUT 1 Sequence",BlendingLUT1Sequence,SQ,VM::N(1));
define_tag!("(0028,1405)",0x00281405,"Blending LUT 1 Transfer Function",BlendingLUT1TransferFunction,CS,VM::N(1));
define_tag!("(0028,1406)",0x00281406,"Blending Weight Constant",BlendingWeightConstant,FD,VM::N(1));
define_tag!("(0028,1407)",0x00281407,"Blending Lookup Table Descriptor",BlendingLookupTableDescriptor,US,VM::N(3));
define_tag!("(0028,1408)",0x00281408,"Blending Lookup Table Data",BlendingLookupTableData,OW,VM::N(1));
define_tag!("(0028,140B)",0x0028140B,"Enhanced Palette Color Lookup Table Sequence",EnhancedPaletteColorLookupTableSequence,SQ,VM::N(1));
define_tag!("(0028,140C)",0x0028140C,"Blending LUT 2 Sequence",BlendingLUT2Sequence,SQ,VM::N(1));
define_tag!("(0028,140D)",0x0028140D,"Blending LUT 2 Transfer Function",BlendingLUT2TransferFunction,CS,VM::N(1));
define_tag!("(0028,140E)",0x0028140E,"Data Path ID",DataPathID,CS,VM::N(1));
define_tag!("(0028,140F)",0x0028140F,"RGB LUT Transfer Function",RGBLUTTransferFunction,CS,VM::N(1));
define_tag!("(0028,1410)",0x00281410,"Alpha LUT Transfer Function",AlphaLUTTransferFunction,CS,VM::N(1));
define_tag!("(0028,2000)",0x00282000,"ICC Profile",ICCProfile,OB,VM::N(1));
define_tag!("(0028,2002)",0x00282002,"Color Space",ColorSpace,CS,VM::N(1));
define_tag!("(0028,2110)",0x00282110,"Lossy Image Compression",LossyImageCompression,CS,VM::N(1));
define_tag!("(0028,2112)",0x00282112,"Lossy Image Compression Ratio",LossyImageCompressionRatio,DS,VM::NOrMore(1));
define_tag!("(0028,2114)",0x00282114,"Lossy Image Compression Method",LossyImageCompressionMethod,CS,VM::NOrMore(1));
define_tag!("(0028,3000)",0x00283000,"Modality LUT Sequence",ModalityLUTSequence,SQ,VM::N(1));
define_tag!("(0028,3002)",0x00283002,"LUT Descriptor",LUTDescriptor,Option::None,VM::N(3));
define_tag!("(0028,3003)",0x00283003,"LUT Explanation",LUTExplanation,LO,VM::N(1));
define_tag!("(0028,3004)",0x00283004,"Modality LUT Type",ModalityLUTType,LO,VM::N(1));
define_tag!("(0028,3006)",0x00283006,"LUT Data",LUTData,Option::None,VM::OneOrOneOrMore);
define_tag!("(0028,3010)",0x00283010,"VOI LUT Sequence",VOILUTSequence,SQ,VM::N(1));
define_tag!("(0028,3110)",0x00283110,"Softcopy VOI LUT Sequence",SoftcopyVOILUTSequence,SQ,VM::N(1));
define_tag!("(0028,4000)",0x00284000,"Image Presentation Comments",ImagePresentationComments,LT,VM::N(1));
define_tag!("(0028,5000)",0x00285000,"Bi-Plane Acquisition Sequence",BiPlaneAcquisitionSequence,SQ,VM::N(1));
define_tag!("(0028,6010)",0x00286010,"Representative Frame Number",RepresentativeFrameNumber,US,VM::N(1));
define_tag!("(0028,6020)",0x00286020,"Frame Numbers of Interest (FOI)",FrameNumbersOfInterest,US,VM::NOrMore(1));
define_tag!("(0028,6022)",0x00286022,"Frame of Interest Description",FrameOfInterestDescription,LO,VM::NOrMore(1));
define_tag!("(0028,6023)",0x00286023,"Frame of Interest Type",FrameOfInterestType,CS,VM::NOrMore(1));
define_tag!("(0028,6030)",0x00286030,"Mask Pointer(s)",MaskPointers,US,VM::NOrMore(1));
define_tag!("(0028,6040)",0x00286040,"R Wave Pointer",RWavePointer,US,VM::NOrMore(1));
define_tag!("(0028,6100)",0x00286100,"Mask Subtraction Sequence",MaskSubtractionSequence,SQ,VM::N(1));
define_tag!("(0028,6101)",0x00286101,"Mask Operation",MaskOperation,CS,VM::N(1));
define_tag!("(0028,6102)",0x00286102,"Applicable Frame Range",ApplicableFrameRange,US,VM::MultipleOfN(2));
define_tag!("(0028,6110)",0x00286110,"Mask Frame Numbers",MaskFrameNumbers,US,VM::NOrMore(1));
define_tag!("(0028,6112)",0x00286112,"Contrast Frame Averaging",ContrastFrameAveraging,US,VM::N(1));
define_tag!("(0028,6114)",0x00286114,"Mask Sub-pixel Shift",MaskSubPixelShift,FL,VM::N(2));
define_tag!("(0028,6120)",0x00286120,"TID Offset",TIDOffset,SS,VM::N(1));
define_tag!("(0028,6190)",0x00286190,"Mask Operation Explanation",MaskOperationExplanation,ST,VM::N(1));
define_tag!("(0028,7000)",0x00287000,"Equipment Administrator Sequence",EquipmentAdministratorSequence,SQ,VM::N(1));
define_tag!("(0028,7001)",0x00287001,"Number of Display Subsystems",NumberOfDisplaySubsystems,US,VM::N(1));
define_tag!("(0028,7002)",0x00287002,"Current Configuration ID",CurrentConfigurationID,US,VM::N(1));
define_tag!("(0028,7003)",0x00287003,"Display Subsystem ID",DisplaySubsystemID,US,VM::N(1));
define_tag!("(0028,7004)",0x00287004,"Display Subsystem Name",DisplaySubsystemName,SH,VM::N(1));
define_tag!("(0028,7005)",0x00287005,"Display Subsystem Description",DisplaySubsystemDescription,LO,VM::N(1));
define_tag!("(0028,7006)",0x00287006,"System Status",SystemStatus,CS,VM::N(1));
define_tag!("(0028,7007)",0x00287007,"System Status Comment",SystemStatusComment,LO,VM::N(1));
define_tag!("(0028,7008)",0x00287008,"Target Luminance Characteristics Sequence",TargetLuminanceCharacteristicsSequence,SQ,VM::N(1));
define_tag!("(0028,7009)",0x00287009,"Luminance Characteristics ID",LuminanceCharacteristicsID,US,VM::N(1));
define_tag!("(0028,700A)",0x0028700A,"Display Subsystem Configuration Sequence",DisplaySubsystemConfigurationSequence,SQ,VM::N(1));
define_tag!("(0028,700B)",0x0028700B,"Configuration ID",ConfigurationID,US,VM::N(1));
define_tag!("(0028,700C)",0x0028700C,"Configuration Name",ConfigurationName,SH,VM::N(1));
define_tag!("(0028,700D)",0x0028700D,"Configuration Description",ConfigurationDescription,LO,VM::N(1));
define_tag!("(0028,700E)",0x0028700E,"Referenced Target Luminance Characteristics ID",ReferencedTargetLuminanceCharacteristicsID,US,VM::N(1));
define_tag!("(0028,700F)",0x0028700F,"QA Results Sequence",QAResultsSequence,SQ,VM::N(1));
define_tag!("(0028,7010)",0x00287010,"Display Subsystem QA Results Sequence",DisplaySubsystemQAResultsSequence,SQ,VM::N(1));
define_tag!("(0028,7011)",0x00287011,"Configuration QA Results Sequence",ConfigurationQAResultsSequence,SQ,VM::N(1));
define_tag!("(0028,7012)",0x00287012,"Measurement Equipment Sequence",MeasurementEquipmentSequence,SQ,VM::N(1));
define_tag!("(0028,7013)",0x00287013,"Measurement Functions",MeasurementFunctions,CS,VM::NOrMore(1));
define_tag!("(0028,7014)",0x00287014,"Measurement Equipment Type",MeasurementEquipmentType,CS,VM::N(1));
define_tag!("(0028,7015)",0x00287015,"Visual Evaluation Result Sequence",VisualEvaluationResultSequence,SQ,VM::N(1));
define_tag!("(0028,7016)",0x00287016,"Display Calibration Result Sequence",DisplayCalibrationResultSequence,SQ,VM::N(1));
define_tag!("(0028,7017)",0x00287017,"DDL Value",DDLValue,US,VM::N(1));
define_tag!("(0028,7018)",0x00287018,"CIExy White Point",CIExyWhitePoint,FL,VM::N(2));
define_tag!("(0028,7019)",0x00287019,"Display Function Type",DisplayFunctionType,CS,VM::N(1));
define_tag!("(0028,701A)",0x0028701A,"Gamma Value",GammaValue,FL,VM::N(1));
define_tag!("(0028,701B)",0x0028701B,"Number of Luminance Points",NumberOfLuminancePoints,US,VM::N(1));
define_tag!("(0028,701C)",0x0028701C,"Luminance Response Sequence",LuminanceResponseSequence,SQ,VM::N(1));
define_tag!("(0028,701D)",0x0028701D,"Target Minimum Luminance",TargetMinimumLuminance,FL,VM::N(1));
define_tag!("(0028,701E)",0x0028701E,"Target Maximum Luminance",TargetMaximumLuminance,FL,VM::N(1));
define_tag!("(0028,701F)",0x0028701F,"Luminance Value",LuminanceValue,FL,VM::N(1));
define_tag!("(0028,7020)",0x00287020,"Luminance Response Description",LuminanceResponseDescription,LO,VM::N(1));
define_tag!("(0028,7021)",0x00287021,"White Point Flag",WhitePointFlag,CS,VM::N(1));
define_tag!("(0028,7022)",0x00287022,"Display Device Type Code Sequence",DisplayDeviceTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0028,7023)",0x00287023,"Display Subsystem Sequence",DisplaySubsystemSequence,SQ,VM::N(1));
define_tag!("(0028,7024)",0x00287024,"Luminance Result Sequence",LuminanceResultSequence,SQ,VM::N(1));
define_tag!("(0028,7025)",0x00287025,"Ambient Light Value Source",AmbientLightValueSource,CS,VM::N(1));
define_tag!("(0028,7026)",0x00287026,"Measured Characteristics",MeasuredCharacteristics,CS,VM::NOrMore(1));
define_tag!("(0028,7027)",0x00287027,"Luminance Uniformity Result Sequence",LuminanceUniformityResultSequence,SQ,VM::N(1));
define_tag!("(0028,7028)",0x00287028,"Visual Evaluation Test Sequence",VisualEvaluationTestSequence,SQ,VM::N(1));
define_tag!("(0028,7029)",0x00287029,"Test Result",TestResult,CS,VM::N(1));
define_tag!("(0028,702A)",0x0028702A,"Test Result Comment",TestResultComment,LO,VM::N(1));
define_tag!("(0028,702B)",0x0028702B,"Test Image Validation",TestImageValidation,CS,VM::N(1));
define_tag!("(0028,702C)",0x0028702C,"Test Pattern Code Sequence",TestPatternCodeSequence,SQ,VM::N(1));
define_tag!("(0028,702D)",0x0028702D,"Measurement Pattern Code Sequence",MeasurementPatternCodeSequence,SQ,VM::N(1));
define_tag!("(0028,702E)",0x0028702E,"Visual Evaluation Method Code Sequence",VisualEvaluationMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0028,7FE0)",0x00287FE0,"Pixel Data Provider URL",PixelDataProviderURL,UR,VM::N(1));
define_tag!("(0028,9001)",0x00289001,"Data Point Rows",DataPointRows,UL,VM::N(1));
define_tag!("(0028,9002)",0x00289002,"Data Point Columns",DataPointColumns,UL,VM::N(1));
define_tag!("(0028,9003)",0x00289003,"Signal Domain Columns",SignalDomainColumns,CS,VM::N(1));
define_tag!("(0028,9099)",0x00289099,"Largest Monochrome Pixel Value",LargestMonochromePixelValue,US,VM::N(1));
define_tag!("(0028,9108)",0x00289108,"Data Representation",DataRepresentation,CS,VM::N(1));
define_tag!("(0028,9110)",0x00289110,"Pixel Measures Sequence",PixelMeasuresSequence,SQ,VM::N(1));
define_tag!("(0028,9132)",0x00289132,"Frame VOI LUT Sequence",FrameVOILUTSequence,SQ,VM::N(1));
define_tag!("(0028,9145)",0x00289145,"Pixel Value Transformation Sequence",PixelValueTransformationSequence,SQ,VM::N(1));
define_tag!("(0028,9235)",0x00289235,"Signal Domain Rows",SignalDomainRows,CS,VM::N(1));
define_tag!("(0028,9411)",0x00289411,"Display Filter Percentage",DisplayFilterPercentage,FL,VM::N(1));
define_tag!("(0028,9415)",0x00289415,"Frame Pixel Shift Sequence",FramePixelShiftSequence,SQ,VM::N(1));
define_tag!("(0028,9416)",0x00289416,"Subtraction Item ID",SubtractionItemID,US,VM::N(1));
define_tag!("(0028,9422)",0x00289422,"Pixel Intensity Relationship LUT Sequence",PixelIntensityRelationshipLUTSequence,SQ,VM::N(1));
define_tag!("(0028,9443)",0x00289443,"Frame Pixel Data Properties Sequence",FramePixelDataPropertiesSequence,SQ,VM::N(1));
define_tag!("(0028,9444)",0x00289444,"Geometrical Properties",GeometricalProperties,CS,VM::N(1));
define_tag!("(0028,9445)",0x00289445,"Geometric Maximum Distortion",GeometricMaximumDistortion,FL,VM::N(1));
define_tag!("(0028,9446)",0x00289446,"Image Processing Applied",ImageProcessingApplied,CS,VM::NOrMore(1));
define_tag!("(0028,9454)",0x00289454,"Mask Selection Mode",MaskSelectionMode,CS,VM::N(1));
define_tag!("(0028,9474)",0x00289474,"LUT Function",LUTFunction,CS,VM::N(1));
define_tag!("(0028,9478)",0x00289478,"Mask Visibility Percentage",MaskVisibilityPercentage,FL,VM::N(1));
define_tag!("(0028,9501)",0x00289501,"Pixel Shift Sequence",PixelShiftSequence,SQ,VM::N(1));
define_tag!("(0028,9502)",0x00289502,"Region Pixel Shift Sequence",RegionPixelShiftSequence,SQ,VM::N(1));
define_tag!("(0028,9503)",0x00289503,"Vertices of the Region",VerticesOfTheRegion,SS,VM::MultipleOfN(2));
define_tag!("(0028,9505)",0x00289505,"Multi-frame Presentation Sequence",MultiFramePresentationSequence,SQ,VM::N(1));
define_tag!("(0028,9506)",0x00289506,"Pixel Shift Frame Range",PixelShiftFrameRange,US,VM::MultipleOfN(2));
define_tag!("(0028,9507)",0x00289507,"LUT Frame Range",LUTFrameRange,US,VM::MultipleOfN(2));
define_tag!("(0028,9520)",0x00289520,"Image to Equipment Mapping Matrix",ImageToEquipmentMappingMatrix,DS,VM::N(16));
define_tag!("(0028,9537)",0x00289537,"Equipment Coordinate System Identification",EquipmentCoordinateSystemIdentification,CS,VM::N(1));
define_tag!("(0032,000A)",0x0032000A,"Study Status ID",StudyStatusID,CS,VM::N(1));
define_tag!("(0032,000C)",0x0032000C,"Study Priority ID",StudyPriorityID,CS,VM::N(1));
define_tag!("(0032,0012)",0x00320012,"Study ID Issuer",StudyIDIssuer,LO,VM::N(1));
define_tag!("(0032,0032)",0x00320032,"Study Verified Date",StudyVerifiedDate,DA,VM::N(1));
define_tag!("(0032,0033)",0x00320033,"Study Verified Time",StudyVerifiedTime,TM,VM::N(1));
define_tag!("(0032,0034)",0x00320034,"Study Read Date",StudyReadDate,DA,VM::N(1));
define_tag!("(0032,0035)",0x00320035,"Study Read Time",StudyReadTime,TM,VM::N(1));
define_tag!("(0032,1000)",0x00321000,"Scheduled Study Start Date",ScheduledStudyStartDate,DA,VM::N(1));
define_tag!("(0032,1001)",0x00321001,"Scheduled Study Start Time",ScheduledStudyStartTime,TM,VM::N(1));
define_tag!("(0032,1010)",0x00321010,"Scheduled Study Stop Date",ScheduledStudyStopDate,DA,VM::N(1));
define_tag!("(0032,1011)",0x00321011,"Scheduled Study Stop Time",ScheduledStudyStopTime,TM,VM::N(1));
define_tag!("(0032,1020)",0x00321020,"Scheduled Study Location",ScheduledStudyLocation,LO,VM::N(1));
define_tag!("(0032,1021)",0x00321021,"Scheduled Study Location AE Title",ScheduledStudyLocationAETitle,AE,VM::NOrMore(1));
define_tag!("(0032,1030)",0x00321030,"Reason for Study",ReasonForStudy,LO,VM::N(1));
define_tag!("(0032,1031)",0x00321031,"Requesting Physician Identification Sequence",RequestingPhysicianIdentificationSequence,SQ,VM::N(1));
define_tag!("(0032,1032)",0x00321032,"Requesting Physician",RequestingPhysician,PN,VM::N(1));
define_tag!("(0032,1033)",0x00321033,"Requesting Service",RequestingService,LO,VM::N(1));
define_tag!("(0032,1034)",0x00321034,"Requesting Service Code Sequence",RequestingServiceCodeSequence,SQ,VM::N(1));
define_tag!("(0032,1040)",0x00321040,"Study Arrival Date",StudyArrivalDate,DA,VM::N(1));
define_tag!("(0032,1041)",0x00321041,"Study Arrival Time",StudyArrivalTime,TM,VM::N(1));
define_tag!("(0032,1050)",0x00321050,"Study Completion Date",StudyCompletionDate,DA,VM::N(1));
define_tag!("(0032,1051)",0x00321051,"Study Completion Time",StudyCompletionTime,TM,VM::N(1));
define_tag!("(0032,1055)",0x00321055,"Study Component Status ID",StudyComponentStatusID,CS,VM::N(1));
define_tag!("(0032,1060)",0x00321060,"Requested Procedure Description",RequestedProcedureDescription,LO,VM::N(1));
define_tag!("(0032,1064)",0x00321064,"Requested Procedure Code Sequence",RequestedProcedureCodeSequence,SQ,VM::N(1));
define_tag!("(0032,1070)",0x00321070,"Requested Contrast Agent",RequestedContrastAgent,LO,VM::N(1));
define_tag!("(0032,4000)",0x00324000,"Study Comments",StudyComments,LT,VM::N(1));
define_tag!("(0038,0004)",0x00380004,"Referenced Patient Alias Sequence",ReferencedPatientAliasSequence,SQ,VM::N(1));
define_tag!("(0038,0008)",0x00380008,"Visit Status ID",VisitStatusID,CS,VM::N(1));
define_tag!("(0038,0010)",0x00380010,"Admission ID",AdmissionID,LO,VM::N(1));
define_tag!("(0038,0011)",0x00380011,"Issuer of Admission ID",IssuerOfAdmissionID,LO,VM::N(1));
define_tag!("(0038,0014)",0x00380014,"Issuer of Admission ID Sequence",IssuerOfAdmissionIDSequence,SQ,VM::N(1));
define_tag!("(0038,0016)",0x00380016,"Route of Admissions",RouteOfAdmissions,LO,VM::N(1));
define_tag!("(0038,001A)",0x0038001A,"Scheduled Admission Date",ScheduledAdmissionDate,DA,VM::N(1));
define_tag!("(0038,001B)",0x0038001B,"Scheduled Admission Time",ScheduledAdmissionTime,TM,VM::N(1));
define_tag!("(0038,001C)",0x0038001C,"Scheduled Discharge Date",ScheduledDischargeDate,DA,VM::N(1));
define_tag!("(0038,001D)",0x0038001D,"Scheduled Discharge Time",ScheduledDischargeTime,TM,VM::N(1));
define_tag!("(0038,001E)",0x0038001E,"Scheduled Patient Institution Residence",ScheduledPatientInstitutionResidence,LO,VM::N(1));
define_tag!("(0038,0020)",0x00380020,"Admitting Date",AdmittingDate,DA,VM::N(1));
define_tag!("(0038,0021)",0x00380021,"Admitting Time",AdmittingTime,TM,VM::N(1));
define_tag!("(0038,0030)",0x00380030,"Discharge Date",DischargeDate,DA,VM::N(1));
define_tag!("(0038,0032)",0x00380032,"Discharge Time",DischargeTime,TM,VM::N(1));
define_tag!("(0038,0040)",0x00380040,"Discharge Diagnosis Description",DischargeDiagnosisDescription,LO,VM::N(1));
define_tag!("(0038,0044)",0x00380044,"Discharge Diagnosis Code Sequence",DischargeDiagnosisCodeSequence,SQ,VM::N(1));
define_tag!("(0038,0050)",0x00380050,"Special Needs",SpecialNeeds,LO,VM::N(1));
define_tag!("(0038,0060)",0x00380060,"Service Episode ID",ServiceEpisodeID,LO,VM::N(1));
define_tag!("(0038,0061)",0x00380061,"Issuer of Service Episode ID",IssuerOfServiceEpisodeID,LO,VM::N(1));
define_tag!("(0038,0062)",0x00380062,"Service Episode Description",ServiceEpisodeDescription,LO,VM::N(1));
define_tag!("(0038,0064)",0x00380064,"Issuer of Service Episode ID Sequence",IssuerOfServiceEpisodeIDSequence,SQ,VM::N(1));
define_tag!("(0038,0100)",0x00380100,"Pertinent Documents Sequence",PertinentDocumentsSequence,SQ,VM::N(1));
define_tag!("(0038,0101)",0x00380101,"Pertinent Resources Sequence",PertinentResourcesSequence,SQ,VM::N(1));
define_tag!("(0038,0102)",0x00380102,"Resource Description",ResourceDescription,LO,VM::N(1));
define_tag!("(0038,0300)",0x00380300,"Current Patient Location",CurrentPatientLocation,LO,VM::N(1));
define_tag!("(0038,0400)",0x00380400,"Patient's Institution Residence",PatientInstitutionResidence,LO,VM::N(1));
define_tag!("(0038,0500)",0x00380500,"Patient State",PatientState,LO,VM::N(1));
define_tag!("(0038,0502)",0x00380502,"Patient Clinical Trial Participation Sequence",PatientClinicalTrialParticipationSequence,SQ,VM::N(1));
define_tag!("(0038,4000)",0x00384000,"Visit Comments",VisitComments,LT,VM::N(1));
define_tag!("(003A,0004)",0x003A0004,"Waveform Originality",WaveformOriginality,CS,VM::N(1));
define_tag!("(003A,0005)",0x003A0005,"Number of Waveform Channels",NumberOfWaveformChannels,US,VM::N(1));
define_tag!("(003A,0010)",0x003A0010,"Number of Waveform Samples",NumberOfWaveformSamples,UL,VM::N(1));
define_tag!("(003A,001A)",0x003A001A,"Sampling Frequency",SamplingFrequency,DS,VM::N(1));
define_tag!("(003A,0020)",0x003A0020,"Multiplex Group Label",MultiplexGroupLabel,SH,VM::N(1));
define_tag!("(003A,0200)",0x003A0200,"Channel Definition Sequence",ChannelDefinitionSequence,SQ,VM::N(1));
define_tag!("(003A,0202)",0x003A0202,"Waveform Channel Number",WaveformChannelNumber,IS,VM::N(1));
define_tag!("(003A,0203)",0x003A0203,"Channel Label",ChannelLabel,SH,VM::N(1));
define_tag!("(003A,0205)",0x003A0205,"Channel Status",ChannelStatus,CS,VM::NOrMore(1));
define_tag!("(003A,0208)",0x003A0208,"Channel Source Sequence",ChannelSourceSequence,SQ,VM::N(1));
define_tag!("(003A,0209)",0x003A0209,"Channel Source Modifiers Sequence",ChannelSourceModifiersSequence,SQ,VM::N(1));
define_tag!("(003A,020A)",0x003A020A,"Source Waveform Sequence",SourceWaveformSequence,SQ,VM::N(1));
define_tag!("(003A,020C)",0x003A020C,"Channel Derivation Description",ChannelDerivationDescription,LO,VM::N(1));
define_tag!("(003A,0210)",0x003A0210,"Channel Sensitivity",ChannelSensitivity,DS,VM::N(1));
define_tag!("(003A,0211)",0x003A0211,"Channel Sensitivity Units Sequence",ChannelSensitivityUnitsSequence,SQ,VM::N(1));
define_tag!("(003A,0212)",0x003A0212,"Channel Sensitivity Correction Factor",ChannelSensitivityCorrectionFactor,DS,VM::N(1));
define_tag!("(003A,0213)",0x003A0213,"Channel Baseline",ChannelBaseline,DS,VM::N(1));
define_tag!("(003A,0214)",0x003A0214,"Channel Time Skew",ChannelTimeSkew,DS,VM::N(1));
define_tag!("(003A,0215)",0x003A0215,"Channel Sample Skew",ChannelSampleSkew,DS,VM::N(1));
define_tag!("(003A,0218)",0x003A0218,"Channel Offset",ChannelOffset,DS,VM::N(1));
define_tag!("(003A,021A)",0x003A021A,"Waveform Bits Stored",WaveformBitsStored,US,VM::N(1));
define_tag!("(003A,0220)",0x003A0220,"Filter Low Frequency",FilterLowFrequency,DS,VM::N(1));
define_tag!("(003A,0221)",0x003A0221,"Filter High Frequency",FilterHighFrequency,DS,VM::N(1));
define_tag!("(003A,0222)",0x003A0222,"Notch Filter Frequency",NotchFilterFrequency,DS,VM::N(1));
define_tag!("(003A,0223)",0x003A0223,"Notch Filter Bandwidth",NotchFilterBandwidth,DS,VM::N(1));
define_tag!("(003A,0230)",0x003A0230,"Waveform Data Display Scale",WaveformDataDisplayScale,FL,VM::N(1));
define_tag!("(003A,0231)",0x003A0231,"Waveform Display Background CIELab Value",WaveformDisplayBackgroundCIELabValue,US,VM::N(3));
define_tag!("(003A,0240)",0x003A0240,"Waveform Presentation Group Sequence",WaveformPresentationGroupSequence,SQ,VM::N(1));
define_tag!("(003A,0241)",0x003A0241,"Presentation Group Number",PresentationGroupNumber,US,VM::N(1));
define_tag!("(003A,0242)",0x003A0242,"Channel Display Sequence",ChannelDisplaySequence,SQ,VM::N(1));
define_tag!("(003A,0244)",0x003A0244,"Channel Recommended Display CIELab Value",ChannelRecommendedDisplayCIELabValue,US,VM::N(3));
define_tag!("(003A,0245)",0x003A0245,"Channel Position",ChannelPosition,FL,VM::N(1));
define_tag!("(003A,0246)",0x003A0246,"Display Shading Flag",DisplayShadingFlag,CS,VM::N(1));
define_tag!("(003A,0247)",0x003A0247,"Fractional Channel Display Scale",FractionalChannelDisplayScale,FL,VM::N(1));
define_tag!("(003A,0248)",0x003A0248,"Absolute Channel Display Scale",AbsoluteChannelDisplayScale,FL,VM::N(1));
define_tag!("(003A,0300)",0x003A0300,"Multiplexed Audio Channels Description Code Sequence",MultiplexedAudioChannelsDescriptionCodeSequence,SQ,VM::N(1));
define_tag!("(003A,0301)",0x003A0301,"Channel Identification Code",ChannelIdentificationCode,IS,VM::N(1));
define_tag!("(003A,0302)",0x003A0302,"Channel Mode",ChannelMode,CS,VM::N(1));
define_tag!("(0040,0001)",0x00400001,"Scheduled Station AE Title",ScheduledStationAETitle,AE,VM::NOrMore(1));
define_tag!("(0040,0002)",0x00400002,"Scheduled Procedure Step Start Date",ScheduledProcedureStepStartDate,DA,VM::N(1));
define_tag!("(0040,0003)",0x00400003,"Scheduled Procedure Step Start Time",ScheduledProcedureStepStartTime,TM,VM::N(1));
define_tag!("(0040,0004)",0x00400004,"Scheduled Procedure Step End Date",ScheduledProcedureStepEndDate,DA,VM::N(1));
define_tag!("(0040,0005)",0x00400005,"Scheduled Procedure Step End Time",ScheduledProcedureStepEndTime,TM,VM::N(1));
define_tag!("(0040,0006)",0x00400006,"Scheduled Performing Physician's Name",ScheduledPerformingPhysicianName,PN,VM::N(1));
define_tag!("(0040,0007)",0x00400007,"Scheduled Procedure Step Description",ScheduledProcedureStepDescription,LO,VM::N(1));
define_tag!("(0040,0008)",0x00400008,"Scheduled Protocol Code Sequence",ScheduledProtocolCodeSequence,SQ,VM::N(1));
define_tag!("(0040,0009)",0x00400009,"Scheduled Procedure Step ID",ScheduledProcedureStepID,SH,VM::N(1));
define_tag!("(0040,000A)",0x0040000A,"Stage Code Sequence",StageCodeSequence,SQ,VM::N(1));
define_tag!("(0040,000B)",0x0040000B,"Scheduled Performing Physician Identification Sequence",ScheduledPerformingPhysicianIdentificationSequence,SQ,VM::N(1));
define_tag!("(0040,0010)",0x00400010,"Scheduled Station Name",ScheduledStationName,SH,VM::NOrMore(1));
define_tag!("(0040,0011)",0x00400011,"Scheduled Procedure Step Location",ScheduledProcedureStepLocation,SH,VM::N(1));
define_tag!("(0040,0012)",0x00400012,"Pre-Medication",PreMedication,LO,VM::N(1));
define_tag!("(0040,0020)",0x00400020,"Scheduled Procedure Step Status",ScheduledProcedureStepStatus,CS,VM::N(1));
define_tag!("(0040,0026)",0x00400026,"Order Placer Identifier Sequence",OrderPlacerIdentifierSequence,SQ,VM::N(1));
define_tag!("(0040,0027)",0x00400027,"Order Filler Identifier Sequence",OrderFillerIdentifierSequence,SQ,VM::N(1));
define_tag!("(0040,0031)",0x00400031,"Local Namespace Entity ID",LocalNamespaceEntityID,UT,VM::N(1));
define_tag!("(0040,0032)",0x00400032,"Universal Entity ID",UniversalEntityID,UT,VM::N(1));
define_tag!("(0040,0033)",0x00400033,"Universal Entity ID Type",UniversalEntityIDType,CS,VM::N(1));
define_tag!("(0040,0035)",0x00400035,"Identifier Type Code",IdentifierTypeCode,CS,VM::N(1));
define_tag!("(0040,0036)",0x00400036,"Assigning Facility Sequence",AssigningFacilitySequence,SQ,VM::N(1));
define_tag!("(0040,0039)",0x00400039,"Assigning Jurisdiction Code Sequence",AssigningJurisdictionCodeSequence,SQ,VM::N(1));
define_tag!("(0040,003A)",0x0040003A,"Assigning Agency or Department Code Sequence",AssigningAgencyOrDepartmentCodeSequence,SQ,VM::N(1));
define_tag!("(0040,0100)",0x00400100,"Scheduled Procedure Step Sequence",ScheduledProcedureStepSequence,SQ,VM::N(1));
define_tag!("(0040,0220)",0x00400220,"Referenced Non-Image Composite SOP Instance Sequence",ReferencedNonImageCompositeSOPInstanceSequence,SQ,VM::N(1));
define_tag!("(0040,0241)",0x00400241,"Performed Station AE Title",PerformedStationAETitle,AE,VM::N(1));
define_tag!("(0040,0242)",0x00400242,"Performed Station Name",PerformedStationName,SH,VM::N(1));
define_tag!("(0040,0243)",0x00400243,"Performed Location",PerformedLocation,SH,VM::N(1));
define_tag!("(0040,0244)",0x00400244,"Performed Procedure Step Start Date",PerformedProcedureStepStartDate,DA,VM::N(1));
define_tag!("(0040,0245)",0x00400245,"Performed Procedure Step Start Time",PerformedProcedureStepStartTime,TM,VM::N(1));
define_tag!("(0040,0250)",0x00400250,"Performed Procedure Step End Date",PerformedProcedureStepEndDate,DA,VM::N(1));
define_tag!("(0040,0251)",0x00400251,"Performed Procedure Step End Time",PerformedProcedureStepEndTime,TM,VM::N(1));
define_tag!("(0040,0252)",0x00400252,"Performed Procedure Step Status",PerformedProcedureStepStatus,CS,VM::N(1));
define_tag!("(0040,0253)",0x00400253,"Performed Procedure Step ID",PerformedProcedureStepID,SH,VM::N(1));
define_tag!("(0040,0254)",0x00400254,"Performed Procedure Step Description",PerformedProcedureStepDescription,LO,VM::N(1));
define_tag!("(0040,0255)",0x00400255,"Performed Procedure Type Description",PerformedProcedureTypeDescription,LO,VM::N(1));
define_tag!("(0040,0260)",0x00400260,"Performed Protocol Code Sequence",PerformedProtocolCodeSequence,SQ,VM::N(1));
define_tag!("(0040,0261)",0x00400261,"Performed Protocol Type",PerformedProtocolType,CS,VM::N(1));
define_tag!("(0040,0270)",0x00400270,"Scheduled Step Attributes Sequence",ScheduledStepAttributesSequence,SQ,VM::N(1));
define_tag!("(0040,0275)",0x00400275,"Request Attributes Sequence",RequestAttributesSequence,SQ,VM::N(1));
define_tag!("(0040,0280)",0x00400280,"Comments on the Performed Procedure Step",CommentsOnThePerformedProcedureStep,ST,VM::N(1));
define_tag!("(0040,0281)",0x00400281,"Performed Procedure Step Discontinuation Reason Code Sequence",PerformedProcedureStepDiscontinuationReasonCodeSequence,SQ,VM::N(1));
define_tag!("(0040,0293)",0x00400293,"Quantity Sequence",QuantitySequence,SQ,VM::N(1));
define_tag!("(0040,0294)",0x00400294,"Quantity",Quantity,DS,VM::N(1));
define_tag!("(0040,0295)",0x00400295,"Measuring Units Sequence",MeasuringUnitsSequence,SQ,VM::N(1));
define_tag!("(0040,0296)",0x00400296,"Billing Item Sequence",BillingItemSequence,SQ,VM::N(1));
define_tag!("(0040,0300)",0x00400300,"Total Time of Fluoroscopy",TotalTimeOfFluoroscopy,US,VM::N(1));
define_tag!("(0040,0301)",0x00400301,"Total Number of Exposures",TotalNumberOfExposures,US,VM::N(1));
define_tag!("(0040,0302)",0x00400302,"Entrance Dose",EntranceDose,US,VM::N(1));
define_tag!("(0040,0303)",0x00400303,"Exposed Area",ExposedArea,US,VM::MToN(1,2));
define_tag!("(0040,0306)",0x00400306,"Distance Source to Entrance",DistanceSourceToEntrance,DS,VM::N(1));
define_tag!("(0040,0307)",0x00400307,"Distance Source to Support",DistanceSourceToSupport,DS,VM::N(1));
define_tag!("(0040,030E)",0x0040030E,"Exposure Dose Sequence",ExposureDoseSequence,SQ,VM::N(1));
define_tag!("(0040,0310)",0x00400310,"Comments on Radiation Dose",CommentsOnRadiationDose,ST,VM::N(1));
define_tag!("(0040,0312)",0x00400312,"X-Ray Output",XRayOutput,DS,VM::N(1));
define_tag!("(0040,0314)",0x00400314,"Half Value Layer",HalfValueLayer,DS,VM::N(1));
define_tag!("(0040,0316)",0x00400316,"Organ Dose",OrganDose,DS,VM::N(1));
define_tag!("(0040,0318)",0x00400318,"Organ Exposed",OrganExposed,CS,VM::N(1));
define_tag!("(0040,0320)",0x00400320,"Billing Procedure Step Sequence",BillingProcedureStepSequence,SQ,VM::N(1));
define_tag!("(0040,0321)",0x00400321,"Film Consumption Sequence",FilmConsumptionSequence,SQ,VM::N(1));
define_tag!("(0040,0324)",0x00400324,"Billing Supplies and Devices Sequence",BillingSuppliesAndDevicesSequence,SQ,VM::N(1));
define_tag!("(0040,0330)",0x00400330,"Referenced Procedure Step Sequence",ReferencedProcedureStepSequence,SQ,VM::N(1));
define_tag!("(0040,0340)",0x00400340,"Performed Series Sequence",PerformedSeriesSequence,SQ,VM::N(1));
define_tag!("(0040,0400)",0x00400400,"Comments on the Scheduled Procedure Step",CommentsOnTheScheduledProcedureStep,LT,VM::N(1));
define_tag!("(0040,0440)",0x00400440,"Protocol Context Sequence",ProtocolContextSequence,SQ,VM::N(1));
define_tag!("(0040,0441)",0x00400441,"Content Item Modifier Sequence",ContentItemModifierSequence,SQ,VM::N(1));
define_tag!("(0040,0500)",0x00400500,"Scheduled Specimen Sequence",ScheduledSpecimenSequence,SQ,VM::N(1));
define_tag!("(0040,050A)",0x0040050A,"Specimen Accession Number",SpecimenAccessionNumber,LO,VM::N(1));
define_tag!("(0040,0512)",0x00400512,"Container Identifier",ContainerIdentifier,LO,VM::N(1));
define_tag!("(0040,0513)",0x00400513,"Issuer of the Container Identifier Sequence",IssuerOfTheContainerIdentifierSequence,SQ,VM::N(1));
define_tag!("(0040,0515)",0x00400515,"Alternate Container Identifier Sequence",AlternateContainerIdentifierSequence,SQ,VM::N(1));
define_tag!("(0040,0518)",0x00400518,"Container Type Code Sequence",ContainerTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0040,051A)",0x0040051A,"Container Description",ContainerDescription,LO,VM::N(1));
define_tag!("(0040,0520)",0x00400520,"Container Component Sequence",ContainerComponentSequence,SQ,VM::N(1));
define_tag!("(0040,0550)",0x00400550,"Specimen Sequence",SpecimenSequence,SQ,VM::N(1));
define_tag!("(0040,0551)",0x00400551,"Specimen Identifier",SpecimenIdentifier,LO,VM::N(1));
define_tag!("(0040,0552)",0x00400552,"Specimen Description Sequence (Trial)",SpecimenDescriptionSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,0553)",0x00400553,"Specimen Description (Trial)",SpecimenDescriptionTrial,ST,VM::N(1));
define_tag!("(0040,0554)",0x00400554,"Specimen UID",SpecimenUID,UI,VM::N(1));
define_tag!("(0040,0555)",0x00400555,"Acquisition Context Sequence",AcquisitionContextSequence,SQ,VM::N(1));
define_tag!("(0040,0556)",0x00400556,"Acquisition Context Description",AcquisitionContextDescription,ST,VM::N(1));
define_tag!("(0040,059A)",0x0040059A,"Specimen Type Code Sequence",SpecimenTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0040,0560)",0x00400560,"Specimen Description Sequence",SpecimenDescriptionSequence,SQ,VM::N(1));
define_tag!("(0040,0562)",0x00400562,"Issuer of the Specimen Identifier Sequence",IssuerOfTheSpecimenIdentifierSequence,SQ,VM::N(1));
define_tag!("(0040,0600)",0x00400600,"Specimen Short Description",SpecimenShortDescription,LO,VM::N(1));
define_tag!("(0040,0602)",0x00400602,"Specimen Detailed Description",SpecimenDetailedDescription,UT,VM::N(1));
define_tag!("(0040,0610)",0x00400610,"Specimen Preparation Sequence",SpecimenPreparationSequence,SQ,VM::N(1));
define_tag!("(0040,0612)",0x00400612,"Specimen Preparation Step Content Item Sequence",SpecimenPreparationStepContentItemSequence,SQ,VM::N(1));
define_tag!("(0040,0620)",0x00400620,"Specimen Localization Content Item Sequence",SpecimenLocalizationContentItemSequence,SQ,VM::N(1));
define_tag!("(0040,06FA)",0x004006FA,"Slide Identifier",SlideIdentifier,LO,VM::N(1));
define_tag!("(0040,071A)",0x0040071A,"Image Center Point Coordinates Sequence",ImageCenterPointCoordinatesSequence,SQ,VM::N(1));
define_tag!("(0040,072A)",0x0040072A,"X Offset in Slide Coordinate System",XOffsetInSlideCoordinateSystem,DS,VM::N(1));
define_tag!("(0040,073A)",0x0040073A,"Y Offset in Slide Coordinate System",YOffsetInSlideCoordinateSystem,DS,VM::N(1));
define_tag!("(0040,074A)",0x0040074A,"Z Offset in Slide Coordinate System",ZOffsetInSlideCoordinateSystem,DS,VM::N(1));
define_tag!("(0040,08D8)",0x004008D8,"Pixel Spacing Sequence",PixelSpacingSequence,SQ,VM::N(1));
define_tag!("(0040,08DA)",0x004008DA,"Coordinate System Axis Code Sequence",CoordinateSystemAxisCodeSequence,SQ,VM::N(1));
define_tag!("(0040,08EA)",0x004008EA,"Measurement Units Code Sequence",MeasurementUnitsCodeSequence,SQ,VM::N(1));
define_tag!("(0040,09F8)",0x004009F8,"Vital Stain Code Sequence (Trial)",VitalStainCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,1001)",0x00401001,"Requested Procedure ID",RequestedProcedureID,SH,VM::N(1));
define_tag!("(0040,1002)",0x00401002,"Reason for the Requested Procedure",ReasonForTheRequestedProcedure,LO,VM::N(1));
define_tag!("(0040,1003)",0x00401003,"Requested Procedure Priority",RequestedProcedurePriority,SH,VM::N(1));
define_tag!("(0040,1004)",0x00401004,"Patient Transport Arrangements",PatientTransportArrangements,LO,VM::N(1));
define_tag!("(0040,1005)",0x00401005,"Requested Procedure Location",RequestedProcedureLocation,LO,VM::N(1));
define_tag!("(0040,1006)",0x00401006,"Placer Order Number / Procedure",PlacerOrderNumberProcedure,SH,VM::N(1));
define_tag!("(0040,1007)",0x00401007,"Filler Order Number / Procedure",FillerOrderNumberProcedure,SH,VM::N(1));
define_tag!("(0040,1008)",0x00401008,"Confidentiality Code",ConfidentialityCode,LO,VM::N(1));
define_tag!("(0040,1009)",0x00401009,"Reporting Priority",ReportingPriority,SH,VM::N(1));
define_tag!("(0040,100A)",0x0040100A,"Reason for Requested Procedure Code Sequence",ReasonForRequestedProcedureCodeSequence,SQ,VM::N(1));
define_tag!("(0040,1010)",0x00401010,"Names of Intended Recipients of Results",NamesOfIntendedRecipientsOfResults,PN,VM::NOrMore(1));
define_tag!("(0040,1011)",0x00401011,"Intended Recipients of Results Identification Sequence",IntendedRecipientsOfResultsIdentificationSequence,SQ,VM::N(1));
define_tag!("(0040,1012)",0x00401012,"Reason For Performed Procedure Code Sequence",ReasonForPerformedProcedureCodeSequence,SQ,VM::N(1));
define_tag!("(0040,1060)",0x00401060,"Requested Procedure Description (Trial)",RequestedProcedureDescriptionTrial,LO,VM::N(1));
define_tag!("(0040,1101)",0x00401101,"Person Identification Code Sequence",PersonIdentificationCodeSequence,SQ,VM::N(1));
define_tag!("(0040,1102)",0x00401102,"Person's Address",PersonAddress,ST,VM::N(1));
define_tag!("(0040,1103)",0x00401103,"Person's Telephone Numbers",PersonTelephoneNumbers,LO,VM::NOrMore(1));
define_tag!("(0040,1104)",0x00401104,"Person's Telecom Information",PersonTelecomInformation,LT,VM::N(1));
define_tag!("(0040,1400)",0x00401400,"Requested Procedure Comments",RequestedProcedureComments,LT,VM::N(1));
define_tag!("(0040,2001)",0x00402001,"Reason for the Imaging Service Request",ReasonForTheImagingServiceRequest,LO,VM::N(1));
define_tag!("(0040,2004)",0x00402004,"Issue Date of Imaging Service Request",IssueDateOfImagingServiceRequest,DA,VM::N(1));
define_tag!("(0040,2005)",0x00402005,"Issue Time of Imaging Service Request",IssueTimeOfImagingServiceRequest,TM,VM::N(1));
define_tag!("(0040,2006)",0x00402006,"Placer Order Number / Imaging Service Request (Retired)",PlacerOrderNumberImagingServiceRequestRetired,SH,VM::N(1));
define_tag!("(0040,2007)",0x00402007,"Filler Order Number / Imaging Service Request (Retired)",FillerOrderNumberImagingServiceRequestRetired,SH,VM::N(1));
define_tag!("(0040,2008)",0x00402008,"Order Entered By",OrderEnteredBy,PN,VM::N(1));
define_tag!("(0040,2009)",0x00402009,"Order Enterer's Location",OrderEntererLocation,SH,VM::N(1));
define_tag!("(0040,2010)",0x00402010,"Order Callback Phone Number",OrderCallbackPhoneNumber,SH,VM::N(1));
define_tag!("(0040,2011)",0x00402011,"Order Callback Telecom Information",OrderCallbackTelecomInformation,LT,VM::N(1));
define_tag!("(0040,2016)",0x00402016,"Placer Order Number / Imaging Service Request",PlacerOrderNumberImagingServiceRequest,LO,VM::N(1));
define_tag!("(0040,2017)",0x00402017,"Filler Order Number / Imaging Service Request",FillerOrderNumberImagingServiceRequest,LO,VM::N(1));
define_tag!("(0040,2400)",0x00402400,"Imaging Service Request Comments",ImagingServiceRequestComments,LT,VM::N(1));
define_tag!("(0040,3001)",0x00403001,"Confidentiality Constraint on Patient Data Description",ConfidentialityConstraintOnPatientDataDescription,LO,VM::N(1));
define_tag!("(0040,4001)",0x00404001,"General Purpose Scheduled Procedure Step Status",GeneralPurposeScheduledProcedureStepStatus,CS,VM::N(1));
define_tag!("(0040,4002)",0x00404002,"General Purpose Performed Procedure Step Status",GeneralPurposePerformedProcedureStepStatus,CS,VM::N(1));
define_tag!("(0040,4003)",0x00404003,"General Purpose Scheduled Procedure Step Priority",GeneralPurposeScheduledProcedureStepPriority,CS,VM::N(1));
define_tag!("(0040,4004)",0x00404004,"Scheduled Processing Applications Code Sequence",ScheduledProcessingApplicationsCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4005)",0x00404005,"Scheduled Procedure Step Start DateTime",ScheduledProcedureStepStartDateTime,DT,VM::N(1));
define_tag!("(0040,4006)",0x00404006,"Multiple Copies Flag",MultipleCopiesFlag,CS,VM::N(1));
define_tag!("(0040,4007)",0x00404007,"Performed Processing Applications Code Sequence",PerformedProcessingApplicationsCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4009)",0x00404009,"Human Performer Code Sequence",HumanPerformerCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4010)",0x00404010,"Scheduled Procedure Step Modification DateTime",ScheduledProcedureStepModificationDateTime,DT,VM::N(1));
define_tag!("(0040,4011)",0x00404011,"Expected Completion DateTime",ExpectedCompletionDateTime,DT,VM::N(1));
define_tag!("(0040,4015)",0x00404015,"Resulting General Purpose Performed Procedure Steps Sequence",ResultingGeneralPurposePerformedProcedureStepsSequence,SQ,VM::N(1));
define_tag!("(0040,4016)",0x00404016,"Referenced General Purpose Scheduled Procedure Step Sequence",ReferencedGeneralPurposeScheduledProcedureStepSequence,SQ,VM::N(1));
define_tag!("(0040,4018)",0x00404018,"Scheduled Workitem Code Sequence",ScheduledWorkitemCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4019)",0x00404019,"Performed Workitem Code Sequence",PerformedWorkitemCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4020)",0x00404020,"Input Availability Flag",InputAvailabilityFlag,CS,VM::N(1));
define_tag!("(0040,4021)",0x00404021,"Input Information Sequence",InputInformationSequence,SQ,VM::N(1));
define_tag!("(0040,4022)",0x00404022,"Relevant Information Sequence",RelevantInformationSequence,SQ,VM::N(1));
define_tag!("(0040,4023)",0x00404023,"Referenced General Purpose Scheduled Procedure Step Transaction UID",ReferencedGeneralPurposeScheduledProcedureStepTransactionUID,UI,VM::N(1));
define_tag!("(0040,4025)",0x00404025,"Scheduled Station Name Code Sequence",ScheduledStationNameCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4026)",0x00404026,"Scheduled Station Class Code Sequence",ScheduledStationClassCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4027)",0x00404027,"Scheduled Station Geographic Location Code Sequence",ScheduledStationGeographicLocationCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4028)",0x00404028,"Performed Station Name Code Sequence",PerformedStationNameCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4029)",0x00404029,"Performed Station Class Code Sequence",PerformedStationClassCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4030)",0x00404030,"Performed Station Geographic Location Code Sequence",PerformedStationGeographicLocationCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4031)",0x00404031,"Requested Subsequent Workitem Code Sequence",RequestedSubsequentWorkitemCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4032)",0x00404032,"Non-DICOM Output Code Sequence",NonDICOMOutputCodeSequence,SQ,VM::N(1));
define_tag!("(0040,4033)",0x00404033,"Output Information Sequence",OutputInformationSequence,SQ,VM::N(1));
define_tag!("(0040,4034)",0x00404034,"Scheduled Human Performers Sequence",ScheduledHumanPerformersSequence,SQ,VM::N(1));
define_tag!("(0040,4035)",0x00404035,"Actual Human Performers Sequence",ActualHumanPerformersSequence,SQ,VM::N(1));
define_tag!("(0040,4036)",0x00404036,"Human Performer's Organization",HumanPerformerOrganization,LO,VM::N(1));
define_tag!("(0040,4037)",0x00404037,"Human Performer's Name",HumanPerformerName,PN,VM::N(1));
define_tag!("(0040,4040)",0x00404040,"Raw Data Handling",RawDataHandling,CS,VM::N(1));
define_tag!("(0040,4041)",0x00404041,"Input Readiness State",InputReadinessState,CS,VM::N(1));
define_tag!("(0040,4050)",0x00404050,"Performed Procedure Step Start DateTime",PerformedProcedureStepStartDateTime,DT,VM::N(1));
define_tag!("(0040,4051)",0x00404051,"Performed Procedure Step End DateTime",PerformedProcedureStepEndDateTime,DT,VM::N(1));
define_tag!("(0040,4052)",0x00404052,"Procedure Step Cancellation DateTime",ProcedureStepCancellationDateTime,DT,VM::N(1));
define_tag!("(0040,4070)",0x00404070,"Output Destination Sequence",OutputDestinationSequence,SQ,VM::N(1));
define_tag!("(0040,4071)",0x00404071,"DICOM Storage Sequence",DICOMStorageSequence,SQ,VM::N(1));
define_tag!("(0040,4072)",0x00404072,"STOW-RS Storage Sequence",STOWRSStorageSequence,SQ,VM::N(1));
define_tag!("(0040,4073)",0x00404073,"Storage URL",StorageURL,UR,VM::N(1));
define_tag!("(0040,4074)",0x00404074,"XDS Storage Sequence",XDSStorageSequence,SQ,VM::N(1));
define_tag!("(0040,8302)",0x00408302,"Entrance Dose in mGy",EntranceDoseInmGy,DS,VM::N(1));
define_tag!("(0040,9092)",0x00409092,"Parametric Map Frame Type Sequence",ParametricMapFrameTypeSequence,SQ,VM::N(1));
define_tag!("(0040,9094)",0x00409094,"Referenced Image Real World Value Mapping Sequence",ReferencedImageRealWorldValueMappingSequence,SQ,VM::N(1));
define_tag!("(0040,9096)",0x00409096,"Real World Value Mapping Sequence",RealWorldValueMappingSequence,SQ,VM::N(1));
define_tag!("(0040,9098)",0x00409098,"Pixel Value Mapping Code Sequence",PixelValueMappingCodeSequence,SQ,VM::N(1));
define_tag!("(0040,9210)",0x00409210,"LUT Label",LUTLabel,SH,VM::N(1));
define_tag!("(0040,9211)",0x00409211,"Real World Value Last Value Mapped",RealWorldValueLastValueMapped,Option::None,VM::N(1));
define_tag!("(0040,9212)",0x00409212,"Real World Value LUT Data",RealWorldValueLUTData,FD,VM::NOrMore(1));
define_tag!("(0040,9213)",0x00409213,"Double Float Real World Value Last Value Mapped",DoubleFloatRealWorldValueLastValueMapped,FD,VM::N(1));
define_tag!("(0040,9214)",0x00409214,"Double Float Real World Value First Value Mapped",DoubleFloatRealWorldValueFirstValueMapped,FD,VM::N(1));
define_tag!("(0040,9216)",0x00409216,"Real World Value First Value Mapped",RealWorldValueFirstValueMapped,Option::None,VM::N(1));
define_tag!("(0040,9220)",0x00409220,"Quantity Definition Sequence",QuantityDefinitionSequence,SQ,VM::N(1));
define_tag!("(0040,9224)",0x00409224,"Real World Value Intercept",RealWorldValueIntercept,FD,VM::N(1));
define_tag!("(0040,9225)",0x00409225,"Real World Value Slope",RealWorldValueSlope,FD,VM::N(1));
define_tag!("(0040,A007)",0x0040A007,"Findings Flag (Trial)",FindingsFlagTrial,CS,VM::N(1));
define_tag!("(0040,A010)",0x0040A010,"Relationship Type",RelationshipType,CS,VM::N(1));
define_tag!("(0040,A020)",0x0040A020,"Findings Sequence (Trial)",FindingsSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A021)",0x0040A021,"Findings Group UID (Trial)",FindingsGroupUIDTrial,UI,VM::N(1));
define_tag!("(0040,A022)",0x0040A022,"Referenced Findings Group UID (Trial)",ReferencedFindingsGroupUIDTrial,UI,VM::N(1));
define_tag!("(0040,A023)",0x0040A023,"Findings Group Recording Date (Trial)",FindingsGroupRecordingDateTrial,DA,VM::N(1));
define_tag!("(0040,A024)",0x0040A024,"Findings Group Recording Time (Trial)",FindingsGroupRecordingTimeTrial,TM,VM::N(1));
define_tag!("(0040,A026)",0x0040A026,"Findings Source Category Code Sequence (Trial)",FindingsSourceCategoryCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A027)",0x0040A027,"Verifying Organization",VerifyingOrganization,LO,VM::N(1));
define_tag!("(0040,A028)",0x0040A028,"Documenting Organization Identifier Code Sequence (Trial)",DocumentingOrganizationIdentifierCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A030)",0x0040A030,"Verification DateTime",VerificationDateTime,DT,VM::N(1));
define_tag!("(0040,A032)",0x0040A032,"Observation DateTime",ObservationDateTime,DT,VM::N(1));
define_tag!("(0040,A040)",0x0040A040,"Value Type",ValueType,CS,VM::N(1));
define_tag!("(0040,A043)",0x0040A043,"Concept Name Code Sequence",ConceptNameCodeSequence,SQ,VM::N(1));
define_tag!("(0040,A047)",0x0040A047,"Measurement Precision Description (Trial)",MeasurementPrecisionDescriptionTrial,LO,VM::N(1));
define_tag!("(0040,A050)",0x0040A050,"Continuity Of Content",ContinuityOfContent,CS,VM::N(1));
define_tag!("(0040,A057)",0x0040A057,"Urgency or Priority Alerts (Trial)",UrgencyOrPriorityAlertsTrial,CS,VM::NOrMore(1));
define_tag!("(0040,A060)",0x0040A060,"Sequencing Indicator (Trial)",SequencingIndicatorTrial,LO,VM::N(1));
define_tag!("(0040,A066)",0x0040A066,"Document Identifier Code Sequence (Trial)",DocumentIdentifierCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A067)",0x0040A067,"Document Author (Trial)",DocumentAuthorTrial,PN,VM::N(1));
define_tag!("(0040,A068)",0x0040A068,"Document Author Identifier Code Sequence (Trial)",DocumentAuthorIdentifierCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A070)",0x0040A070,"Identifier Code Sequence (Trial)",IdentifierCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A073)",0x0040A073,"Verifying Observer Sequence",VerifyingObserverSequence,SQ,VM::N(1));
define_tag!("(0040,A074)",0x0040A074,"Object Binary Identifier (Trial)",ObjectBinaryIdentifierTrial,OB,VM::N(1));
define_tag!("(0040,A075)",0x0040A075,"Verifying Observer Name",VerifyingObserverName,PN,VM::N(1));
define_tag!("(0040,A076)",0x0040A076,"Documenting Observer Identifier Code Sequence (Trial)",DocumentingObserverIdentifierCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A078)",0x0040A078,"Author Observer Sequence",AuthorObserverSequence,SQ,VM::N(1));
define_tag!("(0040,A07A)",0x0040A07A,"Participant Sequence",ParticipantSequence,SQ,VM::N(1));
define_tag!("(0040,A07C)",0x0040A07C,"Custodial Organization Sequence",CustodialOrganizationSequence,SQ,VM::N(1));
define_tag!("(0040,A080)",0x0040A080,"Participation Type",ParticipationType,CS,VM::N(1));
define_tag!("(0040,A082)",0x0040A082,"Participation DateTime",ParticipationDateTime,DT,VM::N(1));
define_tag!("(0040,A084)",0x0040A084,"Observer Type",ObserverType,CS,VM::N(1));
define_tag!("(0040,A085)",0x0040A085,"Procedure Identifier Code Sequence (Trial)",ProcedureIdentifierCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A088)",0x0040A088,"Verifying Observer Identification Code Sequence",VerifyingObserverIdentificationCodeSequence,SQ,VM::N(1));
define_tag!("(0040,A089)",0x0040A089,"Object Directory Binary Identifier (Trial)",ObjectDirectoryBinaryIdentifierTrial,OB,VM::N(1));
define_tag!("(0040,A090)",0x0040A090,"Equivalent CDA Document Sequence",EquivalentCDADocumentSequence,SQ,VM::N(1));
define_tag!("(0040,A0B0)",0x0040A0B0,"Referenced Waveform Channels",ReferencedWaveformChannels,US,VM::MultipleOfN(2));
define_tag!("(0040,A110)",0x0040A110,"Date of Document or Verbal Transaction (Trial)",DateOfDocumentOrVerbalTransactionTrial,DA,VM::N(1));
define_tag!("(0040,A112)",0x0040A112,"Time of Document Creation or Verbal Transaction (Trial)",TimeOfDocumentCreationOrVerbalTransactionTrial,TM,VM::N(1));
define_tag!("(0040,A120)",0x0040A120,"DateTime",DateTime,DT,VM::N(1));
define_tag!("(0040,A121)",0x0040A121,"Date",Date,DA,VM::N(1));
define_tag!("(0040,A122)",0x0040A122,"Time",Time,TM,VM::N(1));
define_tag!("(0040,A123)",0x0040A123,"Person Name",PersonName,PN,VM::N(1));
define_tag!("(0040,A124)",0x0040A124,"UID",UID,UI,VM::N(1));
define_tag!("(0040,A125)",0x0040A125,"Report Status ID (Trial)",ReportStatusIDTrial,CS,VM::N(2));
define_tag!("(0040,A130)",0x0040A130,"Temporal Range Type",TemporalRangeType,CS,VM::N(1));
define_tag!("(0040,A132)",0x0040A132,"Referenced Sample Positions",ReferencedSamplePositions,UL,VM::NOrMore(1));
define_tag!("(0040,A136)",0x0040A136,"Referenced Frame Numbers",ReferencedFrameNumbers,US,VM::NOrMore(1));
define_tag!("(0040,A138)",0x0040A138,"Referenced Time Offsets",ReferencedTimeOffsets,DS,VM::NOrMore(1));
define_tag!("(0040,A13A)",0x0040A13A,"Referenced DateTime",ReferencedDateTime,DT,VM::NOrMore(1));
define_tag!("(0040,A160)",0x0040A160,"Text Value",TextValue,UT,VM::N(1));
define_tag!("(0040,A161)",0x0040A161,"Floating Point Value",FloatingPointValue,FD,VM::NOrMore(1));
define_tag!("(0040,A162)",0x0040A162,"Rational Numerator Value",RationalNumeratorValue,SL,VM::NOrMore(1));
define_tag!("(0040,A163)",0x0040A163,"Rational Denominator Value",RationalDenominatorValue,UL,VM::NOrMore(1));
define_tag!("(0040,A167)",0x0040A167,"Observation Category Code Sequence (Trial)",ObservationCategoryCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A168)",0x0040A168,"Concept Code Sequence",ConceptCodeSequence,SQ,VM::N(1));
define_tag!("(0040,A16A)",0x0040A16A,"Bibliographic Citation (Trial)",BibliographicCitationTrial,ST,VM::N(1));
define_tag!("(0040,A170)",0x0040A170,"Purpose of Reference Code Sequence",PurposeOfReferenceCodeSequence,SQ,VM::N(1));
define_tag!("(0040,A171)",0x0040A171,"Observation UID",ObservationUID,UI,VM::N(1));
define_tag!("(0040,A172)",0x0040A172,"Referenced Observation UID (Trial)",ReferencedObservationUIDTrial,UI,VM::N(1));
define_tag!("(0040,A173)",0x0040A173,"Referenced Observation Class (Trial)",ReferencedObservationClassTrial,CS,VM::N(1));
define_tag!("(0040,A174)",0x0040A174,"Referenced Object Observation Class (Trial)",ReferencedObjectObservationClassTrial,CS,VM::N(1));
define_tag!("(0040,A180)",0x0040A180,"Annotation Group Number",AnnotationGroupNumber,US,VM::N(1));
define_tag!("(0040,A192)",0x0040A192,"Observation Date (Trial)",ObservationDateTrial,DA,VM::N(1));
define_tag!("(0040,A193)",0x0040A193,"Observation Time (Trial)",ObservationTimeTrial,TM,VM::N(1));
define_tag!("(0040,A194)",0x0040A194,"Measurement Automation (Trial)",MeasurementAutomationTrial,CS,VM::N(1));
define_tag!("(0040,A195)",0x0040A195,"Modifier Code Sequence",ModifierCodeSequence,SQ,VM::N(1));
define_tag!("(0040,A224)",0x0040A224,"Identification Description (Trial)",IdentificationDescriptionTrial,ST,VM::N(1));
define_tag!("(0040,A290)",0x0040A290,"Coordinates Set Geometric Type (Trial)",CoordinatesSetGeometricTypeTrial,CS,VM::N(1));
define_tag!("(0040,A296)",0x0040A296,"Algorithm Code Sequence (Trial)",AlgorithmCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A297)",0x0040A297,"Algorithm Description (Trial)",AlgorithmDescriptionTrial,ST,VM::N(1));
define_tag!("(0040,A29A)",0x0040A29A,"Pixel Coordinates Set (Trial)",PixelCoordinatesSetTrial,SL,VM::MultipleOfN(2));
define_tag!("(0040,A300)",0x0040A300,"Measured Value Sequence",MeasuredValueSequence,SQ,VM::N(1));
define_tag!("(0040,A301)",0x0040A301,"Numeric Value Qualifier Code Sequence",NumericValueQualifierCodeSequence,SQ,VM::N(1));
define_tag!("(0040,A307)",0x0040A307,"Current Observer (Trial)",CurrentObserverTrial,PN,VM::N(1));
define_tag!("(0040,A30A)",0x0040A30A,"Numeric Value",NumericValue,DS,VM::NOrMore(1));
define_tag!("(0040,A313)",0x0040A313,"Referenced Accession Sequence (Trial)",ReferencedAccessionSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A33A)",0x0040A33A,"Report Status Comment (Trial)",ReportStatusCommentTrial,ST,VM::N(1));
define_tag!("(0040,A340)",0x0040A340,"Procedure Context Sequence (Trial)",ProcedureContextSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A352)",0x0040A352,"Verbal Source (Trial)",VerbalSourceTrial,PN,VM::N(1));
define_tag!("(0040,A353)",0x0040A353,"Address (Trial)",AddressTrial,ST,VM::N(1));
define_tag!("(0040,A354)",0x0040A354,"Telephone Number (Trial)",TelephoneNumberTrial,LO,VM::N(1));
define_tag!("(0040,A358)",0x0040A358,"Verbal Source Identifier Code Sequence (Trial)",VerbalSourceIdentifierCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A360)",0x0040A360,"Predecessor Documents Sequence",PredecessorDocumentsSequence,SQ,VM::N(1));
define_tag!("(0040,A370)",0x0040A370,"Referenced Request Sequence",ReferencedRequestSequence,SQ,VM::N(1));
define_tag!("(0040,A372)",0x0040A372,"Performed Procedure Code Sequence",PerformedProcedureCodeSequence,SQ,VM::N(1));
define_tag!("(0040,A375)",0x0040A375,"Current Requested Procedure Evidence Sequence",CurrentRequestedProcedureEvidenceSequence,SQ,VM::N(1));
define_tag!("(0040,A380)",0x0040A380,"Report Detail Sequence (Trial)",ReportDetailSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A385)",0x0040A385,"Pertinent Other Evidence Sequence",PertinentOtherEvidenceSequence,SQ,VM::N(1));
define_tag!("(0040,A390)",0x0040A390,"HL7 Structured Document Reference Sequence",HL7StructuredDocumentReferenceSequence,SQ,VM::N(1));
define_tag!("(0040,A402)",0x0040A402,"Observation Subject UID (Trial)",ObservationSubjectUIDTrial,UI,VM::N(1));
define_tag!("(0040,A403)",0x0040A403,"Observation Subject Class (Trial)",ObservationSubjectClassTrial,CS,VM::N(1));
define_tag!("(0040,A404)",0x0040A404,"Observation Subject Type Code Sequence (Trial)",ObservationSubjectTypeCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A491)",0x0040A491,"Completion Flag",CompletionFlag,CS,VM::N(1));
define_tag!("(0040,A492)",0x0040A492,"Completion Flag Description",CompletionFlagDescription,LO,VM::N(1));
define_tag!("(0040,A493)",0x0040A493,"Verification Flag",VerificationFlag,CS,VM::N(1));
define_tag!("(0040,A494)",0x0040A494,"Archive Requested",ArchiveRequested,CS,VM::N(1));
define_tag!("(0040,A496)",0x0040A496,"Preliminary Flag",PreliminaryFlag,CS,VM::N(1));
define_tag!("(0040,A504)",0x0040A504,"Content Template Sequence",ContentTemplateSequence,SQ,VM::N(1));
define_tag!("(0040,A525)",0x0040A525,"Identical Documents Sequence",IdenticalDocumentsSequence,SQ,VM::N(1));
define_tag!("(0040,A600)",0x0040A600,"Observation Subject Context Flag (Trial)",ObservationSubjectContextFlagTrial,CS,VM::N(1));
define_tag!("(0040,A601)",0x0040A601,"Observer Context Flag (Trial)",ObserverContextFlagTrial,CS,VM::N(1));
define_tag!("(0040,A603)",0x0040A603,"Procedure Context Flag (Trial)",ProcedureContextFlagTrial,CS,VM::N(1));
define_tag!("(0040,A730)",0x0040A730,"Content Sequence",ContentSequence,SQ,VM::N(1));
define_tag!("(0040,A731)",0x0040A731,"Relationship Sequence (Trial)",RelationshipSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A732)",0x0040A732,"Relationship Type Code Sequence (Trial)",RelationshipTypeCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A744)",0x0040A744,"Language Code Sequence (Trial)",LanguageCodeSequenceTrial,SQ,VM::N(1));
define_tag!("(0040,A992)",0x0040A992,"Uniform Resource Locator (Trial)",UniformResourceLocatorTrial,ST,VM::N(1));
define_tag!("(0040,B020)",0x0040B020,"Waveform Annotation Sequence",WaveformAnnotationSequence,SQ,VM::N(1));
define_tag!("(0040,DB00)",0x0040DB00,"Template Identifier",TemplateIdentifier,CS,VM::N(1));
define_tag!("(0040,DB06)",0x0040DB06,"Template Version",TemplateVersion,DT,VM::N(1));
define_tag!("(0040,DB07)",0x0040DB07,"Template Local Version",TemplateLocalVersion,DT,VM::N(1));
define_tag!("(0040,DB0B)",0x0040DB0B,"Template Extension Flag",TemplateExtensionFlag,CS,VM::N(1));
define_tag!("(0040,DB0C)",0x0040DB0C,"Template Extension Organization UID",TemplateExtensionOrganizationUID,UI,VM::N(1));
define_tag!("(0040,DB0D)",0x0040DB0D,"Template Extension Creator UID",TemplateExtensionCreatorUID,UI,VM::N(1));
define_tag!("(0040,DB73)",0x0040DB73,"Referenced Content Item Identifier",ReferencedContentItemIdentifier,UL,VM::NOrMore(1));
define_tag!("(0040,E001)",0x0040E001,"HL7 Instance Identifier",HL7InstanceIdentifier,ST,VM::N(1));
define_tag!("(0040,E004)",0x0040E004,"HL7 Document Effective Time",HL7DocumentEffectiveTime,DT,VM::N(1));
define_tag!("(0040,E006)",0x0040E006,"HL7 Document Type Code Sequence",HL7DocumentTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0040,E008)",0x0040E008,"Document Class Code Sequence",DocumentClassCodeSequence,SQ,VM::N(1));
define_tag!("(0040,E010)",0x0040E010,"Retrieve URI",RetrieveURI,UR,VM::N(1));
define_tag!("(0040,E011)",0x0040E011,"Retrieve Location UID",RetrieveLocationUID,UI,VM::N(1));
define_tag!("(0040,E020)",0x0040E020,"Type of Instances",TypeOfInstances,CS,VM::N(1));
define_tag!("(0040,E021)",0x0040E021,"DICOM Retrieval Sequence",DICOMRetrievalSequence,SQ,VM::N(1));
define_tag!("(0040,E022)",0x0040E022,"DICOM Media Retrieval Sequence",DICOMMediaRetrievalSequence,SQ,VM::N(1));
define_tag!("(0040,E023)",0x0040E023,"WADO Retrieval Sequence",WADORetrievalSequence,SQ,VM::N(1));
define_tag!("(0040,E024)",0x0040E024,"XDS Retrieval Sequence",XDSRetrievalSequence,SQ,VM::N(1));
define_tag!("(0040,E025)",0x0040E025,"WADO-RS Retrieval Sequence",WADORSRetrievalSequence,SQ,VM::N(1));
define_tag!("(0040,E030)",0x0040E030,"Repository Unique ID",RepositoryUniqueID,UI,VM::N(1));
define_tag!("(0040,E031)",0x0040E031,"Home Community ID",HomeCommunityID,UI,VM::N(1));
define_tag!("(0042,0010)",0x00420010,"Document Title",DocumentTitle,ST,VM::N(1));
define_tag!("(0042,0011)",0x00420011,"Encapsulated Document",EncapsulatedDocument,OB,VM::N(1));
define_tag!("(0042,0012)",0x00420012,"MIME Type of Encapsulated Document",MIMETypeOfEncapsulatedDocument,LO,VM::N(1));
define_tag!("(0042,0013)",0x00420013,"Source Instance Sequence",SourceInstanceSequence,SQ,VM::N(1));
define_tag!("(0042,0014)",0x00420014,"List of MIME Types",ListOfMIMETypes,LO,VM::NOrMore(1));
define_tag!("(0044,0001)",0x00440001,"Product Package Identifier",ProductPackageIdentifier,ST,VM::N(1));
define_tag!("(0044,0002)",0x00440002,"Substance Administration Approval",SubstanceAdministrationApproval,CS,VM::N(1));
define_tag!("(0044,0003)",0x00440003,"Approval Status Further Description",ApprovalStatusFurtherDescription,LT,VM::N(1));
define_tag!("(0044,0004)",0x00440004,"Approval Status DateTime",ApprovalStatusDateTime,DT,VM::N(1));
define_tag!("(0044,0007)",0x00440007,"Product Type Code Sequence",ProductTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0044,0008)",0x00440008,"Product Name",ProductName,LO,VM::NOrMore(1));
define_tag!("(0044,0009)",0x00440009,"Product Description",ProductDescription,LT,VM::N(1));
define_tag!("(0044,000A)",0x0044000A,"Product Lot Identifier",ProductLotIdentifier,LO,VM::N(1));
define_tag!("(0044,000B)",0x0044000B,"Product Expiration DateTime",ProductExpirationDateTime,DT,VM::N(1));
define_tag!("(0044,0010)",0x00440010,"Substance Administration DateTime",SubstanceAdministrationDateTime,DT,VM::N(1));
define_tag!("(0044,0011)",0x00440011,"Substance Administration Notes",SubstanceAdministrationNotes,LO,VM::N(1));
define_tag!("(0044,0012)",0x00440012,"Substance Administration Device ID",SubstanceAdministrationDeviceID,LO,VM::N(1));
define_tag!("(0044,0013)",0x00440013,"Product Parameter Sequence",ProductParameterSequence,SQ,VM::N(1));
define_tag!("(0044,0019)",0x00440019,"Substance Administration Parameter Sequence",SubstanceAdministrationParameterSequence,SQ,VM::N(1));
define_tag!("(0046,0012)",0x00460012,"Lens Description",LensDescription,LO,VM::N(1));
define_tag!("(0046,0014)",0x00460014,"Right Lens Sequence",RightLensSequence,SQ,VM::N(1));
define_tag!("(0046,0015)",0x00460015,"Left Lens Sequence",LeftLensSequence,SQ,VM::N(1));
define_tag!("(0046,0016)",0x00460016,"Unspecified Laterality Lens Sequence",UnspecifiedLateralityLensSequence,SQ,VM::N(1));
define_tag!("(0046,0018)",0x00460018,"Cylinder Sequence",CylinderSequence,SQ,VM::N(1));
define_tag!("(0046,0028)",0x00460028,"Prism Sequence",PrismSequence,SQ,VM::N(1));
define_tag!("(0046,0030)",0x00460030,"Horizontal Prism Power",HorizontalPrismPower,FD,VM::N(1));
define_tag!("(0046,0032)",0x00460032,"Horizontal Prism Base",HorizontalPrismBase,CS,VM::N(1));
define_tag!("(0046,0034)",0x00460034,"Vertical Prism Power",VerticalPrismPower,FD,VM::N(1));
define_tag!("(0046,0036)",0x00460036,"Vertical Prism Base",VerticalPrismBase,CS,VM::N(1));
define_tag!("(0046,0038)",0x00460038,"Lens Segment Type",LensSegmentType,CS,VM::N(1));
define_tag!("(0046,0040)",0x00460040,"Optical Transmittance",OpticalTransmittance,FD,VM::N(1));
define_tag!("(0046,0042)",0x00460042,"Channel Width",ChannelWidth,FD,VM::N(1));
define_tag!("(0046,0044)",0x00460044,"Pupil Size",PupilSize,FD,VM::N(1));
define_tag!("(0046,0046)",0x00460046,"Corneal Size",CornealSize,FD,VM::N(1));
define_tag!("(0046,0050)",0x00460050,"Autorefraction Right Eye Sequence",AutorefractionRightEyeSequence,SQ,VM::N(1));
define_tag!("(0046,0052)",0x00460052,"Autorefraction Left Eye Sequence",AutorefractionLeftEyeSequence,SQ,VM::N(1));
define_tag!("(0046,0060)",0x00460060,"Distance Pupillary Distance",DistancePupillaryDistance,FD,VM::N(1));
define_tag!("(0046,0062)",0x00460062,"Near Pupillary Distance",NearPupillaryDistance,FD,VM::N(1));
define_tag!("(0046,0063)",0x00460063,"Intermediate Pupillary Distance",IntermediatePupillaryDistance,FD,VM::N(1));
define_tag!("(0046,0064)",0x00460064,"Other Pupillary Distance",OtherPupillaryDistance,FD,VM::N(1));
define_tag!("(0046,0070)",0x00460070,"Keratometry Right Eye Sequence",KeratometryRightEyeSequence,SQ,VM::N(1));
define_tag!("(0046,0071)",0x00460071,"Keratometry Left Eye Sequence",KeratometryLeftEyeSequence,SQ,VM::N(1));
define_tag!("(0046,0074)",0x00460074,"Steep Keratometric Axis Sequence",SteepKeratometricAxisSequence,SQ,VM::N(1));
define_tag!("(0046,0075)",0x00460075,"Radius of Curvature",RadiusOfCurvature,FD,VM::N(1));
define_tag!("(0046,0076)",0x00460076,"Keratometric Power",KeratometricPower,FD,VM::N(1));
define_tag!("(0046,0077)",0x00460077,"Keratometric Axis",KeratometricAxis,FD,VM::N(1));
define_tag!("(0046,0080)",0x00460080,"Flat Keratometric Axis Sequence",FlatKeratometricAxisSequence,SQ,VM::N(1));
define_tag!("(0046,0092)",0x00460092,"Background Color",BackgroundColor,CS,VM::N(1));
define_tag!("(0046,0094)",0x00460094,"Optotype",Optotype,CS,VM::N(1));
define_tag!("(0046,0095)",0x00460095,"Optotype Presentation",OptotypePresentation,CS,VM::N(1));
define_tag!("(0046,0097)",0x00460097,"Subjective Refraction Right Eye Sequence",SubjectiveRefractionRightEyeSequence,SQ,VM::N(1));
define_tag!("(0046,0098)",0x00460098,"Subjective Refraction Left Eye Sequence",SubjectiveRefractionLeftEyeSequence,SQ,VM::N(1));
define_tag!("(0046,0100)",0x00460100,"Add Near Sequence",AddNearSequence,SQ,VM::N(1));
define_tag!("(0046,0101)",0x00460101,"Add Intermediate Sequence",AddIntermediateSequence,SQ,VM::N(1));
define_tag!("(0046,0102)",0x00460102,"Add Other Sequence",AddOtherSequence,SQ,VM::N(1));
define_tag!("(0046,0104)",0x00460104,"Add Power",AddPower,FD,VM::N(1));
define_tag!("(0046,0106)",0x00460106,"Viewing Distance",ViewingDistance,FD,VM::N(1));
define_tag!("(0046,0121)",0x00460121,"Visual Acuity Type Code Sequence",VisualAcuityTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0046,0122)",0x00460122,"Visual Acuity Right Eye Sequence",VisualAcuityRightEyeSequence,SQ,VM::N(1));
define_tag!("(0046,0123)",0x00460123,"Visual Acuity Left Eye Sequence",VisualAcuityLeftEyeSequence,SQ,VM::N(1));
define_tag!("(0046,0124)",0x00460124,"Visual Acuity Both Eyes Open Sequence",VisualAcuityBothEyesOpenSequence,SQ,VM::N(1));
define_tag!("(0046,0125)",0x00460125,"Viewing Distance Type",ViewingDistanceType,CS,VM::N(1));
define_tag!("(0046,0135)",0x00460135,"Visual Acuity Modifiers",VisualAcuityModifiers,SS,VM::N(2));
define_tag!("(0046,0137)",0x00460137,"Decimal Visual Acuity",DecimalVisualAcuity,FD,VM::N(1));
define_tag!("(0046,0139)",0x00460139,"Optotype Detailed Definition",OptotypeDetailedDefinition,LO,VM::N(1));
define_tag!("(0046,0145)",0x00460145,"Referenced Refractive Measurements Sequence",ReferencedRefractiveMeasurementsSequence,SQ,VM::N(1));
define_tag!("(0046,0146)",0x00460146,"Sphere Power",SpherePower,FD,VM::N(1));
define_tag!("(0046,0147)",0x00460147,"Cylinder Power",CylinderPower,FD,VM::N(1));
define_tag!("(0046,0201)",0x00460201,"Corneal Topography Surface",CornealTopographySurface,CS,VM::N(1));
define_tag!("(0046,0202)",0x00460202,"Corneal Vertex Location",CornealVertexLocation,FL,VM::N(2));
define_tag!("(0046,0203)",0x00460203,"Pupil Centroid X-Coordinate",PupilCentroidXCoordinate,FL,VM::N(1));
define_tag!("(0046,0204)",0x00460204,"Pupil Centroid Y-Coordinate",PupilCentroidYCoordinate,FL,VM::N(1));
define_tag!("(0046,0205)",0x00460205,"Equivalent Pupil Radius",EquivalentPupilRadius,FL,VM::N(1));
define_tag!("(0046,0207)",0x00460207,"Corneal Topography Map Type Code Sequence",CornealTopographyMapTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0046,0208)",0x00460208,"Vertices of the Outline of Pupil",VerticesOfTheOutlineOfPupil,IS,VM::MultipleOfN(2));
define_tag!("(0046,0210)",0x00460210,"Corneal Topography Mapping Normals Sequence",CornealTopographyMappingNormalsSequence,SQ,VM::N(1));
define_tag!("(0046,0211)",0x00460211,"Maximum Corneal Curvature Sequence",MaximumCornealCurvatureSequence,SQ,VM::N(1));
define_tag!("(0046,0212)",0x00460212,"Maximum Corneal Curvature",MaximumCornealCurvature,FL,VM::N(1));
define_tag!("(0046,0213)",0x00460213,"Maximum Corneal Curvature Location",MaximumCornealCurvatureLocation,FL,VM::N(2));
define_tag!("(0046,0215)",0x00460215,"Minimum Keratometric Sequence",MinimumKeratometricSequence,SQ,VM::N(1));
define_tag!("(0046,0218)",0x00460218,"Simulated Keratometric Cylinder Sequence",SimulatedKeratometricCylinderSequence,SQ,VM::N(1));
define_tag!("(0046,0220)",0x00460220,"Average Corneal Power",AverageCornealPower,FL,VM::N(1));
define_tag!("(0046,0224)",0x00460224,"Corneal I-S Value",CornealISValue,FL,VM::N(1));
define_tag!("(0046,0227)",0x00460227,"Analyzed Area",AnalyzedArea,FL,VM::N(1));
define_tag!("(0046,0230)",0x00460230,"Surface Regularity Index",SurfaceRegularityIndex,FL,VM::N(1));
define_tag!("(0046,0232)",0x00460232,"Surface Asymmetry Index",SurfaceAsymmetryIndex,FL,VM::N(1));
define_tag!("(0046,0234)",0x00460234,"Corneal Eccentricity Index",CornealEccentricityIndex,FL,VM::N(1));
define_tag!("(0046,0236)",0x00460236,"Keratoconus Prediction Index",KeratoconusPredictionIndex,FL,VM::N(1));
define_tag!("(0046,0238)",0x00460238,"Decimal Potential Visual Acuity",DecimalPotentialVisualAcuity,FL,VM::N(1));
define_tag!("(0046,0242)",0x00460242,"Corneal Topography Map Quality Evaluation",CornealTopographyMapQualityEvaluation,CS,VM::N(1));
define_tag!("(0046,0244)",0x00460244,"Source Image Corneal Processed Data Sequence",SourceImageCornealProcessedDataSequence,SQ,VM::N(1));
define_tag!("(0046,0247)",0x00460247,"Corneal Point Location",CornealPointLocation,FL,VM::N(3));
define_tag!("(0046,0248)",0x00460248,"Corneal Point Estimated",CornealPointEstimated,CS,VM::N(1));
define_tag!("(0046,0249)",0x00460249,"Axial Power",AxialPower,FL,VM::N(1));
define_tag!("(0046,0250)",0x00460250,"Tangential Power",TangentialPower,FL,VM::N(1));
define_tag!("(0046,0251)",0x00460251,"Refractive Power",RefractivePower,FL,VM::N(1));
define_tag!("(0046,0252)",0x00460252,"Relative Elevation",RelativeElevation,FL,VM::N(1));
define_tag!("(0046,0253)",0x00460253,"Corneal Wavefront",CornealWavefront,FL,VM::N(1));
define_tag!("(0048,0001)",0x00480001,"Imaged Volume Width",ImagedVolumeWidth,FL,VM::N(1));
define_tag!("(0048,0002)",0x00480002,"Imaged Volume Height",ImagedVolumeHeight,FL,VM::N(1));
define_tag!("(0048,0003)",0x00480003,"Imaged Volume Depth",ImagedVolumeDepth,FL,VM::N(1));
define_tag!("(0048,0006)",0x00480006,"Total Pixel Matrix Columns",TotalPixelMatrixColumns,UL,VM::N(1));
define_tag!("(0048,0007)",0x00480007,"Total Pixel Matrix Rows",TotalPixelMatrixRows,UL,VM::N(1));
define_tag!("(0048,0008)",0x00480008,"Total Pixel Matrix Origin Sequence",TotalPixelMatrixOriginSequence,SQ,VM::N(1));
define_tag!("(0048,0010)",0x00480010,"Specimen Label in Image",SpecimenLabelInImage,CS,VM::N(1));
define_tag!("(0048,0011)",0x00480011,"Focus Method",FocusMethod,CS,VM::N(1));
define_tag!("(0048,0012)",0x00480012,"Extended Depth of Field",ExtendedDepthOfField,CS,VM::N(1));
define_tag!("(0048,0013)",0x00480013,"Number of Focal Planes",NumberOfFocalPlanes,US,VM::N(1));
define_tag!("(0048,0014)",0x00480014,"Distance Between Focal Planes",DistanceBetweenFocalPlanes,FL,VM::N(1));
define_tag!("(0048,0015)",0x00480015,"Recommended Absent Pixel CIELab Value",RecommendedAbsentPixelCIELabValue,US,VM::N(3));
define_tag!("(0048,0100)",0x00480100,"Illuminator Type Code Sequence",IlluminatorTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0048,0102)",0x00480102,"Image Orientation (Slide)",ImageOrientationSlide,DS,VM::N(6));
define_tag!("(0048,0105)",0x00480105,"Optical Path Sequence",OpticalPathSequence,SQ,VM::N(1));
define_tag!("(0048,0106)",0x00480106,"Optical Path Identifier",OpticalPathIdentifier,SH,VM::N(1));
define_tag!("(0048,0107)",0x00480107,"Optical Path Description",OpticalPathDescription,ST,VM::N(1));
define_tag!("(0048,0108)",0x00480108,"Illumination Color Code Sequence",IlluminationColorCodeSequence,SQ,VM::N(1));
define_tag!("(0048,0110)",0x00480110,"Specimen Reference Sequence",SpecimenReferenceSequence,SQ,VM::N(1));
define_tag!("(0048,0111)",0x00480111,"Condenser Lens Power",CondenserLensPower,DS,VM::N(1));
define_tag!("(0048,0112)",0x00480112,"Objective Lens Power",ObjectiveLensPower,DS,VM::N(1));
define_tag!("(0048,0113)",0x00480113,"Objective Lens Numerical Aperture",ObjectiveLensNumericalAperture,DS,VM::N(1));
define_tag!("(0048,0120)",0x00480120,"Palette Color Lookup Table Sequence",PaletteColorLookupTableSequence,SQ,VM::N(1));
define_tag!("(0048,0200)",0x00480200,"Referenced Image Navigation Sequence",ReferencedImageNavigationSequence,SQ,VM::N(1));
define_tag!("(0048,0201)",0x00480201,"Top Left Hand Corner of Localizer Area",TopLeftHandCornerOfLocalizerArea,US,VM::N(2));
define_tag!("(0048,0202)",0x00480202,"Bottom Right Hand Corner of Localizer Area",BottomRightHandCornerOfLocalizerArea,US,VM::N(2));
define_tag!("(0048,0207)",0x00480207,"Optical Path Identification Sequence",OpticalPathIdentificationSequence,SQ,VM::N(1));
define_tag!("(0048,021A)",0x0048021A,"Plane Position (Slide) Sequence",PlanePositionSlideSequence,SQ,VM::N(1));
define_tag!("(0048,021E)",0x0048021E,"Column Position In Total Image Pixel Matrix",ColumnPositionInTotalImagePixelMatrix,SL,VM::N(1));
define_tag!("(0048,021F)",0x0048021F,"Row Position In Total Image Pixel Matrix",RowPositionInTotalImagePixelMatrix,SL,VM::N(1));
define_tag!("(0048,0301)",0x00480301,"Pixel Origin Interpretation",PixelOriginInterpretation,CS,VM::N(1));
define_tag!("(0050,0004)",0x00500004,"Calibration Image",CalibrationImage,CS,VM::N(1));
define_tag!("(0050,0010)",0x00500010,"Device Sequence",DeviceSequence,SQ,VM::N(1));
define_tag!("(0050,0012)",0x00500012,"Container Component Type Code Sequence",ContainerComponentTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0050,0013)",0x00500013,"Container Component Thickness",ContainerComponentThickness,FD,VM::N(1));
define_tag!("(0050,0014)",0x00500014,"Device Length",DeviceLength,DS,VM::N(1));
define_tag!("(0050,0015)",0x00500015,"Container Component Width",ContainerComponentWidth,FD,VM::N(1));
define_tag!("(0050,0016)",0x00500016,"Device Diameter",DeviceDiameter,DS,VM::N(1));
define_tag!("(0050,0017)",0x00500017,"Device Diameter Units",DeviceDiameterUnits,CS,VM::N(1));
define_tag!("(0050,0018)",0x00500018,"Device Volume",DeviceVolume,DS,VM::N(1));
define_tag!("(0050,0019)",0x00500019,"Inter-Marker Distance",InterMarkerDistance,DS,VM::N(1));
define_tag!("(0050,001A)",0x0050001A,"Container Component Material",ContainerComponentMaterial,CS,VM::N(1));
define_tag!("(0050,001B)",0x0050001B,"Container Component ID",ContainerComponentID,LO,VM::N(1));
define_tag!("(0050,001C)",0x0050001C,"Container Component Length",ContainerComponentLength,FD,VM::N(1));
define_tag!("(0050,001D)",0x0050001D,"Container Component Diameter",ContainerComponentDiameter,FD,VM::N(1));
define_tag!("(0050,001E)",0x0050001E,"Container Component Description",ContainerComponentDescription,LO,VM::N(1));
define_tag!("(0050,0020)",0x00500020,"Device Description",DeviceDescription,LO,VM::N(1));
define_tag!("(0052,0001)",0x00520001,"Contrast/Bolus Ingredient Percent by Volume",ContrastBolusIngredientPercentByVolume,FL,VM::N(1));
define_tag!("(0052,0002)",0x00520002,"OCT Focal Distance",OCTFocalDistance,FD,VM::N(1));
define_tag!("(0052,0003)",0x00520003,"Beam Spot Size",BeamSpotSize,FD,VM::N(1));
define_tag!("(0052,0004)",0x00520004,"Effective Refractive Index",EffectiveRefractiveIndex,FD,VM::N(1));
define_tag!("(0052,0006)",0x00520006,"OCT Acquisition Domain",OCTAcquisitionDomain,CS,VM::N(1));
define_tag!("(0052,0007)",0x00520007,"OCT Optical Center Wavelength",OCTOpticalCenterWavelength,FD,VM::N(1));
define_tag!("(0052,0008)",0x00520008,"Axial Resolution",AxialResolution,FD,VM::N(1));
define_tag!("(0052,0009)",0x00520009,"Ranging Depth",RangingDepth,FD,VM::N(1));
define_tag!("(0052,0011)",0x00520011,"A-line Rate",ALineRate,FD,VM::N(1));
define_tag!("(0052,0012)",0x00520012,"A-lines Per Frame",ALinesPerFrame,US,VM::N(1));
define_tag!("(0052,0013)",0x00520013,"Catheter Rotational Rate",CatheterRotationalRate,FD,VM::N(1));
define_tag!("(0052,0014)",0x00520014,"A-line Pixel Spacing",ALinePixelSpacing,FD,VM::N(1));
define_tag!("(0052,0016)",0x00520016,"Mode of Percutaneous Access Sequence",ModeOfPercutaneousAccessSequence,SQ,VM::N(1));
define_tag!("(0052,0025)",0x00520025,"Intravascular OCT Frame Type Sequence",IntravascularOCTFrameTypeSequence,SQ,VM::N(1));
define_tag!("(0052,0026)",0x00520026,"OCT Z Offset Applied",OCTZOffsetApplied,CS,VM::N(1));
define_tag!("(0052,0027)",0x00520027,"Intravascular Frame Content Sequence",IntravascularFrameContentSequence,SQ,VM::N(1));
define_tag!("(0052,0028)",0x00520028,"Intravascular Longitudinal Distance",IntravascularLongitudinalDistance,FD,VM::N(1));
define_tag!("(0052,0029)",0x00520029,"Intravascular OCT Frame Content Sequence",IntravascularOCTFrameContentSequence,SQ,VM::N(1));
define_tag!("(0052,0030)",0x00520030,"OCT Z Offset Correction",OCTZOffsetCorrection,SS,VM::N(1));
define_tag!("(0052,0031)",0x00520031,"Catheter Direction of Rotation",CatheterDirectionOfRotation,CS,VM::N(1));
define_tag!("(0052,0033)",0x00520033,"Seam Line Location",SeamLineLocation,FD,VM::N(1));
define_tag!("(0052,0034)",0x00520034,"First A-line Location",FirstALineLocation,FD,VM::N(1));
define_tag!("(0052,0036)",0x00520036,"Seam Line Index",SeamLineIndex,US,VM::N(1));
define_tag!("(0052,0038)",0x00520038,"Number of Padded A-lines",NumberOfPaddedALines,US,VM::N(1));
define_tag!("(0052,0039)",0x00520039,"Interpolation Type",InterpolationType,CS,VM::N(1));
define_tag!("(0052,003A)",0x0052003A,"Refractive Index Applied",RefractiveIndexApplied,CS,VM::N(1));
define_tag!("(0054,0010)",0x00540010,"Energy Window Vector",EnergyWindowVector,US,VM::NOrMore(1));
define_tag!("(0054,0011)",0x00540011,"Number of Energy Windows",NumberOfEnergyWindows,US,VM::N(1));
define_tag!("(0054,0012)",0x00540012,"Energy Window Information Sequence",EnergyWindowInformationSequence,SQ,VM::N(1));
define_tag!("(0054,0013)",0x00540013,"Energy Window Range Sequence",EnergyWindowRangeSequence,SQ,VM::N(1));
define_tag!("(0054,0014)",0x00540014,"Energy Window Lower Limit",EnergyWindowLowerLimit,DS,VM::N(1));
define_tag!("(0054,0015)",0x00540015,"Energy Window Upper Limit",EnergyWindowUpperLimit,DS,VM::N(1));
define_tag!("(0054,0016)",0x00540016,"Radiopharmaceutical Information Sequence",RadiopharmaceuticalInformationSequence,SQ,VM::N(1));
define_tag!("(0054,0017)",0x00540017,"Residual Syringe Counts",ResidualSyringeCounts,IS,VM::N(1));
define_tag!("(0054,0018)",0x00540018,"Energy Window Name",EnergyWindowName,SH,VM::N(1));
define_tag!("(0054,0020)",0x00540020,"Detector Vector",DetectorVector,US,VM::NOrMore(1));
define_tag!("(0054,0021)",0x00540021,"Number of Detectors",NumberOfDetectors,US,VM::N(1));
define_tag!("(0054,0022)",0x00540022,"Detector Information Sequence",DetectorInformationSequence,SQ,VM::N(1));
define_tag!("(0054,0030)",0x00540030,"Phase Vector",PhaseVector,US,VM::NOrMore(1));
define_tag!("(0054,0031)",0x00540031,"Number of Phases",NumberOfPhases,US,VM::N(1));
define_tag!("(0054,0032)",0x00540032,"Phase Information Sequence",PhaseInformationSequence,SQ,VM::N(1));
define_tag!("(0054,0033)",0x00540033,"Number of Frames in Phase",NumberOfFramesInPhase,US,VM::N(1));
define_tag!("(0054,0036)",0x00540036,"Phase Delay",PhaseDelay,IS,VM::N(1));
define_tag!("(0054,0038)",0x00540038,"Pause Between Frames",PauseBetweenFrames,IS,VM::N(1));
define_tag!("(0054,0039)",0x00540039,"Phase Description",PhaseDescription,CS,VM::N(1));
define_tag!("(0054,0050)",0x00540050,"Rotation Vector",RotationVector,US,VM::NOrMore(1));
define_tag!("(0054,0051)",0x00540051,"Number of Rotations",NumberOfRotations,US,VM::N(1));
define_tag!("(0054,0052)",0x00540052,"Rotation Information Sequence",RotationInformationSequence,SQ,VM::N(1));
define_tag!("(0054,0053)",0x00540053,"Number of Frames in Rotation",NumberOfFramesInRotation,US,VM::N(1));
define_tag!("(0054,0060)",0x00540060,"R-R Interval Vector",RRIntervalVector,US,VM::NOrMore(1));
define_tag!("(0054,0061)",0x00540061,"Number of R-R Intervals",NumberOfRRIntervals,US,VM::N(1));
define_tag!("(0054,0062)",0x00540062,"Gated Information Sequence",GatedInformationSequence,SQ,VM::N(1));
define_tag!("(0054,0063)",0x00540063,"Data Information Sequence",DataInformationSequence,SQ,VM::N(1));
define_tag!("(0054,0070)",0x00540070,"Time Slot Vector",TimeSlotVector,US,VM::NOrMore(1));
define_tag!("(0054,0071)",0x00540071,"Number of Time Slots",NumberOfTimeSlots,US,VM::N(1));
define_tag!("(0054,0072)",0x00540072,"Time Slot Information Sequence",TimeSlotInformationSequence,SQ,VM::N(1));
define_tag!("(0054,0073)",0x00540073,"Time Slot Time",TimeSlotTime,DS,VM::N(1));
define_tag!("(0054,0080)",0x00540080,"Slice Vector",SliceVector,US,VM::NOrMore(1));
define_tag!("(0054,0081)",0x00540081,"Number of Slices",NumberOfSlices,US,VM::N(1));
define_tag!("(0054,0090)",0x00540090,"Angular View Vector",AngularViewVector,US,VM::NOrMore(1));
define_tag!("(0054,0100)",0x00540100,"Time Slice Vector",TimeSliceVector,US,VM::NOrMore(1));
define_tag!("(0054,0101)",0x00540101,"Number of Time Slices",NumberOfTimeSlices,US,VM::N(1));
define_tag!("(0054,0200)",0x00540200,"Start Angle",StartAngle,DS,VM::N(1));
define_tag!("(0054,0202)",0x00540202,"Type of Detector Motion",TypeOfDetectorMotion,CS,VM::N(1));
define_tag!("(0054,0210)",0x00540210,"Trigger Vector",TriggerVector,IS,VM::NOrMore(1));
define_tag!("(0054,0211)",0x00540211,"Number of Triggers in Phase",NumberOfTriggersInPhase,US,VM::N(1));
define_tag!("(0054,0220)",0x00540220,"View Code Sequence",ViewCodeSequence,SQ,VM::N(1));
define_tag!("(0054,0222)",0x00540222,"View Modifier Code Sequence",ViewModifierCodeSequence,SQ,VM::N(1));
define_tag!("(0054,0300)",0x00540300,"Radionuclide Code Sequence",RadionuclideCodeSequence,SQ,VM::N(1));
define_tag!("(0054,0302)",0x00540302,"Administration Route Code Sequence",AdministrationRouteCodeSequence,SQ,VM::N(1));
define_tag!("(0054,0304)",0x00540304,"Radiopharmaceutical Code Sequence",RadiopharmaceuticalCodeSequence,SQ,VM::N(1));
define_tag!("(0054,0306)",0x00540306,"Calibration Data Sequence",CalibrationDataSequence,SQ,VM::N(1));
define_tag!("(0054,0308)",0x00540308,"Energy Window Number",EnergyWindowNumber,US,VM::N(1));
define_tag!("(0054,0400)",0x00540400,"Image ID",ImageID,SH,VM::N(1));
define_tag!("(0054,0410)",0x00540410,"Patient Orientation Code Sequence",PatientOrientationCodeSequence,SQ,VM::N(1));
define_tag!("(0054,0412)",0x00540412,"Patient Orientation Modifier Code Sequence",PatientOrientationModifierCodeSequence,SQ,VM::N(1));
define_tag!("(0054,0414)",0x00540414,"Patient Gantry Relationship Code Sequence",PatientGantryRelationshipCodeSequence,SQ,VM::N(1));
define_tag!("(0054,0500)",0x00540500,"Slice Progression Direction",SliceProgressionDirection,CS,VM::N(1));
define_tag!("(0054,0501)",0x00540501,"Scan Progression Direction",ScanProgressionDirection,CS,VM::N(1));
define_tag!("(0054,1000)",0x00541000,"Series Type",SeriesType,CS,VM::N(2));
define_tag!("(0054,1001)",0x00541001,"Units",Units,CS,VM::N(1));
define_tag!("(0054,1002)",0x00541002,"Counts Source",CountsSource,CS,VM::N(1));
define_tag!("(0054,1004)",0x00541004,"Reprojection Method",ReprojectionMethod,CS,VM::N(1));
define_tag!("(0054,1006)",0x00541006,"SUV Type",SUVType,CS,VM::N(1));
define_tag!("(0054,1100)",0x00541100,"Randoms Correction Method",RandomsCorrectionMethod,CS,VM::N(1));
define_tag!("(0054,1101)",0x00541101,"Attenuation Correction Method",AttenuationCorrectionMethod,LO,VM::N(1));
define_tag!("(0054,1102)",0x00541102,"Decay Correction",DecayCorrection,CS,VM::N(1));
define_tag!("(0054,1103)",0x00541103,"Reconstruction Method",ReconstructionMethod,LO,VM::N(1));
define_tag!("(0054,1104)",0x00541104,"Detector Lines of Response Used",DetectorLinesOfResponseUsed,LO,VM::N(1));
define_tag!("(0054,1105)",0x00541105,"Scatter Correction Method",ScatterCorrectionMethod,LO,VM::N(1));
define_tag!("(0054,1200)",0x00541200,"Axial Acceptance",AxialAcceptance,DS,VM::N(1));
define_tag!("(0054,1201)",0x00541201,"Axial Mash",AxialMash,IS,VM::N(2));
define_tag!("(0054,1202)",0x00541202,"Transverse Mash",TransverseMash,IS,VM::N(1));
define_tag!("(0054,1203)",0x00541203,"Detector Element Size",DetectorElementSize,DS,VM::N(2));
define_tag!("(0054,1210)",0x00541210,"Coincidence Window Width",CoincidenceWindowWidth,DS,VM::N(1));
define_tag!("(0054,1220)",0x00541220,"Secondary Counts Type",SecondaryCountsType,CS,VM::NOrMore(1));
define_tag!("(0054,1300)",0x00541300,"Frame Reference Time",FrameReferenceTime,DS,VM::N(1));
define_tag!("(0054,1310)",0x00541310,"Primary (Prompts) Counts Accumulated",PrimaryPromptsCountsAccumulated,IS,VM::N(1));
define_tag!("(0054,1311)",0x00541311,"Secondary Counts Accumulated",SecondaryCountsAccumulated,IS,VM::NOrMore(1));
define_tag!("(0054,1320)",0x00541320,"Slice Sensitivity Factor",SliceSensitivityFactor,DS,VM::N(1));
define_tag!("(0054,1321)",0x00541321,"Decay Factor",DecayFactor,DS,VM::N(1));
define_tag!("(0054,1322)",0x00541322,"Dose Calibration Factor",DoseCalibrationFactor,DS,VM::N(1));
define_tag!("(0054,1323)",0x00541323,"Scatter Fraction Factor",ScatterFractionFactor,DS,VM::N(1));
define_tag!("(0054,1324)",0x00541324,"Dead Time Factor",DeadTimeFactor,DS,VM::N(1));
define_tag!("(0054,1330)",0x00541330,"Image Index",ImageIndex,US,VM::N(1));
define_tag!("(0054,1400)",0x00541400,"Counts Included",CountsIncluded,CS,VM::NOrMore(1));
define_tag!("(0054,1401)",0x00541401,"Dead Time Correction Flag",DeadTimeCorrectionFlag,CS,VM::N(1));
define_tag!("(0060,3000)",0x00603000,"Histogram Sequence",HistogramSequence,SQ,VM::N(1));
define_tag!("(0060,3002)",0x00603002,"Histogram Number of Bins",HistogramNumberOfBins,US,VM::N(1));
define_tag!("(0060,3004)",0x00603004,"Histogram First Bin Value",HistogramFirstBinValue,Option::None,VM::N(1));
define_tag!("(0060,3006)",0x00603006,"Histogram Last Bin Value",HistogramLastBinValue,Option::None,VM::N(1));
define_tag!("(0060,3008)",0x00603008,"Histogram Bin Width",HistogramBinWidth,US,VM::N(1));
define_tag!("(0060,3010)",0x00603010,"Histogram Explanation",HistogramExplanation,LO,VM::N(1));
define_tag!("(0060,3020)",0x00603020,"Histogram Data",HistogramData,UL,VM::NOrMore(1));
define_tag!("(0062,0001)",0x00620001,"Segmentation Type",SegmentationType,CS,VM::N(1));
define_tag!("(0062,0002)",0x00620002,"Segment Sequence",SegmentSequence,SQ,VM::N(1));
define_tag!("(0062,0003)",0x00620003,"Segmented Property Category Code Sequence",SegmentedPropertyCategoryCodeSequence,SQ,VM::N(1));
define_tag!("(0062,0004)",0x00620004,"Segment Number",SegmentNumber,US,VM::N(1));
define_tag!("(0062,0005)",0x00620005,"Segment Label",SegmentLabel,LO,VM::N(1));
define_tag!("(0062,0006)",0x00620006,"Segment Description",SegmentDescription,ST,VM::N(1));
define_tag!("(0062,0008)",0x00620008,"Segment Algorithm Type",SegmentAlgorithmType,CS,VM::N(1));
define_tag!("(0062,0009)",0x00620009,"Segment Algorithm Name",SegmentAlgorithmName,LO,VM::N(1));
define_tag!("(0062,000A)",0x0062000A,"Segment Identification Sequence",SegmentIdentificationSequence,SQ,VM::N(1));
define_tag!("(0062,000B)",0x0062000B,"Referenced Segment Number",ReferencedSegmentNumber,US,VM::NOrMore(1));
define_tag!("(0062,000C)",0x0062000C,"Recommended Display Grayscale Value",RecommendedDisplayGrayscaleValue,US,VM::N(1));
define_tag!("(0062,000D)",0x0062000D,"Recommended Display CIELab Value",RecommendedDisplayCIELabValue,US,VM::N(3));
define_tag!("(0062,000E)",0x0062000E,"Maximum Fractional Value",MaximumFractionalValue,US,VM::N(1));
define_tag!("(0062,000F)",0x0062000F,"Segmented Property Type Code Sequence",SegmentedPropertyTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0062,0010)",0x00620010,"Segmentation Fractional Type",SegmentationFractionalType,CS,VM::N(1));
define_tag!("(0062,0011)",0x00620011,"Segmented Property Type Modifier Code Sequence",SegmentedPropertyTypeModifierCodeSequence,SQ,VM::N(1));
define_tag!("(0062,0012)",0x00620012,"Used Segments Sequence",UsedSegmentsSequence,SQ,VM::N(1));
define_tag!("(0062,0020)",0x00620020,"Tracking ID",TrackingID,UT,VM::N(1));
define_tag!("(0062,0021)",0x00620021,"Tracking UID",TrackingUID,UI,VM::N(1));
define_tag!("(0064,0002)",0x00640002,"Deformable Registration Sequence",DeformableRegistrationSequence,SQ,VM::N(1));
define_tag!("(0064,0003)",0x00640003,"Source Frame of Reference UID",SourceFrameOfReferenceUID,UI,VM::N(1));
define_tag!("(0064,0005)",0x00640005,"Deformable Registration Grid Sequence",DeformableRegistrationGridSequence,SQ,VM::N(1));
define_tag!("(0064,0007)",0x00640007,"Grid Dimensions",GridDimensions,UL,VM::N(3));
define_tag!("(0064,0008)",0x00640008,"Grid Resolution",GridResolution,FD,VM::N(3));
define_tag!("(0064,0009)",0x00640009,"Vector Grid Data",VectorGridData,OF,VM::N(1));
define_tag!("(0064,000F)",0x0064000F,"Pre Deformation Matrix Registration Sequence",PreDeformationMatrixRegistrationSequence,SQ,VM::N(1));
define_tag!("(0064,0010)",0x00640010,"Post Deformation Matrix Registration Sequence",PostDeformationMatrixRegistrationSequence,SQ,VM::N(1));
define_tag!("(0066,0001)",0x00660001,"Number of Surfaces",NumberOfSurfaces,UL,VM::N(1));
define_tag!("(0066,0002)",0x00660002,"Surface Sequence",SurfaceSequence,SQ,VM::N(1));
define_tag!("(0066,0003)",0x00660003,"Surface Number",SurfaceNumber,UL,VM::N(1));
define_tag!("(0066,0004)",0x00660004,"Surface Comments",SurfaceComments,LT,VM::N(1));
define_tag!("(0066,0009)",0x00660009,"Surface Processing",SurfaceProcessing,CS,VM::N(1));
define_tag!("(0066,000A)",0x0066000A,"Surface Processing Ratio",SurfaceProcessingRatio,FL,VM::N(1));
define_tag!("(0066,000B)",0x0066000B,"Surface Processing Description",SurfaceProcessingDescription,LO,VM::N(1));
define_tag!("(0066,000C)",0x0066000C,"Recommended Presentation Opacity",RecommendedPresentationOpacity,FL,VM::N(1));
define_tag!("(0066,000D)",0x0066000D,"Recommended Presentation Type",RecommendedPresentationType,CS,VM::N(1));
define_tag!("(0066,000E)",0x0066000E,"Finite Volume",FiniteVolume,CS,VM::N(1));
define_tag!("(0066,0010)",0x00660010,"Manifold",Manifold,CS,VM::N(1));
define_tag!("(0066,0011)",0x00660011,"Surface Points Sequence",SurfacePointsSequence,SQ,VM::N(1));
define_tag!("(0066,0012)",0x00660012,"Surface Points Normals Sequence",SurfacePointsNormalsSequence,SQ,VM::N(1));
define_tag!("(0066,0013)",0x00660013,"Surface Mesh Primitives Sequence",SurfaceMeshPrimitivesSequence,SQ,VM::N(1));
define_tag!("(0066,0015)",0x00660015,"Number of Surface Points",NumberOfSurfacePoints,UL,VM::N(1));
define_tag!("(0066,0016)",0x00660016,"Point Coordinates Data",PointCoordinatesData,OF,VM::N(1));
define_tag!("(0066,0017)",0x00660017,"Point Position Accuracy",PointPositionAccuracy,FL,VM::N(3));
define_tag!("(0066,0018)",0x00660018,"Mean Point Distance",MeanPointDistance,FL,VM::N(1));
define_tag!("(0066,0019)",0x00660019,"Maximum Point Distance",MaximumPointDistance,FL,VM::N(1));
define_tag!("(0066,001A)",0x0066001A,"Points Bounding Box Coordinates",PointsBoundingBoxCoordinates,FL,VM::N(6));
define_tag!("(0066,001B)",0x0066001B,"Axis of Rotation",AxisOfRotation,FL,VM::N(3));
define_tag!("(0066,001C)",0x0066001C,"Center of Rotation",CenterOfRotation,FL,VM::N(3));
define_tag!("(0066,001E)",0x0066001E,"Number of Vectors",NumberOfVectors,UL,VM::N(1));
define_tag!("(0066,001F)",0x0066001F,"Vector Dimensionality",VectorDimensionality,US,VM::N(1));
define_tag!("(0066,0020)",0x00660020,"Vector Accuracy",VectorAccuracy,FL,VM::NOrMore(1));
define_tag!("(0066,0021)",0x00660021,"Vector Coordinate Data",VectorCoordinateData,OF,VM::N(1));
define_tag!("(0066,0023)",0x00660023,"Triangle Point Index List",TrianglePointIndexList,OW,VM::N(1));
define_tag!("(0066,0024)",0x00660024,"Edge Point Index List",EdgePointIndexList,OW,VM::N(1));
define_tag!("(0066,0025)",0x00660025,"Vertex Point Index List",VertexPointIndexList,OW,VM::N(1));
define_tag!("(0066,0026)",0x00660026,"Triangle Strip Sequence",TriangleStripSequence,SQ,VM::N(1));
define_tag!("(0066,0027)",0x00660027,"Triangle Fan Sequence",TriangleFanSequence,SQ,VM::N(1));
define_tag!("(0066,0028)",0x00660028,"Line Sequence",LineSequence,SQ,VM::N(1));
define_tag!("(0066,0029)",0x00660029,"Primitive Point Index List",PrimitivePointIndexList,OW,VM::N(1));
define_tag!("(0066,002A)",0x0066002A,"Surface Count",SurfaceCount,UL,VM::N(1));
define_tag!("(0066,002B)",0x0066002B,"Referenced Surface Sequence",ReferencedSurfaceSequence,SQ,VM::N(1));
define_tag!("(0066,002C)",0x0066002C,"Referenced Surface Number",ReferencedSurfaceNumber,UL,VM::N(1));
define_tag!("(0066,002D)",0x0066002D,"Segment Surface Generation Algorithm Identification Sequence",SegmentSurfaceGenerationAlgorithmIdentificationSequence,SQ,VM::N(1));
define_tag!("(0066,002E)",0x0066002E,"Segment Surface Source Instance Sequence",SegmentSurfaceSourceInstanceSequence,SQ,VM::N(1));
define_tag!("(0066,002F)",0x0066002F,"Algorithm Family Code Sequence",AlgorithmFamilyCodeSequence,SQ,VM::N(1));
define_tag!("(0066,0030)",0x00660030,"Algorithm Name Code Sequence",AlgorithmNameCodeSequence,SQ,VM::N(1));
define_tag!("(0066,0031)",0x00660031,"Algorithm Version",AlgorithmVersion,LO,VM::N(1));
define_tag!("(0066,0032)",0x00660032,"Algorithm Parameters",AlgorithmParameters,LT,VM::N(1));
define_tag!("(0066,0034)",0x00660034,"Facet Sequence",FacetSequence,SQ,VM::N(1));
define_tag!("(0066,0035)",0x00660035,"Surface Processing Algorithm Identification Sequence",SurfaceProcessingAlgorithmIdentificationSequence,SQ,VM::N(1));
define_tag!("(0066,0036)",0x00660036,"Algorithm Name",AlgorithmName,LO,VM::N(1));
define_tag!("(0066,0037)",0x00660037,"Recommended Point Radius",RecommendedPointRadius,FL,VM::N(1));
define_tag!("(0066,0038)",0x00660038,"Recommended Line Thickness",RecommendedLineThickness,FL,VM::N(1));
define_tag!("(0066,0040)",0x00660040,"Long Primitive Point Index List",LongPrimitivePointIndexList,OL,VM::N(1));
define_tag!("(0066,0041)",0x00660041,"Long Triangle Point Index List",LongTrianglePointIndexList,OL,VM::N(1));
define_tag!("(0066,0042)",0x00660042,"Long Edge Point Index List",LongEdgePointIndexList,OL,VM::N(1));
define_tag!("(0066,0043)",0x00660043,"Long Vertex Point Index List",LongVertexPointIndexList,OL,VM::N(1));
define_tag!("(0066,0101)",0x00660101,"Track Set Sequence",TrackSetSequence,SQ,VM::N(1));
define_tag!("(0066,0102)",0x00660102,"Track Sequence",TrackSequence,SQ,VM::N(1));
define_tag!("(0066,0103)",0x00660103,"Recommended Display CIELab Value List",RecommendedDisplayCIELabValueList,OW,VM::N(1));
define_tag!("(0066,0104)",0x00660104,"Tracking Algorithm Identification Sequence",TrackingAlgorithmIdentificationSequence,SQ,VM::N(1));
define_tag!("(0066,0105)",0x00660105,"Track Set Number",TrackSetNumber,UL,VM::N(1));
define_tag!("(0066,0106)",0x00660106,"Track Set Label",TrackSetLabel,LO,VM::N(1));
define_tag!("(0066,0107)",0x00660107,"Track Set Description",TrackSetDescription,UT,VM::N(1));
define_tag!("(0066,0108)",0x00660108,"Track Set Anatomical Type Code Sequence",TrackSetAnatomicalTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0066,0121)",0x00660121,"Measurements Sequence",MeasurementsSequence,SQ,VM::N(1));
define_tag!("(0066,0124)",0x00660124,"Track Set Statistics Sequence",TrackSetStatisticsSequence,SQ,VM::N(1));
define_tag!("(0066,0125)",0x00660125,"Floating Point Values",FloatingPointValues,OF,VM::N(1));
define_tag!("(0066,0129)",0x00660129,"Track Point Index List",TrackPointIndexList,OL,VM::N(1));
define_tag!("(0066,0130)",0x00660130,"Track Statistics Sequence",TrackStatisticsSequence,SQ,VM::N(1));
define_tag!("(0066,0132)",0x00660132,"Measurement Values Sequence",MeasurementValuesSequence,SQ,VM::N(1));
define_tag!("(0066,0133)",0x00660133,"Diffusion Acquisition Code Sequence",DiffusionAcquisitionCodeSequence,SQ,VM::N(1));
define_tag!("(0066,0134)",0x00660134,"Diffusion Model Code Sequence",DiffusionModelCodeSequence,SQ,VM::N(1));
define_tag!("(0068,6210)",0x00686210,"Implant Size",ImplantSize,LO,VM::N(1));
define_tag!("(0068,6221)",0x00686221,"Implant Template Version",ImplantTemplateVersion,LO,VM::N(1));
define_tag!("(0068,6222)",0x00686222,"Replaced Implant Template Sequence",ReplacedImplantTemplateSequence,SQ,VM::N(1));
define_tag!("(0068,6223)",0x00686223,"Implant Type",ImplantType,CS,VM::N(1));
define_tag!("(0068,6224)",0x00686224,"Derivation Implant Template Sequence",DerivationImplantTemplateSequence,SQ,VM::N(1));
define_tag!("(0068,6225)",0x00686225,"Original Implant Template Sequence",OriginalImplantTemplateSequence,SQ,VM::N(1));
define_tag!("(0068,6226)",0x00686226,"Effective DateTime",EffectiveDateTime,DT,VM::N(1));
define_tag!("(0068,6230)",0x00686230,"Implant Target Anatomy Sequence",ImplantTargetAnatomySequence,SQ,VM::N(1));
define_tag!("(0068,6260)",0x00686260,"Information From Manufacturer Sequence",InformationFromManufacturerSequence,SQ,VM::N(1));
define_tag!("(0068,6265)",0x00686265,"Notification From Manufacturer Sequence",NotificationFromManufacturerSequence,SQ,VM::N(1));
define_tag!("(0068,6270)",0x00686270,"Information Issue DateTime",InformationIssueDateTime,DT,VM::N(1));
define_tag!("(0068,6280)",0x00686280,"Information Summary",InformationSummary,ST,VM::N(1));
define_tag!("(0068,62A0)",0x006862A0,"Implant Regulatory Disapproval Code Sequence",ImplantRegulatoryDisapprovalCodeSequence,SQ,VM::N(1));
define_tag!("(0068,62A5)",0x006862A5,"Overall Template Spatial Tolerance",OverallTemplateSpatialTolerance,FD,VM::N(1));
define_tag!("(0068,62C0)",0x006862C0,"HPGL Document Sequence",HPGLDocumentSequence,SQ,VM::N(1));
define_tag!("(0068,62D0)",0x006862D0,"HPGL Document ID",HPGLDocumentID,US,VM::N(1));
define_tag!("(0068,62D5)",0x006862D5,"HPGL Document Label",HPGLDocumentLabel,LO,VM::N(1));
define_tag!("(0068,62E0)",0x006862E0,"View Orientation Code Sequence",ViewOrientationCodeSequence,SQ,VM::N(1));
define_tag!("(0068,62F0)",0x006862F0,"View Orientation Modifier",ViewOrientationModifier,FD,VM::N(9));
define_tag!("(0068,62F2)",0x006862F2,"HPGL Document Scaling",HPGLDocumentScaling,FD,VM::N(1));
define_tag!("(0068,6300)",0x00686300,"HPGL Document",HPGLDocument,OB,VM::N(1));
define_tag!("(0068,6310)",0x00686310,"HPGL Contour Pen Number",HPGLContourPenNumber,US,VM::N(1));
define_tag!("(0068,6320)",0x00686320,"HPGL Pen Sequence",HPGLPenSequence,SQ,VM::N(1));
define_tag!("(0068,6330)",0x00686330,"HPGL Pen Number",HPGLPenNumber,US,VM::N(1));
define_tag!("(0068,6340)",0x00686340,"HPGL Pen Label",HPGLPenLabel,LO,VM::N(1));
define_tag!("(0068,6345)",0x00686345,"HPGL Pen Description",HPGLPenDescription,ST,VM::N(1));
define_tag!("(0068,6346)",0x00686346,"Recommended Rotation Point",RecommendedRotationPoint,FD,VM::N(2));
define_tag!("(0068,6347)",0x00686347,"Bounding Rectangle",BoundingRectangle,FD,VM::N(4));
define_tag!("(0068,6350)",0x00686350,"Implant Template 3D Model Surface Number",ImplantTemplate3DModelSurfaceNumber,US,VM::NOrMore(1));
define_tag!("(0068,6360)",0x00686360,"Surface Model Description Sequence",SurfaceModelDescriptionSequence,SQ,VM::N(1));
define_tag!("(0068,6380)",0x00686380,"Surface Model Label",SurfaceModelLabel,LO,VM::N(1));
define_tag!("(0068,6390)",0x00686390,"Surface Model Scaling Factor",SurfaceModelScalingFactor,FD,VM::N(1));
define_tag!("(0068,63A0)",0x006863A0,"Materials Code Sequence",MaterialsCodeSequence,SQ,VM::N(1));
define_tag!("(0068,63A4)",0x006863A4,"Coating Materials Code Sequence",CoatingMaterialsCodeSequence,SQ,VM::N(1));
define_tag!("(0068,63A8)",0x006863A8,"Implant Type Code Sequence",ImplantTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0068,63AC)",0x006863AC,"Fixation Method Code Sequence",FixationMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0068,63B0)",0x006863B0,"Mating Feature Sets Sequence",MatingFeatureSetsSequence,SQ,VM::N(1));
define_tag!("(0068,63C0)",0x006863C0,"Mating Feature Set ID",MatingFeatureSetID,US,VM::N(1));
define_tag!("(0068,63D0)",0x006863D0,"Mating Feature Set Label",MatingFeatureSetLabel,LO,VM::N(1));
define_tag!("(0068,63E0)",0x006863E0,"Mating Feature Sequence",MatingFeatureSequence,SQ,VM::N(1));
define_tag!("(0068,63F0)",0x006863F0,"Mating Feature ID",MatingFeatureID,US,VM::N(1));
define_tag!("(0068,6400)",0x00686400,"Mating Feature Degree of Freedom Sequence",MatingFeatureDegreeOfFreedomSequence,SQ,VM::N(1));
define_tag!("(0068,6410)",0x00686410,"Degree of Freedom ID",DegreeOfFreedomID,US,VM::N(1));
define_tag!("(0068,6420)",0x00686420,"Degree of Freedom Type",DegreeOfFreedomType,CS,VM::N(1));
define_tag!("(0068,6430)",0x00686430,"2D Mating Feature Coordinates Sequence",TwoDMatingFeatureCoordinatesSequence,SQ,VM::N(1));
define_tag!("(0068,6440)",0x00686440,"Referenced HPGL Document ID",ReferencedHPGLDocumentID,US,VM::N(1));
define_tag!("(0068,6450)",0x00686450,"2D Mating Point",TwoDMatingPoint,FD,VM::N(2));
define_tag!("(0068,6460)",0x00686460,"2D Mating Axes",TwoDMatingAxes,FD,VM::N(4));
define_tag!("(0068,6470)",0x00686470,"2D Degree of Freedom Sequence",TwoDDegreeOfFreedomSequence,SQ,VM::N(1));
define_tag!("(0068,6490)",0x00686490,"3D Degree of Freedom Axis",ThreeDDegreeOfFreedomAxis,FD,VM::N(3));
define_tag!("(0068,64A0)",0x006864A0,"Range of Freedom",RangeOfFreedom,FD,VM::N(2));
define_tag!("(0068,64C0)",0x006864C0,"3D Mating Point",ThreeDMatingPoint,FD,VM::N(3));
define_tag!("(0068,64D0)",0x006864D0,"3D Mating Axes",ThreeDMatingAxes,FD,VM::N(9));
define_tag!("(0068,64F0)",0x006864F0,"2D Degree of Freedom Axis",TwoDDegreeOfFreedomAxis,FD,VM::N(3));
define_tag!("(0068,6500)",0x00686500,"Planning Landmark Point Sequence",PlanningLandmarkPointSequence,SQ,VM::N(1));
define_tag!("(0068,6510)",0x00686510,"Planning Landmark Line Sequence",PlanningLandmarkLineSequence,SQ,VM::N(1));
define_tag!("(0068,6520)",0x00686520,"Planning Landmark Plane Sequence",PlanningLandmarkPlaneSequence,SQ,VM::N(1));
define_tag!("(0068,6530)",0x00686530,"Planning Landmark ID",PlanningLandmarkID,US,VM::N(1));
define_tag!("(0068,6540)",0x00686540,"Planning Landmark Description",PlanningLandmarkDescription,LO,VM::N(1));
define_tag!("(0068,6545)",0x00686545,"Planning Landmark Identification Code Sequence",PlanningLandmarkIdentificationCodeSequence,SQ,VM::N(1));
define_tag!("(0068,6550)",0x00686550,"2D Point Coordinates Sequence",TwoDPointCoordinatesSequence,SQ,VM::N(1));
define_tag!("(0068,6560)",0x00686560,"2D Point Coordinates",TwoDPointCoordinates,FD,VM::N(2));
define_tag!("(0068,6590)",0x00686590,"3D Point Coordinates",ThreeDPointCoordinates,FD,VM::N(3));
define_tag!("(0068,65A0)",0x006865A0,"2D Line Coordinates Sequence",TwoDLineCoordinatesSequence,SQ,VM::N(1));
define_tag!("(0068,65B0)",0x006865B0,"2D Line Coordinates",TwoDLineCoordinates,FD,VM::N(4));
define_tag!("(0068,65D0)",0x006865D0,"3D Line Coordinates",ThreeDLineCoordinates,FD,VM::N(6));
define_tag!("(0068,65E0)",0x006865E0,"2D Plane Coordinates Sequence",TwoDPlaneCoordinatesSequence,SQ,VM::N(1));
define_tag!("(0068,65F0)",0x006865F0,"2D Plane Intersection",TwoDPlaneIntersection,FD,VM::N(4));
define_tag!("(0068,6610)",0x00686610,"3D Plane Origin",ThreeDPlaneOrigin,FD,VM::N(3));
define_tag!("(0068,6620)",0x00686620,"3D Plane Normal",ThreeDPlaneNormal,FD,VM::N(3));
define_tag!("(0070,0001)",0x00700001,"Graphic Annotation Sequence",GraphicAnnotationSequence,SQ,VM::N(1));
define_tag!("(0070,0002)",0x00700002,"Graphic Layer",GraphicLayer,CS,VM::N(1));
define_tag!("(0070,0003)",0x00700003,"Bounding Box Annotation Units",BoundingBoxAnnotationUnits,CS,VM::N(1));
define_tag!("(0070,0004)",0x00700004,"Anchor Point Annotation Units",AnchorPointAnnotationUnits,CS,VM::N(1));
define_tag!("(0070,0005)",0x00700005,"Graphic Annotation Units",GraphicAnnotationUnits,CS,VM::N(1));
define_tag!("(0070,0006)",0x00700006,"Unformatted Text Value",UnformattedTextValue,ST,VM::N(1));
define_tag!("(0070,0008)",0x00700008,"Text Object Sequence",TextObjectSequence,SQ,VM::N(1));
define_tag!("(0070,0009)",0x00700009,"Graphic Object Sequence",GraphicObjectSequence,SQ,VM::N(1));
define_tag!("(0070,0010)",0x00700010,"Bounding Box Top Left Hand Corner",BoundingBoxTopLeftHandCorner,FL,VM::N(2));
define_tag!("(0070,0011)",0x00700011,"Bounding Box Bottom Right Hand Corner",BoundingBoxBottomRightHandCorner,FL,VM::N(2));
define_tag!("(0070,0012)",0x00700012,"Bounding Box Text Horizontal Justification",BoundingBoxTextHorizontalJustification,CS,VM::N(1));
define_tag!("(0070,0014)",0x00700014,"Anchor Point",AnchorPoint,FL,VM::N(2));
define_tag!("(0070,0015)",0x00700015,"Anchor Point Visibility",AnchorPointVisibility,CS,VM::N(1));
define_tag!("(0070,0020)",0x00700020,"Graphic Dimensions",GraphicDimensions,US,VM::N(1));
define_tag!("(0070,0021)",0x00700021,"Number of Graphic Points",NumberOfGraphicPoints,US,VM::N(1));
define_tag!("(0070,0022)",0x00700022,"Graphic Data",GraphicData,FL,VM::NOrMore(2));
define_tag!("(0070,0023)",0x00700023,"Graphic Type",GraphicType,CS,VM::N(1));
define_tag!("(0070,0024)",0x00700024,"Graphic Filled",GraphicFilled,CS,VM::N(1));
define_tag!("(0070,0040)",0x00700040,"Image Rotation (Retired)",ImageRotationRetired,IS,VM::N(1));
define_tag!("(0070,0041)",0x00700041,"Image Horizontal Flip",ImageHorizontalFlip,CS,VM::N(1));
define_tag!("(0070,0042)",0x00700042,"Image Rotation",ImageRotation,US,VM::N(1));
define_tag!("(0070,0050)",0x00700050,"Displayed Area Top Left Hand Corner (Trial)",DisplayedAreaTopLeftHandCornerTrial,US,VM::N(2));
define_tag!("(0070,0051)",0x00700051,"Displayed Area Bottom Right Hand Corner (Trial)",DisplayedAreaBottomRightHandCornerTrial,US,VM::N(2));
define_tag!("(0070,0052)",0x00700052,"Displayed Area Top Left Hand Corner",DisplayedAreaTopLeftHandCorner,SL,VM::N(2));
define_tag!("(0070,0053)",0x00700053,"Displayed Area Bottom Right Hand Corner",DisplayedAreaBottomRightHandCorner,SL,VM::N(2));
define_tag!("(0070,005A)",0x0070005A,"Displayed Area Selection Sequence",DisplayedAreaSelectionSequence,SQ,VM::N(1));
define_tag!("(0070,0060)",0x00700060,"Graphic Layer Sequence",GraphicLayerSequence,SQ,VM::N(1));
define_tag!("(0070,0062)",0x00700062,"Graphic Layer Order",GraphicLayerOrder,IS,VM::N(1));
define_tag!("(0070,0066)",0x00700066,"Graphic Layer Recommended Display Grayscale Value",GraphicLayerRecommendedDisplayGrayscaleValue,US,VM::N(1));
define_tag!("(0070,0067)",0x00700067,"Graphic Layer Recommended Display RGB Value",GraphicLayerRecommendedDisplayRGBValue,US,VM::N(3));
define_tag!("(0070,0068)",0x00700068,"Graphic Layer Description",GraphicLayerDescription,LO,VM::N(1));
define_tag!("(0070,0080)",0x00700080,"Content Label",ContentLabel,CS,VM::N(1));
define_tag!("(0070,0081)",0x00700081,"Content Description",ContentDescription,LO,VM::N(1));
define_tag!("(0070,0082)",0x00700082,"Presentation Creation Date",PresentationCreationDate,DA,VM::N(1));
define_tag!("(0070,0083)",0x00700083,"Presentation Creation Time",PresentationCreationTime,TM,VM::N(1));
define_tag!("(0070,0084)",0x00700084,"Content Creator's Name",ContentCreatorName,PN,VM::N(1));
define_tag!("(0070,0086)",0x00700086,"Content Creator's Identification Code Sequence",ContentCreatorIdentificationCodeSequence,SQ,VM::N(1));
define_tag!("(0070,0087)",0x00700087,"Alternate Content Description Sequence",AlternateContentDescriptionSequence,SQ,VM::N(1));
define_tag!("(0070,0100)",0x00700100,"Presentation Size Mode",PresentationSizeMode,CS,VM::N(1));
define_tag!("(0070,0101)",0x00700101,"Presentation Pixel Spacing",PresentationPixelSpacing,DS,VM::N(2));
define_tag!("(0070,0102)",0x00700102,"Presentation Pixel Aspect Ratio",PresentationPixelAspectRatio,IS,VM::N(2));
define_tag!("(0070,0103)",0x00700103,"Presentation Pixel Magnification Ratio",PresentationPixelMagnificationRatio,FL,VM::N(1));
define_tag!("(0070,0207)",0x00700207,"Graphic Group Label",GraphicGroupLabel,LO,VM::N(1));
define_tag!("(0070,0208)",0x00700208,"Graphic Group Description",GraphicGroupDescription,ST,VM::N(1));
define_tag!("(0070,0209)",0x00700209,"Compound Graphic Sequence",CompoundGraphicSequence,SQ,VM::N(1));
define_tag!("(0070,0226)",0x00700226,"Compound Graphic Instance ID",CompoundGraphicInstanceID,UL,VM::N(1));
define_tag!("(0070,0227)",0x00700227,"Font Name",FontName,LO,VM::N(1));
define_tag!("(0070,0228)",0x00700228,"Font Name Type",FontNameType,CS,VM::N(1));
define_tag!("(0070,0229)",0x00700229,"CSS Font Name",CSSFontName,LO,VM::N(1));
define_tag!("(0070,0230)",0x00700230,"Rotation Angle",RotationAngle,FD,VM::N(1));
define_tag!("(0070,0231)",0x00700231,"Text Style Sequence",TextStyleSequence,SQ,VM::N(1));
define_tag!("(0070,0232)",0x00700232,"Line Style Sequence",LineStyleSequence,SQ,VM::N(1));
define_tag!("(0070,0233)",0x00700233,"Fill Style Sequence",FillStyleSequence,SQ,VM::N(1));
define_tag!("(0070,0234)",0x00700234,"Graphic Group Sequence",GraphicGroupSequence,SQ,VM::N(1));
define_tag!("(0070,0241)",0x00700241,"Text Color CIELab Value",TextColorCIELabValue,US,VM::N(3));
define_tag!("(0070,0242)",0x00700242,"Horizontal Alignment",HorizontalAlignment,CS,VM::N(1));
define_tag!("(0070,0243)",0x00700243,"Vertical Alignment",VerticalAlignment,CS,VM::N(1));
define_tag!("(0070,0244)",0x00700244,"Shadow Style",ShadowStyle,CS,VM::N(1));
define_tag!("(0070,0245)",0x00700245,"Shadow Offset X",ShadowOffsetX,FL,VM::N(1));
define_tag!("(0070,0246)",0x00700246,"Shadow Offset Y",ShadowOffsetY,FL,VM::N(1));
define_tag!("(0070,0247)",0x00700247,"Shadow Color CIELab Value",ShadowColorCIELabValue,US,VM::N(3));
define_tag!("(0070,0248)",0x00700248,"Underlined",Underlined,CS,VM::N(1));
define_tag!("(0070,0249)",0x00700249,"Bold",Bold,CS,VM::N(1));
define_tag!("(0070,0250)",0x00700250,"Italic",Italic,CS,VM::N(1));
define_tag!("(0070,0251)",0x00700251,"Pattern On Color CIELab Value",PatternOnColorCIELabValue,US,VM::N(3));
define_tag!("(0070,0252)",0x00700252,"Pattern Off Color CIELab Value",PatternOffColorCIELabValue,US,VM::N(3));
define_tag!("(0070,0253)",0x00700253,"Line Thickness",LineThickness,FL,VM::N(1));
define_tag!("(0070,0254)",0x00700254,"Line Dashing Style",LineDashingStyle,CS,VM::N(1));
define_tag!("(0070,0255)",0x00700255,"Line Pattern",LinePattern,UL,VM::N(1));
define_tag!("(0070,0256)",0x00700256,"Fill Pattern",FillPattern,OB,VM::N(1));
define_tag!("(0070,0257)",0x00700257,"Fill Mode",FillMode,CS,VM::N(1));
define_tag!("(0070,0258)",0x00700258,"Shadow Opacity",ShadowOpacity,FL,VM::N(1));
define_tag!("(0070,0261)",0x00700261,"Gap Length",GapLength,FL,VM::N(1));
define_tag!("(0070,0262)",0x00700262,"Diameter of Visibility",DiameterOfVisibility,FL,VM::N(1));
define_tag!("(0070,0273)",0x00700273,"Rotation Point",RotationPoint,FL,VM::N(2));
define_tag!("(0070,0274)",0x00700274,"Tick Alignment",TickAlignment,CS,VM::N(1));
define_tag!("(0070,0278)",0x00700278,"Show Tick Label",ShowTickLabel,CS,VM::N(1));
define_tag!("(0070,0279)",0x00700279,"Tick Label Alignment",TickLabelAlignment,CS,VM::N(1));
define_tag!("(0070,0282)",0x00700282,"Compound Graphic Units",CompoundGraphicUnits,CS,VM::N(1));
define_tag!("(0070,0284)",0x00700284,"Pattern On Opacity",PatternOnOpacity,FL,VM::N(1));
define_tag!("(0070,0285)",0x00700285,"Pattern Off Opacity",PatternOffOpacity,FL,VM::N(1));
define_tag!("(0070,0287)",0x00700287,"Major Ticks Sequence",MajorTicksSequence,SQ,VM::N(1));
define_tag!("(0070,0288)",0x00700288,"Tick Position",TickPosition,FL,VM::N(1));
define_tag!("(0070,0289)",0x00700289,"Tick Label",TickLabel,SH,VM::N(1));
define_tag!("(0070,0294)",0x00700294,"Compound Graphic Type",CompoundGraphicType,CS,VM::N(1));
define_tag!("(0070,0295)",0x00700295,"Graphic Group ID",GraphicGroupID,UL,VM::N(1));
define_tag!("(0070,0306)",0x00700306,"Shape Type",ShapeType,CS,VM::N(1));
define_tag!("(0070,0308)",0x00700308,"Registration Sequence",RegistrationSequence,SQ,VM::N(1));
define_tag!("(0070,0309)",0x00700309,"Matrix Registration Sequence",MatrixRegistrationSequence,SQ,VM::N(1));
define_tag!("(0070,030A)",0x0070030A,"Matrix Sequence",MatrixSequence,SQ,VM::N(1));
define_tag!("(0070,030B)",0x0070030B,"Frame of Reference to Displayed Coordinate System Transformation Matrix",FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix,FD,VM::N(16));
define_tag!("(0070,030C)",0x0070030C,"Frame of Reference Transformation Matrix Type",FrameOfReferenceTransformationMatrixType,CS,VM::N(1));
define_tag!("(0070,030D)",0x0070030D,"Registration Type Code Sequence",RegistrationTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0070,030F)",0x0070030F,"Fiducial Description",FiducialDescription,ST,VM::N(1));
define_tag!("(0070,0310)",0x00700310,"Fiducial Identifier",FiducialIdentifier,SH,VM::N(1));
define_tag!("(0070,0311)",0x00700311,"Fiducial Identifier Code Sequence",FiducialIdentifierCodeSequence,SQ,VM::N(1));
define_tag!("(0070,0312)",0x00700312,"Contour Uncertainty Radius",ContourUncertaintyRadius,FD,VM::N(1));
define_tag!("(0070,0314)",0x00700314,"Used Fiducials Sequence",UsedFiducialsSequence,SQ,VM::N(1));
define_tag!("(0070,0318)",0x00700318,"Graphic Coordinates Data Sequence",GraphicCoordinatesDataSequence,SQ,VM::N(1));
define_tag!("(0070,031A)",0x0070031A,"Fiducial UID",FiducialUID,UI,VM::N(1));
define_tag!("(0070,031C)",0x0070031C,"Fiducial Set Sequence",FiducialSetSequence,SQ,VM::N(1));
define_tag!("(0070,031E)",0x0070031E,"Fiducial Sequence",FiducialSequence,SQ,VM::N(1));
define_tag!("(0070,0401)",0x00700401,"Graphic Layer Recommended Display CIELab Value",GraphicLayerRecommendedDisplayCIELabValue,US,VM::N(3));
define_tag!("(0070,0402)",0x00700402,"Blending Sequence",BlendingSequence,SQ,VM::N(1));
define_tag!("(0070,0403)",0x00700403,"Relative Opacity",RelativeOpacity,FL,VM::N(1));
define_tag!("(0070,0404)",0x00700404,"Referenced Spatial Registration Sequence",ReferencedSpatialRegistrationSequence,SQ,VM::N(1));
define_tag!("(0070,0405)",0x00700405,"Blending Position",BlendingPosition,CS,VM::N(1));
define_tag!("(0070,1101)",0x00701101,"Presentation Display Collection UID",PresentationDisplayCollectionUID,UI,VM::N(1));
define_tag!("(0070,1102)",0x00701102,"Presentation Sequence Collection UID",PresentationSequenceCollectionUID,UI,VM::N(1));
define_tag!("(0070,1103)",0x00701103,"Presentation Sequence Position Index",PresentationSequencePositionIndex,US,VM::N(1));
define_tag!("(0070,1104)",0x00701104,"Rendered Image Reference Sequence",RenderedImageReferenceSequence,SQ,VM::N(1));
define_tag!("(0070,1201)",0x00701201,"Volumetric Presentation State Input Sequence",VolumetricPresentationStateInputSequence,SQ,VM::N(1));
define_tag!("(0070,1202)",0x00701202,"Presentation Input Type",PresentationInputType,CS,VM::N(1));
define_tag!("(0070,1203)",0x00701203,"Input Sequence Position Index",InputSequencePositionIndex,US,VM::N(1));
define_tag!("(0070,1204)",0x00701204,"Crop",Crop,CS,VM::N(1));
define_tag!("(0070,1205)",0x00701205,"Cropping Specification Index",CroppingSpecificationIndex,US,VM::NOrMore(1));
define_tag!("(0070,1206)",0x00701206,"Compositing Method",CompositingMethod,CS,VM::N(1));
define_tag!("(0070,1207)",0x00701207,"Volumetric Presentation Input Number",VolumetricPresentationInputNumber,US,VM::N(1));
define_tag!("(0070,1208)",0x00701208,"Image Volume Geometry",ImageVolumeGeometry,CS,VM::N(1));
define_tag!("(0070,1301)",0x00701301,"Volume Cropping Sequence",VolumeCroppingSequence,SQ,VM::N(1));
define_tag!("(0070,1302)",0x00701302,"Volume Cropping Method",VolumeCroppingMethod,CS,VM::N(1));
define_tag!("(0070,1303)",0x00701303,"Bounding Box Crop",BoundingBoxCrop,FD,VM::N(6));
define_tag!("(0070,1304)",0x00701304,"Oblique Cropping Plane Sequence",ObliqueCroppingPlaneSequence,SQ,VM::N(1));
define_tag!("(0070,1305)",0x00701305,"Plane",Plane,FD,VM::N(4));
define_tag!("(0070,1306)",0x00701306,"Plane Normal",PlaneNormal,FD,VM::N(3));
define_tag!("(0070,1309)",0x00701309,"Cropping Specification Number",CroppingSpecificationNumber,US,VM::N(1));
define_tag!("(0070,1501)",0x00701501,"Multi-Planar Reconstruction Style",MultiPlanarReconstructionStyle,CS,VM::N(1));
define_tag!("(0070,1502)",0x00701502,"MPR Thickness Type",MPRThicknessType,CS,VM::N(1));
define_tag!("(0070,1503)",0x00701503,"MPR Slab Thickness",MPRSlabThickness,FD,VM::N(1));
define_tag!("(0070,1505)",0x00701505,"MPR Top Left Hand Corner",MPRTopLeftHandCorner,FD,VM::N(3));
define_tag!("(0070,1507)",0x00701507,"MPR View Width Direction",MPRViewWidthDirection,FD,VM::N(3));
define_tag!("(0070,1508)",0x00701508,"MPR View Width",MPRViewWidth,FD,VM::N(1));
define_tag!("(0070,150C)",0x0070150C,"Number of Volumetric Curve Points",NumberOfVolumetricCurvePoints,UL,VM::N(1));
define_tag!("(0070,150D)",0x0070150D,"Volumetric Curve Points",VolumetricCurvePoints,OD,VM::N(1));
define_tag!("(0070,1511)",0x00701511,"MPR View Height Direction",MPRViewHeightDirection,FD,VM::N(3));
define_tag!("(0070,1512)",0x00701512,"MPR View Height",MPRViewHeight,FD,VM::N(1));
define_tag!("(0070,1801)",0x00701801,"Presentation State Classification Component Sequence",PresentationStateClassificationComponentSequence,SQ,VM::N(1));
define_tag!("(0070,1802)",0x00701802,"Component Type",ComponentType,CS,VM::N(1));
define_tag!("(0070,1803)",0x00701803,"Component Input Sequence",ComponentInputSequence,SQ,VM::N(1));
define_tag!("(0070,1804)",0x00701804,"Volumetric Presentation Input Index",VolumetricPresentationInputIndex,US,VM::N(1));
define_tag!("(0070,1805)",0x00701805,"Presentation State Compositor Component Sequence",PresentationStateCompositorComponentSequence,SQ,VM::N(1));
define_tag!("(0070,1806)",0x00701806,"Weighting Transfer Function Sequence",WeightingTransferFunctionSequence,SQ,VM::N(1));
define_tag!("(0070,1807)",0x00701807,"Weighting Lookup Table Descriptor",WeightingLookupTableDescriptor,US,VM::N(3));
define_tag!("(0070,1808)",0x00701808,"Weighting Lookup Table Data",WeightingLookupTableData,OB,VM::N(1));
define_tag!("(0070,1901)",0x00701901,"Volumetric Annotation Sequence",VolumetricAnnotationSequence,SQ,VM::N(1));
define_tag!("(0070,1903)",0x00701903,"Referenced Structured Context Sequence",ReferencedStructuredContextSequence,SQ,VM::N(1));
define_tag!("(0070,1904)",0x00701904,"Referenced Content Item",ReferencedContentItem,UI,VM::N(1));
define_tag!("(0070,1905)",0x00701905,"Volumetric Presentation Input Annotation Sequence",VolumetricPresentationInputAnnotationSequence,SQ,VM::N(1));
define_tag!("(0070,1907)",0x00701907,"Annotation Clipping",AnnotationClipping,CS,VM::N(1));
define_tag!("(0070,1A01)",0x00701A01,"Presentation Animation Style",PresentationAnimationStyle,CS,VM::N(1));
define_tag!("(0070,1A03)",0x00701A03,"Recommended Animation Rate",RecommendedAnimationRate,FD,VM::N(1));
define_tag!("(0070,1A04)",0x00701A04,"Animation Curve Sequence",AnimationCurveSequence,SQ,VM::N(1));
define_tag!("(0070,1A05)",0x00701A05,"Animation Step Size",AnimationStepSize,FD,VM::N(1));
define_tag!("(0072,0002)",0x00720002,"Hanging Protocol Name",HangingProtocolName,SH,VM::N(1));
define_tag!("(0072,0004)",0x00720004,"Hanging Protocol Description",HangingProtocolDescription,LO,VM::N(1));
define_tag!("(0072,0006)",0x00720006,"Hanging Protocol Level",HangingProtocolLevel,CS,VM::N(1));
define_tag!("(0072,0008)",0x00720008,"Hanging Protocol Creator",HangingProtocolCreator,LO,VM::N(1));
define_tag!("(0072,000A)",0x0072000A,"Hanging Protocol Creation DateTime",HangingProtocolCreationDateTime,DT,VM::N(1));
define_tag!("(0072,000C)",0x0072000C,"Hanging Protocol Definition Sequence",HangingProtocolDefinitionSequence,SQ,VM::N(1));
define_tag!("(0072,000E)",0x0072000E,"Hanging Protocol User Identification Code Sequence",HangingProtocolUserIdentificationCodeSequence,SQ,VM::N(1));
define_tag!("(0072,0010)",0x00720010,"Hanging Protocol User Group Name",HangingProtocolUserGroupName,LO,VM::N(1));
define_tag!("(0072,0012)",0x00720012,"Source Hanging Protocol Sequence",SourceHangingProtocolSequence,SQ,VM::N(1));
define_tag!("(0072,0014)",0x00720014,"Number of Priors Referenced",NumberOfPriorsReferenced,US,VM::N(1));
define_tag!("(0072,0020)",0x00720020,"Image Sets Sequence",ImageSetsSequence,SQ,VM::N(1));
define_tag!("(0072,0022)",0x00720022,"Image Set Selector Sequence",ImageSetSelectorSequence,SQ,VM::N(1));
define_tag!("(0072,0024)",0x00720024,"Image Set Selector Usage Flag",ImageSetSelectorUsageFlag,CS,VM::N(1));
define_tag!("(0072,0026)",0x00720026,"Selector Attribute",SelectorAttribute,AT,VM::N(1));
define_tag!("(0072,0028)",0x00720028,"Selector Value Number",SelectorValueNumber,US,VM::N(1));
define_tag!("(0072,0030)",0x00720030,"Time Based Image Sets Sequence",TimeBasedImageSetsSequence,SQ,VM::N(1));
define_tag!("(0072,0032)",0x00720032,"Image Set Number",ImageSetNumber,US,VM::N(1));
define_tag!("(0072,0034)",0x00720034,"Image Set Selector Category",ImageSetSelectorCategory,CS,VM::N(1));
define_tag!("(0072,0038)",0x00720038,"Relative Time",RelativeTime,US,VM::N(2));
define_tag!("(0072,003A)",0x0072003A,"Relative Time Units",RelativeTimeUnits,CS,VM::N(1));
define_tag!("(0072,003C)",0x0072003C,"Abstract Prior Value",AbstractPriorValue,SS,VM::N(2));
define_tag!("(0072,003E)",0x0072003E,"Abstract Prior Code Sequence",AbstractPriorCodeSequence,SQ,VM::N(1));
define_tag!("(0072,0040)",0x00720040,"Image Set Label",ImageSetLabel,LO,VM::N(1));
define_tag!("(0072,0050)",0x00720050,"Selector Attribute VR",SelectorAttributeVR,CS,VM::N(1));
define_tag!("(0072,0052)",0x00720052,"Selector Sequence Pointer",SelectorSequencePointer,AT,VM::NOrMore(1));
define_tag!("(0072,0054)",0x00720054,"Selector Sequence Pointer Private Creator",SelectorSequencePointerPrivateCreator,LO,VM::NOrMore(1));
define_tag!("(0072,0056)",0x00720056,"Selector Attribute Private Creator",SelectorAttributePrivateCreator,LO,VM::N(1));
define_tag!("(0072,005E)",0x0072005E,"Selector AE Value",SelectorAEValue,AE,VM::NOrMore(1));
define_tag!("(0072,005F)",0x0072005F,"Selector AS Value",SelectorASValue,AS,VM::NOrMore(1));
define_tag!("(0072,0060)",0x00720060,"Selector AT Value",SelectorATValue,AT,VM::NOrMore(1));
define_tag!("(0072,0061)",0x00720061,"Selector DA Value",SelectorDAValue,DA,VM::NOrMore(1));
define_tag!("(0072,0062)",0x00720062,"Selector CS Value",SelectorCSValue,CS,VM::NOrMore(1));
define_tag!("(0072,0063)",0x00720063,"Selector DT Value",SelectorDTValue,DT,VM::NOrMore(1));
define_tag!("(0072,0064)",0x00720064,"Selector IS Value",SelectorISValue,IS,VM::NOrMore(1));
define_tag!("(0072,0065)",0x00720065,"Selector OB Value",SelectorOBValue,OB,VM::N(1));
define_tag!("(0072,0066)",0x00720066,"Selector LO Value",SelectorLOValue,LO,VM::NOrMore(1));
define_tag!("(0072,0067)",0x00720067,"Selector OF Value",SelectorOFValue,OF,VM::N(1));
define_tag!("(0072,0068)",0x00720068,"Selector LT Value",SelectorLTValue,LT,VM::N(1));
define_tag!("(0072,0069)",0x00720069,"Selector OW Value",SelectorOWValue,OW,VM::N(1));
define_tag!("(0072,006A)",0x0072006A,"Selector PN Value",SelectorPNValue,PN,VM::NOrMore(1));
define_tag!("(0072,006B)",0x0072006B,"Selector TM Value",SelectorTMValue,TM,VM::NOrMore(1));
define_tag!("(0072,006C)",0x0072006C,"Selector SH Value",SelectorSHValue,SH,VM::NOrMore(1));
define_tag!("(0072,006D)",0x0072006D,"Selector UN Value",SelectorUNValue,UN,VM::N(1));
define_tag!("(0072,006E)",0x0072006E,"Selector ST Value",SelectorSTValue,ST,VM::N(1));
define_tag!("(0072,006F)",0x0072006F,"Selector UC Value",SelectorUCValue,UC,VM::NOrMore(1));
define_tag!("(0072,0070)",0x00720070,"Selector UT Value",SelectorUTValue,UT,VM::N(1));
define_tag!("(0072,0071)",0x00720071,"Selector UR Value",SelectorURValue,UR,VM::N(1));
define_tag!("(0072,0072)",0x00720072,"Selector DS Value",SelectorDSValue,DS,VM::NOrMore(1));
define_tag!("(0072,0073)",0x00720073,"Selector OD Value",SelectorODValue,OD,VM::N(1));
define_tag!("(0072,0074)",0x00720074,"Selector FD Value",SelectorFDValue,FD,VM::NOrMore(1));
define_tag!("(0072,0075)",0x00720075,"Selector OL Value",SelectorOLValue,OL,VM::N(1));
define_tag!("(0072,0076)",0x00720076,"Selector FL Value",SelectorFLValue,FL,VM::NOrMore(1));
define_tag!("(0072,0078)",0x00720078,"Selector UL Value",SelectorULValue,UL,VM::NOrMore(1));
define_tag!("(0072,007A)",0x0072007A,"Selector US Value",SelectorUSValue,US,VM::NOrMore(1));
define_tag!("(0072,007C)",0x0072007C,"Selector SL Value",SelectorSLValue,SL,VM::NOrMore(1));
define_tag!("(0072,007E)",0x0072007E,"Selector SS Value",SelectorSSValue,SS,VM::NOrMore(1));
define_tag!("(0072,007F)",0x0072007F,"Selector UI Value",SelectorUIValue,UI,VM::NOrMore(1));
define_tag!("(0072,0080)",0x00720080,"Selector Code Sequence Value",SelectorCodeSequenceValue,SQ,VM::N(1));
define_tag!("(0072,0100)",0x00720100,"Number of Screens",NumberOfScreens,US,VM::N(1));
define_tag!("(0072,0102)",0x00720102,"Nominal Screen Definition Sequence",NominalScreenDefinitionSequence,SQ,VM::N(1));
define_tag!("(0072,0104)",0x00720104,"Number of Vertical Pixels",NumberOfVerticalPixels,US,VM::N(1));
define_tag!("(0072,0106)",0x00720106,"Number of Horizontal Pixels",NumberOfHorizontalPixels,US,VM::N(1));
define_tag!("(0072,0108)",0x00720108,"Display Environment Spatial Position",DisplayEnvironmentSpatialPosition,FD,VM::N(4));
define_tag!("(0072,010A)",0x0072010A,"Screen Minimum Grayscale Bit Depth",ScreenMinimumGrayscaleBitDepth,US,VM::N(1));
define_tag!("(0072,010C)",0x0072010C,"Screen Minimum Color Bit Depth",ScreenMinimumColorBitDepth,US,VM::N(1));
define_tag!("(0072,010E)",0x0072010E,"Application Maximum Repaint Time",ApplicationMaximumRepaintTime,US,VM::N(1));
define_tag!("(0072,0200)",0x00720200,"Display Sets Sequence",DisplaySetsSequence,SQ,VM::N(1));
define_tag!("(0072,0202)",0x00720202,"Display Set Number",DisplaySetNumber,US,VM::N(1));
define_tag!("(0072,0203)",0x00720203,"Display Set Label",DisplaySetLabel,LO,VM::N(1));
define_tag!("(0072,0204)",0x00720204,"Display Set Presentation Group",DisplaySetPresentationGroup,US,VM::N(1));
define_tag!("(0072,0206)",0x00720206,"Display Set Presentation Group Description",DisplaySetPresentationGroupDescription,LO,VM::N(1));
define_tag!("(0072,0208)",0x00720208,"Partial Data Display Handling",PartialDataDisplayHandling,CS,VM::N(1));
define_tag!("(0072,0210)",0x00720210,"Synchronized Scrolling Sequence",SynchronizedScrollingSequence,SQ,VM::N(1));
define_tag!("(0072,0212)",0x00720212,"Display Set Scrolling Group",DisplaySetScrollingGroup,US,VM::NOrMore(2));
define_tag!("(0072,0214)",0x00720214,"Navigation Indicator Sequence",NavigationIndicatorSequence,SQ,VM::N(1));
define_tag!("(0072,0216)",0x00720216,"Navigation Display Set",NavigationDisplaySet,US,VM::N(1));
define_tag!("(0072,0218)",0x00720218,"Reference Display Sets",ReferenceDisplaySets,US,VM::NOrMore(1));
define_tag!("(0072,0300)",0x00720300,"Image Boxes Sequence",ImageBoxesSequence,SQ,VM::N(1));
define_tag!("(0072,0302)",0x00720302,"Image Box Number",ImageBoxNumber,US,VM::N(1));
define_tag!("(0072,0304)",0x00720304,"Image Box Layout Type",ImageBoxLayoutType,CS,VM::N(1));
define_tag!("(0072,0306)",0x00720306,"Image Box Tile Horizontal Dimension",ImageBoxTileHorizontalDimension,US,VM::N(1));
define_tag!("(0072,0308)",0x00720308,"Image Box Tile Vertical Dimension",ImageBoxTileVerticalDimension,US,VM::N(1));
define_tag!("(0072,0310)",0x00720310,"Image Box Scroll Direction",ImageBoxScrollDirection,CS,VM::N(1));
define_tag!("(0072,0312)",0x00720312,"Image Box Small Scroll Type",ImageBoxSmallScrollType,CS,VM::N(1));
define_tag!("(0072,0314)",0x00720314,"Image Box Small Scroll Amount",ImageBoxSmallScrollAmount,US,VM::N(1));
define_tag!("(0072,0316)",0x00720316,"Image Box Large Scroll Type",ImageBoxLargeScrollType,CS,VM::N(1));
define_tag!("(0072,0318)",0x00720318,"Image Box Large Scroll Amount",ImageBoxLargeScrollAmount,US,VM::N(1));
define_tag!("(0072,0320)",0x00720320,"Image Box Overlap Priority",ImageBoxOverlapPriority,US,VM::N(1));
define_tag!("(0072,0330)",0x00720330,"Cine Relative to Real-Time",CineRelativeToRealTime,FD,VM::N(1));
define_tag!("(0072,0400)",0x00720400,"Filter Operations Sequence",FilterOperationsSequence,SQ,VM::N(1));
define_tag!("(0072,0402)",0x00720402,"Filter-by Category",FilterByCategory,CS,VM::N(1));
define_tag!("(0072,0404)",0x00720404,"Filter-by Attribute Presence",FilterByAttributePresence,CS,VM::N(1));
define_tag!("(0072,0406)",0x00720406,"Filter-by Operator",FilterByOperator,CS,VM::N(1));
define_tag!("(0072,0420)",0x00720420,"Structured Display Background CIELab Value",StructuredDisplayBackgroundCIELabValue,US,VM::N(3));
define_tag!("(0072,0421)",0x00720421,"Empty Image Box CIELab Value",EmptyImageBoxCIELabValue,US,VM::N(3));
define_tag!("(0072,0422)",0x00720422,"Structured Display Image Box Sequence",StructuredDisplayImageBoxSequence,SQ,VM::N(1));
define_tag!("(0072,0424)",0x00720424,"Structured Display Text Box Sequence",StructuredDisplayTextBoxSequence,SQ,VM::N(1));
define_tag!("(0072,0427)",0x00720427,"Referenced First Frame Sequence",ReferencedFirstFrameSequence,SQ,VM::N(1));
define_tag!("(0072,0430)",0x00720430,"Image Box Synchronization Sequence",ImageBoxSynchronizationSequence,SQ,VM::N(1));
define_tag!("(0072,0432)",0x00720432,"Synchronized Image Box List",SynchronizedImageBoxList,US,VM::NOrMore(2));
define_tag!("(0072,0434)",0x00720434,"Type of Synchronization",TypeOfSynchronization,CS,VM::N(1));
define_tag!("(0072,0500)",0x00720500,"Blending Operation Type",BlendingOperationType,CS,VM::N(1));
define_tag!("(0072,0510)",0x00720510,"Reformatting Operation Type",ReformattingOperationType,CS,VM::N(1));
define_tag!("(0072,0512)",0x00720512,"Reformatting Thickness",ReformattingThickness,FD,VM::N(1));
define_tag!("(0072,0514)",0x00720514,"Reformatting Interval",ReformattingInterval,FD,VM::N(1));
define_tag!("(0072,0516)",0x00720516,"Reformatting Operation Initial View Direction",ReformattingOperationInitialViewDirection,CS,VM::N(1));
define_tag!("(0072,0520)",0x00720520,"3D Rendering Type",ThreeDRenderingType,CS,VM::NOrMore(1));
define_tag!("(0072,0600)",0x00720600,"Sorting Operations Sequence",SortingOperationsSequence,SQ,VM::N(1));
define_tag!("(0072,0602)",0x00720602,"Sort-by Category",SortByCategory,CS,VM::N(1));
define_tag!("(0072,0604)",0x00720604,"Sorting Direction",SortingDirection,CS,VM::N(1));
define_tag!("(0072,0700)",0x00720700,"Display Set Patient Orientation",DisplaySetPatientOrientation,CS,VM::N(2));
define_tag!("(0072,0702)",0x00720702,"VOI Type",VOIType,CS,VM::N(1));
define_tag!("(0072,0704)",0x00720704,"Pseudo-Color Type",PseudoColorType,CS,VM::N(1));
define_tag!("(0072,0705)",0x00720705,"Pseudo-Color Palette Instance Reference Sequence",PseudoColorPaletteInstanceReferenceSequence,SQ,VM::N(1));
define_tag!("(0072,0706)",0x00720706,"Show Grayscale Inverted",ShowGrayscaleInverted,CS,VM::N(1));
define_tag!("(0072,0710)",0x00720710,"Show Image True Size Flag",ShowImageTrueSizeFlag,CS,VM::N(1));
define_tag!("(0072,0712)",0x00720712,"Show Graphic Annotation Flag",ShowGraphicAnnotationFlag,CS,VM::N(1));
define_tag!("(0072,0714)",0x00720714,"Show Patient Demographics Flag",ShowPatientDemographicsFlag,CS,VM::N(1));
define_tag!("(0072,0716)",0x00720716,"Show Acquisition Techniques Flag",ShowAcquisitionTechniquesFlag,CS,VM::N(1));
define_tag!("(0072,0717)",0x00720717,"Display Set Horizontal Justification",DisplaySetHorizontalJustification,CS,VM::N(1));
define_tag!("(0072,0718)",0x00720718,"Display Set Vertical Justification",DisplaySetVerticalJustification,CS,VM::N(1));
define_tag!("(0074,0120)",0x00740120,"Continuation Start Meterset",ContinuationStartMeterset,FD,VM::N(1));
define_tag!("(0074,0121)",0x00740121,"Continuation End Meterset",ContinuationEndMeterset,FD,VM::N(1));
define_tag!("(0074,1000)",0x00741000,"Procedure Step State",ProcedureStepState,CS,VM::N(1));
define_tag!("(0074,1002)",0x00741002,"Procedure Step Progress Information Sequence",ProcedureStepProgressInformationSequence,SQ,VM::N(1));
define_tag!("(0074,1004)",0x00741004,"Procedure Step Progress",ProcedureStepProgress,DS,VM::N(1));
define_tag!("(0074,1006)",0x00741006,"Procedure Step Progress Description",ProcedureStepProgressDescription,ST,VM::N(1));
define_tag!("(0074,1008)",0x00741008,"Procedure Step Communications URI Sequence",ProcedureStepCommunicationsURISequence,SQ,VM::N(1));
define_tag!("(0074,100A)",0x0074100A,"Contact URI",ContactURI,UR,VM::N(1));
define_tag!("(0074,100C)",0x0074100C,"Contact Display Name",ContactDisplayName,LO,VM::N(1));
define_tag!("(0074,100E)",0x0074100E,"Procedure Step Discontinuation Reason Code Sequence",ProcedureStepDiscontinuationReasonCodeSequence,SQ,VM::N(1));
define_tag!("(0074,1020)",0x00741020,"Beam Task Sequence",BeamTaskSequence,SQ,VM::N(1));
define_tag!("(0074,1022)",0x00741022,"Beam Task Type",BeamTaskType,CS,VM::N(1));
define_tag!("(0074,1024)",0x00741024,"Beam Order Index (Trial)",BeamOrderIndexTrial,IS,VM::N(1));
define_tag!("(0074,1025)",0x00741025,"Autosequence Flag",AutosequenceFlag,CS,VM::N(1));
define_tag!("(0074,1026)",0x00741026,"Table Top Vertical Adjusted Position",TableTopVerticalAdjustedPosition,FD,VM::N(1));
define_tag!("(0074,1027)",0x00741027,"Table Top Longitudinal Adjusted Position",TableTopLongitudinalAdjustedPosition,FD,VM::N(1));
define_tag!("(0074,1028)",0x00741028,"Table Top Lateral Adjusted Position",TableTopLateralAdjustedPosition,FD,VM::N(1));
define_tag!("(0074,102A)",0x0074102A,"Patient Support Adjusted Angle",PatientSupportAdjustedAngle,FD,VM::N(1));
define_tag!("(0074,102B)",0x0074102B,"Table Top Eccentric Adjusted Angle",TableTopEccentricAdjustedAngle,FD,VM::N(1));
define_tag!("(0074,102C)",0x0074102C,"Table Top Pitch Adjusted Angle",TableTopPitchAdjustedAngle,FD,VM::N(1));
define_tag!("(0074,102D)",0x0074102D,"Table Top Roll Adjusted Angle",TableTopRollAdjustedAngle,FD,VM::N(1));
define_tag!("(0074,1030)",0x00741030,"Delivery Verification Image Sequence",DeliveryVerificationImageSequence,SQ,VM::N(1));
define_tag!("(0074,1032)",0x00741032,"Verification Image Timing",VerificationImageTiming,CS,VM::N(1));
define_tag!("(0074,1034)",0x00741034,"Double Exposure Flag",DoubleExposureFlag,CS,VM::N(1));
define_tag!("(0074,1036)",0x00741036,"Double Exposure Ordering",DoubleExposureOrdering,CS,VM::N(1));
define_tag!("(0074,1038)",0x00741038,"Double Exposure Meterset (Trial)",DoubleExposureMetersetTrial,DS,VM::N(1));
define_tag!("(0074,103A)",0x0074103A,"Double Exposure Field Delta (Trial)",DoubleExposureFieldDeltaTrial,DS,VM::N(4));
define_tag!("(0074,1040)",0x00741040,"Related Reference RT Image Sequence",RelatedReferenceRTImageSequence,SQ,VM::N(1));
define_tag!("(0074,1042)",0x00741042,"General Machine Verification Sequence",GeneralMachineVerificationSequence,SQ,VM::N(1));
define_tag!("(0074,1044)",0x00741044,"Conventional Machine Verification Sequence",ConventionalMachineVerificationSequence,SQ,VM::N(1));
define_tag!("(0074,1046)",0x00741046,"Ion Machine Verification Sequence",IonMachineVerificationSequence,SQ,VM::N(1));
define_tag!("(0074,1048)",0x00741048,"Failed Attributes Sequence",FailedAttributesSequence,SQ,VM::N(1));
define_tag!("(0074,104A)",0x0074104A,"Overridden Attributes Sequence",OverriddenAttributesSequence,SQ,VM::N(1));
define_tag!("(0074,104C)",0x0074104C,"Conventional Control Point Verification Sequence",ConventionalControlPointVerificationSequence,SQ,VM::N(1));
define_tag!("(0074,104E)",0x0074104E,"Ion Control Point Verification Sequence",IonControlPointVerificationSequence,SQ,VM::N(1));
define_tag!("(0074,1050)",0x00741050,"Attribute Occurrence Sequence",AttributeOccurrenceSequence,SQ,VM::N(1));
define_tag!("(0074,1052)",0x00741052,"Attribute Occurrence Pointer",AttributeOccurrencePointer,AT,VM::N(1));
define_tag!("(0074,1054)",0x00741054,"Attribute Item Selector",AttributeItemSelector,UL,VM::N(1));
define_tag!("(0074,1056)",0x00741056,"Attribute Occurrence Private Creator",AttributeOccurrencePrivateCreator,LO,VM::N(1));
define_tag!("(0074,1057)",0x00741057,"Selector Sequence Pointer Items",SelectorSequencePointerItems,IS,VM::NOrMore(1));
define_tag!("(0074,1200)",0x00741200,"Scheduled Procedure Step Priority",ScheduledProcedureStepPriority,CS,VM::N(1));
define_tag!("(0074,1202)",0x00741202,"Worklist Label",WorklistLabel,LO,VM::N(1));
define_tag!("(0074,1204)",0x00741204,"Procedure Step Label",ProcedureStepLabel,LO,VM::N(1));
define_tag!("(0074,1210)",0x00741210,"Scheduled Processing Parameters Sequence",ScheduledProcessingParametersSequence,SQ,VM::N(1));
define_tag!("(0074,1212)",0x00741212,"Performed Processing Parameters Sequence",PerformedProcessingParametersSequence,SQ,VM::N(1));
define_tag!("(0074,1216)",0x00741216,"Unified Procedure Step Performed Procedure Sequence",UnifiedProcedureStepPerformedProcedureSequence,SQ,VM::N(1));
define_tag!("(0074,1220)",0x00741220,"Related Procedure Step Sequence",RelatedProcedureStepSequence,SQ,VM::N(1));
define_tag!("(0074,1222)",0x00741222,"Procedure Step Relationship Type",ProcedureStepRelationshipType,LO,VM::N(1));
define_tag!("(0074,1224)",0x00741224,"Replaced Procedure Step Sequence",ReplacedProcedureStepSequence,SQ,VM::N(1));
define_tag!("(0074,1230)",0x00741230,"Deletion Lock",DeletionLock,LO,VM::N(1));
define_tag!("(0074,1234)",0x00741234,"Receiving AE",ReceivingAE,AE,VM::N(1));
define_tag!("(0074,1236)",0x00741236,"Requesting AE",RequestingAE,AE,VM::N(1));
define_tag!("(0074,1238)",0x00741238,"Reason for Cancellation",ReasonForCancellation,LT,VM::N(1));
define_tag!("(0074,1242)",0x00741242,"SCP Status",SCPStatus,CS,VM::N(1));
define_tag!("(0074,1244)",0x00741244,"Subscription List Status",SubscriptionListStatus,CS,VM::N(1));
define_tag!("(0074,1246)",0x00741246,"Unified Procedure Step List Status",UnifiedProcedureStepListStatus,CS,VM::N(1));
define_tag!("(0074,1324)",0x00741324,"Beam Order Index",BeamOrderIndex,UL,VM::N(1));
define_tag!("(0074,1338)",0x00741338,"Double Exposure Meterset",DoubleExposureMeterset,FD,VM::N(1));
define_tag!("(0074,133A)",0x0074133A,"Double Exposure Field Delta",DoubleExposureFieldDelta,FD,VM::N(4));
define_tag!("(0074,1401)",0x00741401,"Brachy Task Sequence",BrachyTaskSequence,SQ,VM::N(1));
define_tag!("(0074,1402)",0x00741402,"Continuation Start Total Reference Air Kerma",ContinuationStartTotalReferenceAirKerma,DS,VM::N(1));
define_tag!("(0074,1403)",0x00741403,"Continuation End Total Reference Air Kerma",ContinuationEndTotalReferenceAirKerma,DS,VM::N(1));
define_tag!("(0074,1404)",0x00741404,"Continuation Pulse Number",ContinuationPulseNumber,IS,VM::N(1));
define_tag!("(0074,1405)",0x00741405,"Channel Delivery Order Sequence",ChannelDeliveryOrderSequence,SQ,VM::N(1));
define_tag!("(0074,1406)",0x00741406,"Referenced Channel Number",ReferencedChannelNumber,IS,VM::N(1));
define_tag!("(0074,1407)",0x00741407,"Start Cumulative Time Weight",StartCumulativeTimeWeight,DS,VM::N(1));
define_tag!("(0074,1408)",0x00741408,"End Cumulative Time Weight",EndCumulativeTimeWeight,DS,VM::N(1));
define_tag!("(0074,1409)",0x00741409,"Omitted Channel Sequence",OmittedChannelSequence,SQ,VM::N(1));
define_tag!("(0074,140A)",0x0074140A,"Reason for Channel Omission",ReasonForChannelOmission,CS,VM::N(1));
define_tag!("(0074,140B)",0x0074140B,"Reason for Channel Omission Description",ReasonForChannelOmissionDescription,LO,VM::N(1));
define_tag!("(0074,140C)",0x0074140C,"Channel Delivery Order Index",ChannelDeliveryOrderIndex,IS,VM::N(1));
define_tag!("(0074,140D)",0x0074140D,"Channel Delivery Continuation Sequence",ChannelDeliveryContinuationSequence,SQ,VM::N(1));
define_tag!("(0074,140E)",0x0074140E,"Omitted Application Setup Sequence",OmittedApplicationSetupSequence,SQ,VM::N(1));
define_tag!("(0076,0001)",0x00760001,"Implant Assembly Template Name",ImplantAssemblyTemplateName,LO,VM::N(1));
define_tag!("(0076,0003)",0x00760003,"Implant Assembly Template Issuer",ImplantAssemblyTemplateIssuer,LO,VM::N(1));
define_tag!("(0076,0006)",0x00760006,"Implant Assembly Template Version",ImplantAssemblyTemplateVersion,LO,VM::N(1));
define_tag!("(0076,0008)",0x00760008,"Replaced Implant Assembly Template Sequence",ReplacedImplantAssemblyTemplateSequence,SQ,VM::N(1));
define_tag!("(0076,000A)",0x0076000A,"Implant Assembly Template Type",ImplantAssemblyTemplateType,CS,VM::N(1));
define_tag!("(0076,000C)",0x0076000C,"Original Implant Assembly Template Sequence",OriginalImplantAssemblyTemplateSequence,SQ,VM::N(1));
define_tag!("(0076,000E)",0x0076000E,"Derivation Implant Assembly Template Sequence",DerivationImplantAssemblyTemplateSequence,SQ,VM::N(1));
define_tag!("(0076,0010)",0x00760010,"Implant Assembly Template Target Anatomy Sequence",ImplantAssemblyTemplateTargetAnatomySequence,SQ,VM::N(1));
define_tag!("(0076,0020)",0x00760020,"Procedure Type Code Sequence",ProcedureTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0076,0030)",0x00760030,"Surgical Technique",SurgicalTechnique,LO,VM::N(1));
define_tag!("(0076,0032)",0x00760032,"Component Types Sequence",ComponentTypesSequence,SQ,VM::N(1));
define_tag!("(0076,0034)",0x00760034,"Component Type Code Sequence",ComponentTypeCodeSequence,CS,VM::N(1));
define_tag!("(0076,0036)",0x00760036,"Exclusive Component Type",ExclusiveComponentType,CS,VM::N(1));
define_tag!("(0076,0038)",0x00760038,"Mandatory Component Type",MandatoryComponentType,CS,VM::N(1));
define_tag!("(0076,0040)",0x00760040,"Component Sequence",ComponentSequence,SQ,VM::N(1));
define_tag!("(0076,0055)",0x00760055,"Component ID",ComponentID,US,VM::N(1));
define_tag!("(0076,0060)",0x00760060,"Component Assembly Sequence",ComponentAssemblySequence,SQ,VM::N(1));
define_tag!("(0076,0070)",0x00760070,"Component 1 Referenced ID",Component1ReferencedID,US,VM::N(1));
define_tag!("(0076,0080)",0x00760080,"Component 1 Referenced Mating Feature Set ID",Component1ReferencedMatingFeatureSetID,US,VM::N(1));
define_tag!("(0076,0090)",0x00760090,"Component 1 Referenced Mating Feature ID",Component1ReferencedMatingFeatureID,US,VM::N(1));
define_tag!("(0076,00A0)",0x007600A0,"Component 2 Referenced ID",Component2ReferencedID,US,VM::N(1));
define_tag!("(0076,00B0)",0x007600B0,"Component 2 Referenced Mating Feature Set ID",Component2ReferencedMatingFeatureSetID,US,VM::N(1));
define_tag!("(0076,00C0)",0x007600C0,"Component 2 Referenced Mating Feature ID",Component2ReferencedMatingFeatureID,US,VM::N(1));
define_tag!("(0078,0001)",0x00780001,"Implant Template Group Name",ImplantTemplateGroupName,LO,VM::N(1));
define_tag!("(0078,0010)",0x00780010,"Implant Template Group Description",ImplantTemplateGroupDescription,ST,VM::N(1));
define_tag!("(0078,0020)",0x00780020,"Implant Template Group Issuer",ImplantTemplateGroupIssuer,LO,VM::N(1));
define_tag!("(0078,0024)",0x00780024,"Implant Template Group Version",ImplantTemplateGroupVersion,LO,VM::N(1));
define_tag!("(0078,0026)",0x00780026,"Replaced Implant Template Group Sequence",ReplacedImplantTemplateGroupSequence,SQ,VM::N(1));
define_tag!("(0078,0028)",0x00780028,"Implant Template Group Target Anatomy Sequence",ImplantTemplateGroupTargetAnatomySequence,SQ,VM::N(1));
define_tag!("(0078,002A)",0x0078002A,"Implant Template Group Members Sequence",ImplantTemplateGroupMembersSequence,SQ,VM::N(1));
define_tag!("(0078,002E)",0x0078002E,"Implant Template Group Member ID",ImplantTemplateGroupMemberID,US,VM::N(1));
define_tag!("(0078,0050)",0x00780050,"3D Implant Template Group Member Matching Point",ThreeDImplantTemplateGroupMemberMatchingPoint,FD,VM::N(3));
define_tag!("(0078,0060)",0x00780060,"3D Implant Template Group Member Matching Axes",ThreeDImplantTemplateGroupMemberMatchingAxes,FD,VM::N(9));
define_tag!("(0078,0070)",0x00780070,"Implant Template Group Member Matching 2D Coordinates Sequence",ImplantTemplateGroupMemberMatching2DCoordinatesSequence,SQ,VM::N(1));
define_tag!("(0078,0090)",0x00780090,"2D Implant Template Group Member Matching Point",TwoDImplantTemplateGroupMemberMatchingPoint,FD,VM::N(2));
define_tag!("(0078,00A0)",0x007800A0,"2D Implant Template Group Member Matching Axes",TwoDImplantTemplateGroupMemberMatchingAxes,FD,VM::N(4));
define_tag!("(0078,00B0)",0x007800B0,"Implant Template Group Variation Dimension Sequence",ImplantTemplateGroupVariationDimensionSequence,SQ,VM::N(1));
define_tag!("(0078,00B2)",0x007800B2,"Implant Template Group Variation Dimension Name",ImplantTemplateGroupVariationDimensionName,LO,VM::N(1));
define_tag!("(0078,00B4)",0x007800B4,"Implant Template Group Variation Dimension Rank Sequence",ImplantTemplateGroupVariationDimensionRankSequence,SQ,VM::N(1));
define_tag!("(0078,00B6)",0x007800B6,"Referenced Implant Template Group Member ID",ReferencedImplantTemplateGroupMemberID,US,VM::N(1));
define_tag!("(0078,00B8)",0x007800B8,"Implant Template Group Variation Dimension Rank",ImplantTemplateGroupVariationDimensionRank,US,VM::N(1));
define_tag!("(0080,0001)",0x00800001,"Surface Scan Acquisition Type Code Sequence",SurfaceScanAcquisitionTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0080,0002)",0x00800002,"Surface Scan Mode Code Sequence",SurfaceScanModeCodeSequence,SQ,VM::N(1));
define_tag!("(0080,0003)",0x00800003,"Registration Method Code Sequence",RegistrationMethodCodeSequence,SQ,VM::N(1));
define_tag!("(0080,0004)",0x00800004,"Shot Duration Time",ShotDurationTime,FD,VM::N(1));
define_tag!("(0080,0005)",0x00800005,"Shot Offset Time",ShotOffsetTime,FD,VM::N(1));
define_tag!("(0080,0006)",0x00800006,"Surface Point Presentation Value Data",SurfacePointPresentationValueData,US,VM::NOrMore(1));
define_tag!("(0080,0007)",0x00800007,"Surface Point Color CIELab Value Data",SurfacePointColorCIELabValueData,US,VM::MultipleOfN(3));
define_tag!("(0080,0008)",0x00800008,"UV Mapping Sequence",UVMappingSequence,SQ,VM::N(1));
define_tag!("(0080,0009)",0x00800009,"Texture Label",TextureLabel,SH,VM::N(1));
define_tag!("(0080,0010)",0x00800010,"U Value Data",UValueData,OF,VM::NOrMore(1));
define_tag!("(0080,0011)",0x00800011,"V Value Data",VValueData,OF,VM::NOrMore(1));
define_tag!("(0080,0012)",0x00800012,"Referenced Texture Sequence",ReferencedTextureSequence,SQ,VM::N(1));
define_tag!("(0080,0013)",0x00800013,"Referenced Surface Data Sequence",ReferencedSurfaceDataSequence,SQ,VM::N(1));
define_tag!("(0082,0001)",0x00820001,"Assessment Summary",AssessmentSummary,CS,VM::N(1));
define_tag!("(0082,0003)",0x00820003,"Assessment Summary Description",AssessmentSummaryDescription,UT,VM::N(1));
define_tag!("(0082,0004)",0x00820004,"Assessed SOP Instance Sequence",AssessedSOPInstanceSequence,SQ,VM::N(1));
define_tag!("(0082,0005)",0x00820005,"Referenced Comparison SOP Instance Sequence",ReferencedComparisonSOPInstanceSequence,SQ,VM::N(1));
define_tag!("(0082,0006)",0x00820006,"Number of Assessment Observations",NumberOfAssessmentObservations,UL,VM::N(1));
define_tag!("(0082,0007)",0x00820007,"Assessment Observations Sequence",AssessmentObservationsSequence,SQ,VM::N(1));
define_tag!("(0082,0008)",0x00820008,"Observation Significance",ObservationSignificance,CS,VM::N(1));
define_tag!("(0082,000A)",0x0082000A,"Observation Description",ObservationDescription,UT,VM::N(1));
define_tag!("(0082,000C)",0x0082000C,"Structured Constraint Observation Sequence",StructuredContraintObservationSequence,SQ,VM::N(1));
define_tag!("(0082,0010)",0x00820010,"Assessed Attribute Value Sequence",AssessedAttributeValueSequence,SQ,VM::N(1));
define_tag!("(0082,0016)",0x00820016,"Assessment Set ID",AssessmentSetID,LO,VM::N(1));
define_tag!("(0082,0017)",0x00820017,"Assessment Requester Sequence",AssessmentRequesterSequence,SQ,VM::N(1));
define_tag!("(0082,0018)",0x00820018,"Selector Attribute Name",SelectorAttributeName,LO,VM::N(1));
define_tag!("(0082,0019)",0x00820019,"Selector Attribute Keyword",SelectorAttributeKeyword,LO,VM::N(1));
define_tag!("(0082,0021)",0x00820021,"Assessment Type Code Sequence",AssessmentTypeCodeSequence,SQ,VM::N(1));
define_tag!("(0082,0022)",0x00820022,"Observation Basis Code Sequence",ObservationBasisCodeSequence,SQ,VM::N(1));
define_tag!("(0082,0023)",0x00820023,"Assessment Label",AssessmentLabel,LO,VM::N(1));
define_tag!("(0082,0032)",0x00820032,"Constraint Type",ConstraintType,CS,VM::N(1));
define_tag!("(0082,0033)",0x00820033,"Specification Selection Guidance",SpecificationSelectionGuidance,UT,VM::N(1));
define_tag!("(0082,0034)",0x00820034,"Constraint Value Sequence",ConstraintValueSequence,SQ,VM::N(1));
define_tag!("(0082,0035)",0x00820035,"Recommended Default Value Sequence",RecommendedDefaultValueSequence,SQ,VM::N(1));
define_tag!("(0082,0036)",0x00820036,"Constraint Violation Significance",ConstraintViolationSignificance,CS,VM::N(1));
define_tag!("(0082,0037)",0x00820037,"Constraint Violation Condition",ConstraintViolationCondition,UT,VM::N(1));
define_tag!("(0088,0130)",0x00880130,"Storage Media File-set ID",StorageMediaFileSetID,SH,VM::N(1));
define_tag!("(0088,0140)",0x00880140,"Storage Media File-set UID",StorageMediaFileSetUID,UI,VM::N(1));
define_tag!("(0088,0200)",0x00880200,"Icon Image Sequence",IconImageSequence,SQ,VM::N(1));
define_tag!("(0088,0904)",0x00880904,"Topic Title",TopicTitle,LO,VM::N(1));
define_tag!("(0088,0906)",0x00880906,"Topic Subject",TopicSubject,ST,VM::N(1));
define_tag!("(0088,0910)",0x00880910,"Topic Author",TopicAuthor,LO,VM::N(1));
define_tag!("(0088,0912)",0x00880912,"Topic Keywords",TopicKeywords,LO,VM::MToN(1,32));
define_tag!("(0100,0410)",0x01000410,"SOP Instance Status",SOPInstanceStatus,CS,VM::N(1));
define_tag!("(0100,0420)",0x01000420,"SOP Authorization DateTime",SOPAuthorizationDateTime,DT,VM::N(1));
define_tag!("(0100,0424)",0x01000424,"SOP Authorization Comment",SOPAuthorizationComment,LT,VM::N(1));
define_tag!("(0100,0426)",0x01000426,"Authorization Equipment Certification Number",AuthorizationEquipmentCertificationNumber,LO,VM::N(1));
define_tag!("(0400,0005)",0x04000005,"MAC ID Number",MACIDNumber,US,VM::N(1));
define_tag!("(0400,0010)",0x04000010,"MAC Calculation Transfer Syntax UID",MACCalculationTransferSyntaxUID,UI,VM::N(1));
define_tag!("(0400,0015)",0x04000015,"MAC Algorithm",MACAlgorithm,CS,VM::N(1));
define_tag!("(0400,0020)",0x04000020,"Data Elements Signed",DataElementsSigned,AT,VM::NOrMore(1));
define_tag!("(0400,0100)",0x04000100,"Digital Signature UID",DigitalSignatureUID,UI,VM::N(1));
define_tag!("(0400,0105)",0x04000105,"Digital Signature DateTime",DigitalSignatureDateTime,DT,VM::N(1));
define_tag!("(0400,0110)",0x04000110,"Certificate Type",CertificateType,CS,VM::N(1));
define_tag!("(0400,0115)",0x04000115,"Certificate of Signer",CertificateOfSigner,OB,VM::N(1));
define_tag!("(0400,0120)",0x04000120,"Signature",Signature,OB,VM::N(1));
define_tag!("(0400,0305)",0x04000305,"Certified Timestamp Type",CertifiedTimestampType,CS,VM::N(1));
define_tag!("(0400,0310)",0x04000310,"Certified Timestamp",CertifiedTimestamp,OB,VM::N(1));
define_tag!("(0400,0401)",0x04000401,"Digital Signature Purpose Code Sequence",DigitalSignaturePurposeCodeSequence,SQ,VM::N(1));
define_tag!("(0400,0402)",0x04000402,"Referenced Digital Signature Sequence",ReferencedDigitalSignatureSequence,SQ,VM::N(1));
define_tag!("(0400,0403)",0x04000403,"Referenced SOP Instance MAC Sequence",ReferencedSOPInstanceMACSequence,SQ,VM::N(1));
define_tag!("(0400,0404)",0x04000404,"MAC",MAC,OB,VM::N(1));
define_tag!("(0400,0500)",0x04000500,"Encrypted Attributes Sequence",EncryptedAttributesSequence,SQ,VM::N(1));
define_tag!("(0400,0510)",0x04000510,"Encrypted Content Transfer Syntax UID",EncryptedContentTransferSyntaxUID,UI,VM::N(1));
define_tag!("(0400,0520)",0x04000520,"Encrypted Content",EncryptedContent,OB,VM::N(1));
define_tag!("(0400,0550)",0x04000550,"Modified Attributes Sequence",ModifiedAttributesSequence,SQ,VM::N(1));
define_tag!("(0400,0561)",0x04000561,"Original Attributes Sequence",OriginalAttributesSequence,SQ,VM::N(1));
define_tag!("(0400,0562)",0x04000562,"Attribute Modification DateTime",AttributeModificationDateTime,DT,VM::N(1));
define_tag!("(0400,0563)",0x04000563,"Modifying System",ModifyingSystem,LO,VM::N(1));
define_tag!("(0400,0564)",0x04000564,"Source of Previous Values",SourceOfPreviousValues,LO,VM::N(1));
define_tag!("(0400,0565)",0x04000565,"Reason for the Attribute Modification",ReasonForTheAttributeModification,CS,VM::N(1));
define_tag!("(2000,0010)",0x20000010,"Number of Copies",NumberOfCopies,IS,VM::N(1));
define_tag!("(2000,001E)",0x2000001E,"Printer Configuration Sequence",PrinterConfigurationSequence,SQ,VM::N(1));
define_tag!("(2000,0020)",0x20000020,"Print Priority",PrintPriority,CS,VM::N(1));
define_tag!("(2000,0030)",0x20000030,"Medium Type",MediumType,CS,VM::N(1));
define_tag!("(2000,0040)",0x20000040,"Film Destination",FilmDestination,CS,VM::N(1));
define_tag!("(2000,0050)",0x20000050,"Film Session Label",FilmSessionLabel,LO,VM::N(1));
define_tag!("(2000,0060)",0x20000060,"Memory Allocation",MemoryAllocation,IS,VM::N(1));
define_tag!("(2000,0061)",0x20000061,"Maximum Memory Allocation",MaximumMemoryAllocation,IS,VM::N(1));
define_tag!("(2000,0062)",0x20000062,"Color Image Printing Flag",ColorImagePrintingFlag,CS,VM::N(1));
define_tag!("(2000,0063)",0x20000063,"Collation Flag",CollationFlag,CS,VM::N(1));
define_tag!("(2000,0065)",0x20000065,"Annotation Flag",AnnotationFlag,CS,VM::N(1));
define_tag!("(2000,0067)",0x20000067,"Image Overlay Flag",ImageOverlayFlag,CS,VM::N(1));
define_tag!("(2000,0069)",0x20000069,"Presentation LUT Flag",PresentationLUTFlag,CS,VM::N(1));
define_tag!("(2000,006A)",0x2000006A,"Image Box Presentation LUT Flag",ImageBoxPresentationLUTFlag,CS,VM::N(1));
define_tag!("(2000,00A0)",0x200000A0,"Memory Bit Depth",MemoryBitDepth,US,VM::N(1));
define_tag!("(2000,00A1)",0x200000A1,"Printing Bit Depth",PrintingBitDepth,US,VM::N(1));
define_tag!("(2000,00A2)",0x200000A2,"Media Installed Sequence",MediaInstalledSequence,SQ,VM::N(1));
define_tag!("(2000,00A4)",0x200000A4,"Other Media Available Sequence",OtherMediaAvailableSequence,SQ,VM::N(1));
define_tag!("(2000,00A8)",0x200000A8,"Supported Image Display Formats Sequence",SupportedImageDisplayFormatsSequence,SQ,VM::N(1));
define_tag!("(2000,0500)",0x20000500,"Referenced Film Box Sequence",ReferencedFilmBoxSequence,SQ,VM::N(1));
define_tag!("(2000,0510)",0x20000510,"Referenced Stored Print Sequence",ReferencedStoredPrintSequence,SQ,VM::N(1));
define_tag!("(2010,0010)",0x20100010,"Image Display Format",ImageDisplayFormat,ST,VM::N(1));
define_tag!("(2010,0030)",0x20100030,"Annotation Display Format ID",AnnotationDisplayFormatID,CS,VM::N(1));
define_tag!("(2010,0040)",0x20100040,"Film Orientation",FilmOrientation,CS,VM::N(1));
define_tag!("(2010,0050)",0x20100050,"Film Size ID",FilmSizeID,CS,VM::N(1));
define_tag!("(2010,0052)",0x20100052,"Printer Resolution ID",PrinterResolutionID,CS,VM::N(1));
define_tag!("(2010,0054)",0x20100054,"Default Printer Resolution ID",DefaultPrinterResolutionID,CS,VM::N(1));
define_tag!("(2010,0060)",0x20100060,"Magnification Type",MagnificationType,CS,VM::N(1));
define_tag!("(2010,0080)",0x20100080,"Smoothing Type",SmoothingType,CS,VM::N(1));
define_tag!("(2010,00A6)",0x201000A6,"Default Magnification Type",DefaultMagnificationType,CS,VM::N(1));
define_tag!("(2010,00A7)",0x201000A7,"Other Magnification Types Available",OtherMagnificationTypesAvailable,CS,VM::NOrMore(1));
define_tag!("(2010,00A8)",0x201000A8,"Default Smoothing Type",DefaultSmoothingType,CS,VM::N(1));
define_tag!("(2010,00A9)",0x201000A9,"Other Smoothing Types Available",OtherSmoothingTypesAvailable,CS,VM::NOrMore(1));
define_tag!("(2010,0100)",0x20100100,"Border Density",BorderDensity,CS,VM::N(1));
define_tag!("(2010,0110)",0x20100110,"Empty Image Density",EmptyImageDensity,CS,VM::N(1));
define_tag!("(2010,0120)",0x20100120,"Min Density",MinDensity,US,VM::N(1));
define_tag!("(2010,0130)",0x20100130,"Max Density",MaxDensity,US,VM::N(1));
define_tag!("(2010,0140)",0x20100140,"Trim",Trim,CS,VM::N(1));
define_tag!("(2010,0150)",0x20100150,"Configuration Information",ConfigurationInformation,ST,VM::N(1));
define_tag!("(2010,0152)",0x20100152,"Configuration Information Description",ConfigurationInformationDescription,LT,VM::N(1));
define_tag!("(2010,0154)",0x20100154,"Maximum Collated Films",MaximumCollatedFilms,IS,VM::N(1));
define_tag!("(2010,015E)",0x2010015E,"Illumination",Illumination,US,VM::N(1));
define_tag!("(2010,0160)",0x20100160,"Reflected Ambient Light",ReflectedAmbientLight,US,VM::N(1));
define_tag!("(2010,0376)",0x20100376,"Printer Pixel Spacing",PrinterPixelSpacing,DS,VM::N(2));
define_tag!("(2010,0500)",0x20100500,"Referenced Film Session Sequence",ReferencedFilmSessionSequence,SQ,VM::N(1));
define_tag!("(2010,0510)",0x20100510,"Referenced Image Box Sequence",ReferencedImageBoxSequence,SQ,VM::N(1));
define_tag!("(2010,0520)",0x20100520,"Referenced Basic Annotation Box Sequence",ReferencedBasicAnnotationBoxSequence,SQ,VM::N(1));
define_tag!("(2020,0010)",0x20200010,"Image Box Position",ImageBoxPosition,US,VM::N(1));
define_tag!("(2020,0020)",0x20200020,"Polarity",Polarity,CS,VM::N(1));
define_tag!("(2020,0030)",0x20200030,"Requested Image Size",RequestedImageSize,DS,VM::N(1));
define_tag!("(2020,0040)",0x20200040,"Requested Decimate/Crop Behavior",RequestedDecimateCropBehavior,CS,VM::N(1));
define_tag!("(2020,0050)",0x20200050,"Requested Resolution ID",RequestedResolutionID,CS,VM::N(1));
define_tag!("(2020,00A0)",0x202000A0,"Requested Image Size Flag",RequestedImageSizeFlag,CS,VM::N(1));
define_tag!("(2020,00A2)",0x202000A2,"Decimate/Crop Result",DecimateCropResult,CS,VM::N(1));
define_tag!("(2020,0110)",0x20200110,"Basic Grayscale Image Sequence",BasicGrayscaleImageSequence,SQ,VM::N(1));
define_tag!("(2020,0111)",0x20200111,"Basic Color Image Sequence",BasicColorImageSequence,SQ,VM::N(1));
define_tag!("(2020,0130)",0x20200130,"Referenced Image Overlay Box Sequence",ReferencedImageOverlayBoxSequence,SQ,VM::N(1));
define_tag!("(2020,0140)",0x20200140,"Referenced VOI LUT Box Sequence",ReferencedVOILUTBoxSequence,SQ,VM::N(1));
define_tag!("(2030,0010)",0x20300010,"Annotation Position",AnnotationPosition,US,VM::N(1));
define_tag!("(2030,0020)",0x20300020,"Text String",TextString,LO,VM::N(1));
define_tag!("(2040,0010)",0x20400010,"Referenced Overlay Plane Sequence",ReferencedOverlayPlaneSequence,SQ,VM::N(1));
define_tag!("(2040,0011)",0x20400011,"Referenced Overlay Plane Groups",ReferencedOverlayPlaneGroups,US,VM::MToN(1,99));
define_tag!("(2040,0020)",0x20400020,"Overlay Pixel Data Sequence",OverlayPixelDataSequence,SQ,VM::N(1));
define_tag!("(2040,0060)",0x20400060,"Overlay Magnification Type",OverlayMagnificationType,CS,VM::N(1));
define_tag!("(2040,0070)",0x20400070,"Overlay Smoothing Type",OverlaySmoothingType,CS,VM::N(1));
define_tag!("(2040,0072)",0x20400072,"Overlay or Image Magnification",OverlayOrImageMagnification,CS,VM::N(1));
define_tag!("(2040,0074)",0x20400074,"Magnify to Number of Columns",MagnifyToNumberOfColumns,US,VM::N(1));
define_tag!("(2040,0080)",0x20400080,"Overlay Foreground Density",OverlayForegroundDensity,CS,VM::N(1));
define_tag!("(2040,0082)",0x20400082,"Overlay Background Density",OverlayBackgroundDensity,CS,VM::N(1));
define_tag!("(2040,0090)",0x20400090,"Overlay Mode",OverlayMode,CS,VM::N(1));
define_tag!("(2040,0100)",0x20400100,"Threshold Density",ThresholdDensity,CS,VM::N(1));
define_tag!("(2040,0500)",0x20400500,"Referenced Image Box Sequence (Retired)",ReferencedImageBoxSequenceRetired,SQ,VM::N(1));
define_tag!("(2050,0010)",0x20500010,"Presentation LUT Sequence",PresentationLUTSequence,SQ,VM::N(1));
define_tag!("(2050,0020)",0x20500020,"Presentation LUT Shape",PresentationLUTShape,CS,VM::N(1));
define_tag!("(2050,0500)",0x20500500,"Referenced Presentation LUT Sequence",ReferencedPresentationLUTSequence,SQ,VM::N(1));
define_tag!("(2100,0010)",0x21000010,"Print Job ID",PrintJobID,SH,VM::N(1));
define_tag!("(2100,0020)",0x21000020,"Execution Status",ExecutionStatus,CS,VM::N(1));
define_tag!("(2100,0030)",0x21000030,"Execution Status Info",ExecutionStatusInfo,CS,VM::N(1));
define_tag!("(2100,0040)",0x21000040,"Creation Date",CreationDate,DA,VM::N(1));
define_tag!("(2100,0050)",0x21000050,"Creation Time",CreationTime,TM,VM::N(1));
define_tag!("(2100,0070)",0x21000070,"Originator",Originator,AE,VM::N(1));
define_tag!("(2100,0140)",0x21000140,"Destination AE",DestinationAE,AE,VM::N(1));
define_tag!("(2100,0160)",0x21000160,"Owner ID",OwnerID,SH,VM::N(1));
define_tag!("(2100,0170)",0x21000170,"Number of Films",NumberOfFilms,IS,VM::N(1));
define_tag!("(2100,0500)",0x21000500,"Referenced Print Job Sequence (Pull Stored Print)",ReferencedPrintJobSequencePullStoredPrint,SQ,VM::N(1));
define_tag!("(2110,0010)",0x21100010,"Printer Status",PrinterStatus,CS,VM::N(1));
define_tag!("(2110,0020)",0x21100020,"Printer Status Info",PrinterStatusInfo,CS,VM::N(1));
define_tag!("(2110,0030)",0x21100030,"Printer Name",PrinterName,LO,VM::N(1));
define_tag!("(2110,0099)",0x21100099,"Print Queue ID",PrintQueueID,SH,VM::N(1));
define_tag!("(2120,0010)",0x21200010,"Queue Status",QueueStatus,CS,VM::N(1));
define_tag!("(2120,0050)",0x21200050,"Print Job Description Sequence",PrintJobDescriptionSequence,SQ,VM::N(1));
define_tag!("(2120,0070)",0x21200070,"Referenced Print Job Sequence",ReferencedPrintJobSequence,SQ,VM::N(1));
define_tag!("(2130,0010)",0x21300010,"Print Management Capabilities Sequence",PrintManagementCapabilitiesSequence,SQ,VM::N(1));
define_tag!("(2130,0015)",0x21300015,"Printer Characteristics Sequence",PrinterCharacteristicsSequence,SQ,VM::N(1));
define_tag!("(2130,0030)",0x21300030,"Film Box Content Sequence",FilmBoxContentSequence,SQ,VM::N(1));
define_tag!("(2130,0040)",0x21300040,"Image Box Content Sequence",ImageBoxContentSequence,SQ,VM::N(1));
define_tag!("(2130,0050)",0x21300050,"Annotation Content Sequence",AnnotationContentSequence,SQ,VM::N(1));
define_tag!("(2130,0060)",0x21300060,"Image Overlay Box Content Sequence",ImageOverlayBoxContentSequence,SQ,VM::N(1));
define_tag!("(2130,0080)",0x21300080,"Presentation LUT Content Sequence",PresentationLUTContentSequence,SQ,VM::N(1));
define_tag!("(2130,00A0)",0x213000A0,"Proposed Study Sequence",ProposedStudySequence,SQ,VM::N(1));
define_tag!("(2130,00C0)",0x213000C0,"Original Image Sequence",OriginalImageSequence,SQ,VM::N(1));
define_tag!("(2200,0001)",0x22000001,"Label Using Information Extracted From Instances",LabelUsingInformationExtractedFromInstances,CS,VM::N(1));
define_tag!("(2200,0002)",0x22000002,"Label Text",LabelText,UT,VM::N(1));
define_tag!("(2200,0003)",0x22000003,"Label Style Selection",LabelStyleSelection,CS,VM::N(1));
define_tag!("(2200,0004)",0x22000004,"Media Disposition",MediaDisposition,LT,VM::N(1));
define_tag!("(2200,0005)",0x22000005,"Barcode Value",BarcodeValue,LT,VM::N(1));
define_tag!("(2200,0006)",0x22000006,"Barcode Symbology",BarcodeSymbology,CS,VM::N(1));
define_tag!("(2200,0007)",0x22000007,"Allow Media Splitting",AllowMediaSplitting,CS,VM::N(1));
define_tag!("(2200,0008)",0x22000008,"Include Non-DICOM Objects",IncludeNonDICOMObjects,CS,VM::N(1));
define_tag!("(2200,0009)",0x22000009,"Include Display Application",IncludeDisplayApplication,CS,VM::N(1));
define_tag!("(2200,000A)",0x2200000A,"Preserve Composite Instances After Media Creation",PreserveCompositeInstancesAfterMediaCreation,CS,VM::N(1));
define_tag!("(2200,000B)",0x2200000B,"Total Number of Pieces of Media Created",TotalNumberOfPiecesOfMediaCreated,US,VM::N(1));
define_tag!("(2200,000C)",0x2200000C,"Requested Media Application Profile",RequestedMediaApplicationProfile,LO,VM::N(1));
define_tag!("(2200,000D)",0x2200000D,"Referenced Storage Media Sequence",ReferencedStorageMediaSequence,SQ,VM::N(1));
define_tag!("(2200,000E)",0x2200000E,"Failure Attributes",FailureAttributes,AT,VM::NOrMore(1));
define_tag!("(2200,000F)",0x2200000F,"Allow Lossy Compression",AllowLossyCompression,CS,VM::N(1));
define_tag!("(2200,0020)",0x22000020,"Request Priority",RequestPriority,CS,VM::N(1));
define_tag!("(3002,0002)",0x30020002,"RT Image Label",RTImageLabel,SH,VM::N(1));
define_tag!("(3002,0003)",0x30020003,"RT Image Name",RTImageName,LO,VM::N(1));
define_tag!("(3002,0004)",0x30020004,"RT Image Description",RTImageDescription,ST,VM::N(1));
define_tag!("(3002,000A)",0x3002000A,"Reported Values Origin",ReportedValuesOrigin,CS,VM::N(1));
define_tag!("(3002,000C)",0x3002000C,"RT Image Plane",RTImagePlane,CS,VM::N(1));
define_tag!("(3002,000D)",0x3002000D,"X-Ray Image Receptor Translation",XRayImageReceptorTranslation,DS,VM::N(3));
define_tag!("(3002,000E)",0x3002000E,"X-Ray Image Receptor Angle",XRayImageReceptorAngle,DS,VM::N(1));
define_tag!("(3002,0010)",0x30020010,"RT Image Orientation",RTImageOrientation,DS,VM::N(6));
define_tag!("(3002,0011)",0x30020011,"Image Plane Pixel Spacing",ImagePlanePixelSpacing,DS,VM::N(2));
define_tag!("(3002,0012)",0x30020012,"RT Image Position",RTImagePosition,DS,VM::N(2));
define_tag!("(3002,0020)",0x30020020,"Radiation Machine Name",RadiationMachineName,SH,VM::N(1));
define_tag!("(3002,0022)",0x30020022,"Radiation Machine SAD",RadiationMachineSAD,DS,VM::N(1));
define_tag!("(3002,0024)",0x30020024,"Radiation Machine SSD",RadiationMachineSSD,DS,VM::N(1));
define_tag!("(3002,0026)",0x30020026,"RT Image SID",RTImageSID,DS,VM::N(1));
define_tag!("(3002,0028)",0x30020028,"Source to Reference Object Distance",SourceToReferenceObjectDistance,DS,VM::N(1));
define_tag!("(3002,0029)",0x30020029,"Fraction Number",FractionNumber,IS,VM::N(1));
define_tag!("(3002,0030)",0x30020030,"Exposure Sequence",ExposureSequence,SQ,VM::N(1));
define_tag!("(3002,0032)",0x30020032,"Meterset Exposure",MetersetExposure,DS,VM::N(1));
define_tag!("(3002,0034)",0x30020034,"Diaphragm Position",DiaphragmPosition,DS,VM::N(4));
define_tag!("(3002,0040)",0x30020040,"Fluence Map Sequence",FluenceMapSequence,SQ,VM::N(1));
define_tag!("(3002,0041)",0x30020041,"Fluence Data Source",FluenceDataSource,CS,VM::N(1));
define_tag!("(3002,0042)",0x30020042,"Fluence Data Scale",FluenceDataScale,DS,VM::N(1));
define_tag!("(3002,0050)",0x30020050,"Primary Fluence Mode Sequence",PrimaryFluenceModeSequence,SQ,VM::N(1));
define_tag!("(3002,0051)",0x30020051,"Fluence Mode",FluenceMode,CS,VM::N(1));
define_tag!("(3002,0052)",0x30020052,"Fluence Mode ID",FluenceModeID,SH,VM::N(1));
define_tag!("(3004,0001)",0x30040001,"DVH Type",DVHType,CS,VM::N(1));
define_tag!("(3004,0002)",0x30040002,"Dose Units",DoseUnits,CS,VM::N(1));
define_tag!("(3004,0004)",0x30040004,"Dose Type",DoseType,CS,VM::N(1));
define_tag!("(3004,0005)",0x30040005,"Spatial Transform of Dose",SpatialTransformOfDose,CS,VM::N(1));
define_tag!("(3004,0006)",0x30040006,"Dose Comment",DoseComment,LO,VM::N(1));
define_tag!("(3004,0008)",0x30040008,"Normalization Point",NormalizationPoint,DS,VM::N(3));
define_tag!("(3004,000A)",0x3004000A,"Dose Summation Type",DoseSummationType,CS,VM::N(1));
define_tag!("(3004,000C)",0x3004000C,"Grid Frame Offset Vector",GridFrameOffsetVector,DS,VM::NOrMore(2));
define_tag!("(3004,000E)",0x3004000E,"Dose Grid Scaling",DoseGridScaling,DS,VM::N(1));
define_tag!("(3004,0010)",0x30040010,"RT Dose ROI Sequence",RTDoseROISequence,SQ,VM::N(1));
define_tag!("(3004,0012)",0x30040012,"Dose Value",DoseValue,DS,VM::N(1));
define_tag!("(3004,0014)",0x30040014,"Tissue Heterogeneity Correction",TissueHeterogeneityCorrection,CS,VM::MToN(1,3));
define_tag!("(3004,0040)",0x30040040,"DVH Normalization Point",DVHNormalizationPoint,DS,VM::N(3));
define_tag!("(3004,0042)",0x30040042,"DVH Normalization Dose Value",DVHNormalizationDoseValue,DS,VM::N(1));
define_tag!("(3004,0050)",0x30040050,"DVH Sequence",DVHSequence,SQ,VM::N(1));
define_tag!("(3004,0052)",0x30040052,"DVH Dose Scaling",DVHDoseScaling,DS,VM::N(1));
define_tag!("(3004,0054)",0x30040054,"DVH Volume Units",DVHVolumeUnits,CS,VM::N(1));
define_tag!("(3004,0056)",0x30040056,"DVH Number of Bins",DVHNumberOfBins,IS,VM::N(1));
define_tag!("(3004,0058)",0x30040058,"DVH Data",DVHData,DS,VM::MultipleOfN(2));
define_tag!("(3004,0060)",0x30040060,"DVH Referenced ROI Sequence",DVHReferencedROISequence,SQ,VM::N(1));
define_tag!("(3004,0062)",0x30040062,"DVH ROI Contribution Type",DVHROIContributionType,CS,VM::N(1));
define_tag!("(3004,0070)",0x30040070,"DVH Minimum Dose",DVHMinimumDose,DS,VM::N(1));
define_tag!("(3004,0072)",0x30040072,"DVH Maximum Dose",DVHMaximumDose,DS,VM::N(1));
define_tag!("(3004,0074)",0x30040074,"DVH Mean Dose",DVHMeanDose,DS,VM::N(1));
define_tag!("(3006,0002)",0x30060002,"Structure Set Label",StructureSetLabel,SH,VM::N(1));
define_tag!("(3006,0004)",0x30060004,"Structure Set Name",StructureSetName,LO,VM::N(1));
define_tag!("(3006,0006)",0x30060006,"Structure Set Description",StructureSetDescription,ST,VM::N(1));
define_tag!("(3006,0008)",0x30060008,"Structure Set Date",StructureSetDate,DA,VM::N(1));
define_tag!("(3006,0009)",0x30060009,"Structure Set Time",StructureSetTime,TM,VM::N(1));
define_tag!("(3006,0010)",0x30060010,"Referenced Frame of Reference Sequence",ReferencedFrameOfReferenceSequence,SQ,VM::N(1));
define_tag!("(3006,0012)",0x30060012,"RT Referenced Study Sequence",RTReferencedStudySequence,SQ,VM::N(1));
define_tag!("(3006,0014)",0x30060014,"RT Referenced Series Sequence",RTReferencedSeriesSequence,SQ,VM::N(1));
define_tag!("(3006,0016)",0x30060016,"Contour Image Sequence",ContourImageSequence,SQ,VM::N(1));
define_tag!("(3006,0018)",0x30060018,"Predecessor Structure Set Sequence",PredecessorStructureSetSequence,SQ,VM::N(1));
define_tag!("(3006,0020)",0x30060020,"Structure Set ROI Sequence",StructureSetROISequence,SQ,VM::N(1));
define_tag!("(3006,0022)",0x30060022,"ROI Number",ROINumber,IS,VM::N(1));
define_tag!("(3006,0024)",0x30060024,"Referenced Frame of Reference UID",ReferencedFrameOfReferenceUID,UI,VM::N(1));
define_tag!("(3006,0026)",0x30060026,"ROI Name",ROIName,LO,VM::N(1));
define_tag!("(3006,0028)",0x30060028,"ROI Description",ROIDescription,ST,VM::N(1));
define_tag!("(3006,002A)",0x3006002A,"ROI Display Color",ROIDisplayColor,IS,VM::N(3));
define_tag!("(3006,002C)",0x3006002C,"ROI Volume",ROIVolume,DS,VM::N(1));
define_tag!("(3006,0030)",0x30060030,"RT Related ROI Sequence",RTRelatedROISequence,SQ,VM::N(1));
define_tag!("(3006,0033)",0x30060033,"RT ROI Relationship",RTROIRelationship,CS,VM::N(1));
define_tag!("(3006,0036)",0x30060036,"ROI Generation Algorithm",ROIGenerationAlgorithm,CS,VM::N(1));
define_tag!("(3006,0038)",0x30060038,"ROI Generation Description",ROIGenerationDescription,LO,VM::N(1));
define_tag!("(3006,0039)",0x30060039,"ROI Contour Sequence",ROIContourSequence,SQ,VM::N(1));
define_tag!("(3006,0040)",0x30060040,"Contour Sequence",ContourSequence,SQ,VM::N(1));
define_tag!("(3006,0042)",0x30060042,"Contour Geometric Type",ContourGeometricType,CS,VM::N(1));
define_tag!("(3006,0044)",0x30060044,"Contour Slab Thickness",ContourSlabThickness,DS,VM::N(1));
define_tag!("(3006,0045)",0x30060045,"Contour Offset Vector",ContourOffsetVector,DS,VM::N(3));
define_tag!("(3006,0046)",0x30060046,"Number of Contour Points",NumberOfContourPoints,IS,VM::N(1));
define_tag!("(3006,0048)",0x30060048,"Contour Number",ContourNumber,IS,VM::N(1));
define_tag!("(3006,0049)",0x30060049,"Attached Contours",AttachedContours,IS,VM::NOrMore(1));
define_tag!("(3006,0050)",0x30060050,"Contour Data",ContourData,DS,VM::MultipleOfN(3));
define_tag!("(3006,0080)",0x30060080,"RT ROI Observations Sequence",RTROIObservationsSequence,SQ,VM::N(1));
define_tag!("(3006,0082)",0x30060082,"Observation Number",ObservationNumber,IS,VM::N(1));
define_tag!("(3006,0084)",0x30060084,"Referenced ROI Number",ReferencedROINumber,IS,VM::N(1));
define_tag!("(3006,0085)",0x30060085,"ROI Observation Label",ROIObservationLabel,SH,VM::N(1));
define_tag!("(3006,0086)",0x30060086,"RT ROI Identification Code Sequence",RTROIIdentificationCodeSequence,SQ,VM::N(1));
define_tag!("(3006,0088)",0x30060088,"ROI Observation Description",ROIObservationDescription,ST,VM::N(1));
define_tag!("(3006,00A0)",0x300600A0,"Related RT ROI Observations Sequence",RelatedRTROIObservationsSequence,SQ,VM::N(1));
define_tag!("(3006,00A4)",0x300600A4,"RT ROI Interpreted Type",RTROIInterpretedType,CS,VM::N(1));
define_tag!("(3006,00A6)",0x300600A6,"ROI Interpreter",ROIInterpreter,PN,VM::N(1));
define_tag!("(3006,00B0)",0x300600B0,"ROI Physical Properties Sequence",ROIPhysicalPropertiesSequence,SQ,VM::N(1));
define_tag!("(3006,00B2)",0x300600B2,"ROI Physical Property",ROIPhysicalProperty,CS,VM::N(1));
define_tag!("(3006,00B4)",0x300600B4,"ROI Physical Property Value",ROIPhysicalPropertyValue,DS,VM::N(1));
define_tag!("(3006,00B6)",0x300600B6,"ROI Elemental Composition Sequence",ROIElementalCompositionSequence,SQ,VM::N(1));
define_tag!("(3006,00B7)",0x300600B7,"ROI Elemental Composition Atomic Number",ROIElementalCompositionAtomicNumber,US,VM::N(1));
define_tag!("(3006,00B8)",0x300600B8,"ROI Elemental Composition Atomic Mass Fraction",ROIElementalCompositionAtomicMassFraction,FL,VM::N(1));
define_tag!("(3006,00B9)",0x300600B9,"Additional RT ROI Identification Code Sequence",AdditionalRTROIIdentificationCodeSequence,SQ,VM::N(1));
define_tag!("(3006,00C0)",0x300600C0,"Frame of Reference Relationship Sequence",FrameOfReferenceRelationshipSequence,SQ,VM::N(1));
define_tag!("(3006,00C2)",0x300600C2,"Related Frame of Reference UID",RelatedFrameOfReferenceUID,UI,VM::N(1));
define_tag!("(3006,00C4)",0x300600C4,"Frame of Reference Transformation Type",FrameOfReferenceTransformationType,CS,VM::N(1));
define_tag!("(3006,00C6)",0x300600C6,"Frame of Reference Transformation Matrix",FrameOfReferenceTransformationMatrix,DS,VM::N(16));
define_tag!("(3006,00C8)",0x300600C8,"Frame of Reference Transformation Comment",FrameOfReferenceTransformationComment,LO,VM::N(1));
define_tag!("(3008,0010)",0x30080010,"Measured Dose Reference Sequence",MeasuredDoseReferenceSequence,SQ,VM::N(1));
define_tag!("(3008,0012)",0x30080012,"Measured Dose Description",MeasuredDoseDescription,ST,VM::N(1));
define_tag!("(3008,0014)",0x30080014,"Measured Dose Type",MeasuredDoseType,CS,VM::N(1));
define_tag!("(3008,0016)",0x30080016,"Measured Dose Value",MeasuredDoseValue,DS,VM::N(1));
define_tag!("(3008,0020)",0x30080020,"Treatment Session Beam Sequence",TreatmentSessionBeamSequence,SQ,VM::N(1));
define_tag!("(3008,0021)",0x30080021,"Treatment Session Ion Beam Sequence",TreatmentSessionIonBeamSequence,SQ,VM::N(1));
define_tag!("(3008,0022)",0x30080022,"Current Fraction Number",CurrentFractionNumber,IS,VM::N(1));
define_tag!("(3008,0024)",0x30080024,"Treatment Control Point Date",TreatmentControlPointDate,DA,VM::N(1));
define_tag!("(3008,0025)",0x30080025,"Treatment Control Point Time",TreatmentControlPointTime,TM,VM::N(1));
define_tag!("(3008,002A)",0x3008002A,"Treatment Termination Status",TreatmentTerminationStatus,CS,VM::N(1));
define_tag!("(3008,002B)",0x3008002B,"Treatment Termination Code",TreatmentTerminationCode,SH,VM::N(1));
define_tag!("(3008,002C)",0x3008002C,"Treatment Verification Status",TreatmentVerificationStatus,CS,VM::N(1));
define_tag!("(3008,0030)",0x30080030,"Referenced Treatment Record Sequence",ReferencedTreatmentRecordSequence,SQ,VM::N(1));
define_tag!("(3008,0032)",0x30080032,"Specified Primary Meterset",SpecifiedPrimaryMeterset,DS,VM::N(1));
define_tag!("(3008,0033)",0x30080033,"Specified Secondary Meterset",SpecifiedSecondaryMeterset,DS,VM::N(1));
define_tag!("(3008,0036)",0x30080036,"Delivered Primary Meterset",DeliveredPrimaryMeterset,DS,VM::N(1));
define_tag!("(3008,0037)",0x30080037,"Delivered Secondary Meterset",DeliveredSecondaryMeterset,DS,VM::N(1));
define_tag!("(3008,003A)",0x3008003A,"Specified Treatment Time",SpecifiedTreatmentTime,DS,VM::N(1));
define_tag!("(3008,003B)",0x3008003B,"Delivered Treatment Time",DeliveredTreatmentTime,DS,VM::N(1));
define_tag!("(3008,0040)",0x30080040,"Control Point Delivery Sequence",ControlPointDeliverySequence,SQ,VM::N(1));
define_tag!("(3008,0041)",0x30080041,"Ion Control Point Delivery Sequence",IonControlPointDeliverySequence,SQ,VM::N(1));
define_tag!("(3008,0042)",0x30080042,"Specified Meterset",SpecifiedMeterset,DS,VM::N(1));
define_tag!("(3008,0044)",0x30080044,"Delivered Meterset",DeliveredMeterset,DS,VM::N(1));
define_tag!("(3008,0045)",0x30080045,"Meterset Rate Set",MetersetRateSet,FL,VM::N(1));
define_tag!("(3008,0046)",0x30080046,"Meterset Rate Delivered",MetersetRateDelivered,FL,VM::N(1));
define_tag!("(3008,0047)",0x30080047,"Scan Spot Metersets Delivered",ScanSpotMetersetsDelivered,FL,VM::NOrMore(1));
define_tag!("(3008,0048)",0x30080048,"Dose Rate Delivered",DoseRateDelivered,DS,VM::N(1));
define_tag!("(3008,0050)",0x30080050,"Treatment Summary Calculated Dose Reference Sequence",TreatmentSummaryCalculatedDoseReferenceSequence,SQ,VM::N(1));
define_tag!("(3008,0052)",0x30080052,"Cumulative Dose to Dose Reference",CumulativeDoseToDoseReference,DS,VM::N(1));
define_tag!("(3008,0054)",0x30080054,"First Treatment Date",FirstTreatmentDate,DA,VM::N(1));
define_tag!("(3008,0056)",0x30080056,"Most Recent Treatment Date",MostRecentTreatmentDate,DA,VM::N(1));
define_tag!("(3008,005A)",0x3008005A,"Number of Fractions Delivered",NumberOfFractionsDelivered,IS,VM::N(1));
define_tag!("(3008,0060)",0x30080060,"Override Sequence",OverrideSequence,SQ,VM::N(1));
define_tag!("(3008,0061)",0x30080061,"Parameter Sequence Pointer",ParameterSequencePointer,AT,VM::N(1));
define_tag!("(3008,0062)",0x30080062,"Override Parameter Pointer",OverrideParameterPointer,AT,VM::N(1));
define_tag!("(3008,0063)",0x30080063,"Parameter Item Index",ParameterItemIndex,IS,VM::N(1));
define_tag!("(3008,0064)",0x30080064,"Measured Dose Reference Number",MeasuredDoseReferenceNumber,IS,VM::N(1));
define_tag!("(3008,0065)",0x30080065,"Parameter Pointer",ParameterPointer,AT,VM::N(1));
define_tag!("(3008,0066)",0x30080066,"Override Reason",OverrideReason,ST,VM::N(1));
define_tag!("(3008,0068)",0x30080068,"Corrected Parameter Sequence",CorrectedParameterSequence,SQ,VM::N(1));
define_tag!("(3008,006A)",0x3008006A,"Correction Value",CorrectionValue,FL,VM::N(1));
define_tag!("(3008,0070)",0x30080070,"Calculated Dose Reference Sequence",CalculatedDoseReferenceSequence,SQ,VM::N(1));
define_tag!("(3008,0072)",0x30080072,"Calculated Dose Reference Number",CalculatedDoseReferenceNumber,IS,VM::N(1));
define_tag!("(3008,0074)",0x30080074,"Calculated Dose Reference Description",CalculatedDoseReferenceDescription,ST,VM::N(1));
define_tag!("(3008,0076)",0x30080076,"Calculated Dose Reference Dose Value",CalculatedDoseReferenceDoseValue,DS,VM::N(1));
define_tag!("(3008,0078)",0x30080078,"Start Meterset",StartMeterset,DS,VM::N(1));
define_tag!("(3008,007A)",0x3008007A,"End Meterset",EndMeterset,DS,VM::N(1));
define_tag!("(3008,0080)",0x30080080,"Referenced Measured Dose Reference Sequence",ReferencedMeasuredDoseReferenceSequence,SQ,VM::N(1));
define_tag!("(3008,0082)",0x30080082,"Referenced Measured Dose Reference Number",ReferencedMeasuredDoseReferenceNumber,IS,VM::N(1));
define_tag!("(3008,0090)",0x30080090,"Referenced Calculated Dose Reference Sequence",ReferencedCalculatedDoseReferenceSequence,SQ,VM::N(1));
define_tag!("(3008,0092)",0x30080092,"Referenced Calculated Dose Reference Number",ReferencedCalculatedDoseReferenceNumber,IS,VM::N(1));
define_tag!("(3008,00A0)",0x300800A0,"Beam Limiting Device Leaf Pairs Sequence",BeamLimitingDeviceLeafPairsSequence,SQ,VM::N(1));
define_tag!("(3008,00B0)",0x300800B0,"Recorded Wedge Sequence",RecordedWedgeSequence,SQ,VM::N(1));
define_tag!("(3008,00C0)",0x300800C0,"Recorded Compensator Sequence",RecordedCompensatorSequence,SQ,VM::N(1));
define_tag!("(3008,00D0)",0x300800D0,"Recorded Block Sequence",RecordedBlockSequence,SQ,VM::N(1));
define_tag!("(3008,00E0)",0x300800E0,"Treatment Summary Measured Dose Reference Sequence",TreatmentSummaryMeasuredDoseReferenceSequence,SQ,VM::N(1));
define_tag!("(3008,00F0)",0x300800F0,"Recorded Snout Sequence",RecordedSnoutSequence,SQ,VM::N(1));
define_tag!("(3008,00F2)",0x300800F2,"Recorded Range Shifter Sequence",RecordedRangeShifterSequence,SQ,VM::N(1));
define_tag!("(3008,00F4)",0x300800F4,"Recorded Lateral Spreading Device Sequence",RecordedLateralSpreadingDeviceSequence,SQ,VM::N(1));
define_tag!("(3008,00F6)",0x300800F6,"Recorded Range Modulator Sequence",RecordedRangeModulatorSequence,SQ,VM::N(1));
define_tag!("(3008,0100)",0x30080100,"Recorded Source Sequence",RecordedSourceSequence,SQ,VM::N(1));
define_tag!("(3008,0105)",0x30080105,"Source Serial Number",SourceSerialNumber,LO,VM::N(1));
define_tag!("(3008,0110)",0x30080110,"Treatment Session Application Setup Sequence",TreatmentSessionApplicationSetupSequence,SQ,VM::N(1));
define_tag!("(3008,0116)",0x30080116,"Application Setup Check",ApplicationSetupCheck,CS,VM::N(1));
define_tag!("(3008,0120)",0x30080120,"Recorded Brachy Accessory Device Sequence",RecordedBrachyAccessoryDeviceSequence,SQ,VM::N(1));
define_tag!("(3008,0122)",0x30080122,"Referenced Brachy Accessory Device Number",ReferencedBrachyAccessoryDeviceNumber,IS,VM::N(1));
define_tag!("(3008,0130)",0x30080130,"Recorded Channel Sequence",RecordedChannelSequence,SQ,VM::N(1));
define_tag!("(3008,0132)",0x30080132,"Specified Channel Total Time",SpecifiedChannelTotalTime,DS,VM::N(1));
define_tag!("(3008,0134)",0x30080134,"Delivered Channel Total Time",DeliveredChannelTotalTime,DS,VM::N(1));
define_tag!("(3008,0136)",0x30080136,"Specified Number of Pulses",SpecifiedNumberOfPulses,IS,VM::N(1));
define_tag!("(3008,0138)",0x30080138,"Delivered Number of Pulses",DeliveredNumberOfPulses,IS,VM::N(1));
define_tag!("(3008,013A)",0x3008013A,"Specified Pulse Repetition Interval",SpecifiedPulseRepetitionInterval,DS,VM::N(1));
define_tag!("(3008,013C)",0x3008013C,"Delivered Pulse Repetition Interval",DeliveredPulseRepetitionInterval,DS,VM::N(1));
define_tag!("(3008,0140)",0x30080140,"Recorded Source Applicator Sequence",RecordedSourceApplicatorSequence,SQ,VM::N(1));
define_tag!("(3008,0142)",0x30080142,"Referenced Source Applicator Number",ReferencedSourceApplicatorNumber,IS,VM::N(1));
define_tag!("(3008,0150)",0x30080150,"Recorded Channel Shield Sequence",RecordedChannelShieldSequence,SQ,VM::N(1));
define_tag!("(3008,0152)",0x30080152,"Referenced Channel Shield Number",ReferencedChannelShieldNumber,IS,VM::N(1));
define_tag!("(3008,0160)",0x30080160,"Brachy Control Point Delivered Sequence",BrachyControlPointDeliveredSequence,SQ,VM::N(1));
define_tag!("(3008,0162)",0x30080162,"Safe Position Exit Date",SafePositionExitDate,DA,VM::N(1));
define_tag!("(3008,0164)",0x30080164,"Safe Position Exit Time",SafePositionExitTime,TM,VM::N(1));
define_tag!("(3008,0166)",0x30080166,"Safe Position Return Date",SafePositionReturnDate,DA,VM::N(1));
define_tag!("(3008,0168)",0x30080168,"Safe Position Return Time",SafePositionReturnTime,TM,VM::N(1));
define_tag!("(3008,0171)",0x30080171,"Pulse Specific Brachy Control Point Delivered Sequence",PulseSpecificBrachyControlPointDeliveredSequence,SQ,VM::N(1));
define_tag!("(3008,0172)",0x30080172,"Pulse Number",PulseNumber,US,VM::N(1));
define_tag!("(3008,0173)",0x30080173,"Brachy Pulse Control Point Delivered Sequence",BrachyPulseControlPointDeliveredSequence,SQ,VM::N(1));
define_tag!("(3008,0200)",0x30080200,"Current Treatment Status",CurrentTreatmentStatus,CS,VM::N(1));
define_tag!("(3008,0202)",0x30080202,"Treatment Status Comment",TreatmentStatusComment,ST,VM::N(1));
define_tag!("(3008,0220)",0x30080220,"Fraction Group Summary Sequence",FractionGroupSummarySequence,SQ,VM::N(1));
define_tag!("(3008,0223)",0x30080223,"Referenced Fraction Number",ReferencedFractionNumber,IS,VM::N(1));
define_tag!("(3008,0224)",0x30080224,"Fraction Group Type",FractionGroupType,CS,VM::N(1));
define_tag!("(3008,0230)",0x30080230,"Beam Stopper Position",BeamStopperPosition,CS,VM::N(1));
define_tag!("(3008,0240)",0x30080240,"Fraction Status Summary Sequence",FractionStatusSummarySequence,SQ,VM::N(1));
define_tag!("(3008,0250)",0x30080250,"Treatment Date",TreatmentDate,DA,VM::N(1));
define_tag!("(3008,0251)",0x30080251,"Treatment Time",TreatmentTime,TM,VM::N(1));
define_tag!("(300A,0002)",0x300A0002,"RT Plan Label",RTPlanLabel,SH,VM::N(1));
define_tag!("(300A,0003)",0x300A0003,"RT Plan Name",RTPlanName,LO,VM::N(1));
define_tag!("(300A,0004)",0x300A0004,"RT Plan Description",RTPlanDescription,ST,VM::N(1));
define_tag!("(300A,0006)",0x300A0006,"RT Plan Date",RTPlanDate,DA,VM::N(1));
define_tag!("(300A,0007)",0x300A0007,"RT Plan Time",RTPlanTime,TM,VM::N(1));
define_tag!("(300A,0009)",0x300A0009,"Treatment Protocols",TreatmentProtocols,LO,VM::NOrMore(1));
define_tag!("(300A,000A)",0x300A000A,"Plan Intent",PlanIntent,CS,VM::N(1));
define_tag!("(300A,000B)",0x300A000B,"Treatment Sites",TreatmentSites,LO,VM::NOrMore(1));
define_tag!("(300A,000C)",0x300A000C,"RT Plan Geometry",RTPlanGeometry,CS,VM::N(1));
define_tag!("(300A,000E)",0x300A000E,"Prescription Description",PrescriptionDescription,ST,VM::N(1));
define_tag!("(300A,0010)",0x300A0010,"Dose Reference Sequence",DoseReferenceSequence,SQ,VM::N(1));
define_tag!("(300A,0012)",0x300A0012,"Dose Reference Number",DoseReferenceNumber,IS,VM::N(1));
define_tag!("(300A,0013)",0x300A0013,"Dose Reference UID",DoseReferenceUID,UI,VM::N(1));
define_tag!("(300A,0014)",0x300A0014,"Dose Reference Structure Type",DoseReferenceStructureType,CS,VM::N(1));
define_tag!("(300A,0015)",0x300A0015,"Nominal Beam Energy Unit",NominalBeamEnergyUnit,CS,VM::N(1));
define_tag!("(300A,0016)",0x300A0016,"Dose Reference Description",DoseReferenceDescription,LO,VM::N(1));
define_tag!("(300A,0018)",0x300A0018,"Dose Reference Point Coordinates",DoseReferencePointCoordinates,DS,VM::N(3));
define_tag!("(300A,001A)",0x300A001A,"Nominal Prior Dose",NominalPriorDose,DS,VM::N(1));
define_tag!("(300A,0020)",0x300A0020,"Dose Reference Type",DoseReferenceType,CS,VM::N(1));
define_tag!("(300A,0021)",0x300A0021,"Constraint Weight",ConstraintWeight,DS,VM::N(1));
define_tag!("(300A,0022)",0x300A0022,"Delivery Warning Dose",DeliveryWarningDose,DS,VM::N(1));
define_tag!("(300A,0023)",0x300A0023,"Delivery Maximum Dose",DeliveryMaximumDose,DS,VM::N(1));
define_tag!("(300A,0025)",0x300A0025,"Target Minimum Dose",TargetMinimumDose,DS,VM::N(1));
define_tag!("(300A,0026)",0x300A0026,"Target Prescription Dose",TargetPrescriptionDose,DS,VM::N(1));
define_tag!("(300A,0027)",0x300A0027,"Target Maximum Dose",TargetMaximumDose,DS,VM::N(1));
define_tag!("(300A,0028)",0x300A0028,"Target Underdose Volume Fraction",TargetUnderdoseVolumeFraction,DS,VM::N(1));
define_tag!("(300A,002A)",0x300A002A,"Organ at Risk Full-volume Dose",OrganAtRiskFullVolumeDose,DS,VM::N(1));
define_tag!("(300A,002B)",0x300A002B,"Organ at Risk Limit Dose",OrganAtRiskLimitDose,DS,VM::N(1));
define_tag!("(300A,002C)",0x300A002C,"Organ at Risk Maximum Dose",OrganAtRiskMaximumDose,DS,VM::N(1));
define_tag!("(300A,002D)",0x300A002D,"Organ at Risk Overdose Volume Fraction",OrganAtRiskOverdoseVolumeFraction,DS,VM::N(1));
define_tag!("(300A,0040)",0x300A0040,"Tolerance Table Sequence",ToleranceTableSequence,SQ,VM::N(1));
define_tag!("(300A,0042)",0x300A0042,"Tolerance Table Number",ToleranceTableNumber,IS,VM::N(1));
define_tag!("(300A,0043)",0x300A0043,"Tolerance Table Label",ToleranceTableLabel,SH,VM::N(1));
define_tag!("(300A,0044)",0x300A0044,"Gantry Angle Tolerance",GantryAngleTolerance,DS,VM::N(1));
define_tag!("(300A,0046)",0x300A0046,"Beam Limiting Device Angle Tolerance",BeamLimitingDeviceAngleTolerance,DS,VM::N(1));
define_tag!("(300A,0048)",0x300A0048,"Beam Limiting Device Tolerance Sequence",BeamLimitingDeviceToleranceSequence,SQ,VM::N(1));
define_tag!("(300A,004A)",0x300A004A,"Beam Limiting Device Position Tolerance",BeamLimitingDevicePositionTolerance,DS,VM::N(1));
define_tag!("(300A,004B)",0x300A004B,"Snout Position Tolerance",SnoutPositionTolerance,FL,VM::N(1));
define_tag!("(300A,004C)",0x300A004C,"Patient Support Angle Tolerance",PatientSupportAngleTolerance,DS,VM::N(1));
define_tag!("(300A,004E)",0x300A004E,"Table Top Eccentric Angle Tolerance",TableTopEccentricAngleTolerance,DS,VM::N(1));
define_tag!("(300A,004F)",0x300A004F,"Table Top Pitch Angle Tolerance",TableTopPitchAngleTolerance,FL,VM::N(1));
define_tag!("(300A,0050)",0x300A0050,"Table Top Roll Angle Tolerance",TableTopRollAngleTolerance,FL,VM::N(1));
define_tag!("(300A,0051)",0x300A0051,"Table Top Vertical Position Tolerance",TableTopVerticalPositionTolerance,DS,VM::N(1));
define_tag!("(300A,0052)",0x300A0052,"Table Top Longitudinal Position Tolerance",TableTopLongitudinalPositionTolerance,DS,VM::N(1));
define_tag!("(300A,0053)",0x300A0053,"Table Top Lateral Position Tolerance",TableTopLateralPositionTolerance,DS,VM::N(1));
define_tag!("(300A,0055)",0x300A0055,"RT Plan Relationship",RTPlanRelationship,CS,VM::N(1));
define_tag!("(300A,0070)",0x300A0070,"Fraction Group Sequence",FractionGroupSequence,SQ,VM::N(1));
define_tag!("(300A,0071)",0x300A0071,"Fraction Group Number",FractionGroupNumber,IS,VM::N(1));
define_tag!("(300A,0072)",0x300A0072,"Fraction Group Description",FractionGroupDescription,LO,VM::N(1));
define_tag!("(300A,0078)",0x300A0078,"Number of Fractions Planned",NumberOfFractionsPlanned,IS,VM::N(1));
define_tag!("(300A,0079)",0x300A0079,"Number of Fraction Pattern Digits Per Day",NumberOfFractionPatternDigitsPerDay,IS,VM::N(1));
define_tag!("(300A,007A)",0x300A007A,"Repeat Fraction Cycle Length",RepeatFractionCycleLength,IS,VM::N(1));
define_tag!("(300A,007B)",0x300A007B,"Fraction Pattern",FractionPattern,LT,VM::N(1));
define_tag!("(300A,0080)",0x300A0080,"Number of Beams",NumberOfBeams,IS,VM::N(1));
define_tag!("(300A,0082)",0x300A0082,"Beam Dose Specification Point",BeamDoseSpecificationPoint,DS,VM::N(3));
define_tag!("(300A,0084)",0x300A0084,"Beam Dose",BeamDose,DS,VM::N(1));
define_tag!("(300A,0086)",0x300A0086,"Beam Meterset",BeamMeterset,DS,VM::N(1));
define_tag!("(300A,0088)",0x300A0088,"Beam Dose Point Depth",BeamDosePointDepth,FL,VM::N(1));
define_tag!("(300A,0089)",0x300A0089,"Beam Dose Point Equivalent Depth",BeamDosePointEquivalentDepth,FL,VM::N(1));
define_tag!("(300A,008A)",0x300A008A,"Beam Dose Point SSD",BeamDosePointSSD,FL,VM::N(1));
define_tag!("(300A,008B)",0x300A008B,"Beam Dose Meaning",BeamDoseMeaning,CS,VM::N(1));
define_tag!("(300A,008C)",0x300A008C,"Beam Dose Verification Control Point Sequence",BeamDoseVerificationControlPointSequence,SQ,VM::N(1));
define_tag!("(300A,008D)",0x300A008D,"Average Beam Dose Point Depth",AverageBeamDosePointDepth,FL,VM::N(1));
define_tag!("(300A,008E)",0x300A008E,"Average Beam Dose Point Equivalent Depth",AverageBeamDosePointEquivalentDepth,FL,VM::N(1));
define_tag!("(300A,008F)",0x300A008F,"Average Beam Dose Point SSD",AverageBeamDosePointSSD,FL,VM::N(1));
define_tag!("(300A,0090)",0x300A0090,"Beam Dose Type",BeamDoseType,CS,VM::N(1));
define_tag!("(300A,0091)",0x300A0091,"Alternate Beam Dose",AlternateBeamDose,DS,VM::N(1));
define_tag!("(300A,0092)",0x300A0092,"Alternate Beam Dose Type",AlternateBeamDoseType,CS,VM::N(1));
define_tag!("(300A,00A0)",0x300A00A0,"Number of Brachy Application Setups",NumberOfBrachyApplicationSetups,IS,VM::N(1));
define_tag!("(300A,00A2)",0x300A00A2,"Brachy Application Setup Dose Specification Point",BrachyApplicationSetupDoseSpecificationPoint,DS,VM::N(3));
define_tag!("(300A,00A4)",0x300A00A4,"Brachy Application Setup Dose",BrachyApplicationSetupDose,DS,VM::N(1));
define_tag!("(300A,00B0)",0x300A00B0,"Beam Sequence",BeamSequence,SQ,VM::N(1));
define_tag!("(300A,00B2)",0x300A00B2,"Treatment Machine Name",TreatmentMachineName,SH,VM::N(1));
define_tag!("(300A,00B3)",0x300A00B3,"Primary Dosimeter Unit",PrimaryDosimeterUnit,CS,VM::N(1));
define_tag!("(300A,00B4)",0x300A00B4,"Source-Axis Distance",SourceAxisDistance,DS,VM::N(1));
define_tag!("(300A,00B6)",0x300A00B6,"Beam Limiting Device Sequence",BeamLimitingDeviceSequence,SQ,VM::N(1));
define_tag!("(300A,00B8)",0x300A00B8,"RT Beam Limiting Device Type",RTBeamLimitingDeviceType,CS,VM::N(1));
define_tag!("(300A,00BA)",0x300A00BA,"Source to Beam Limiting Device Distance",SourceToBeamLimitingDeviceDistance,DS,VM::N(1));
define_tag!("(300A,00BB)",0x300A00BB,"Isocenter to Beam Limiting Device Distance",IsocenterToBeamLimitingDeviceDistance,FL,VM::N(1));
define_tag!("(300A,00BC)",0x300A00BC,"Number of Leaf/Jaw Pairs",NumberOfLeafJawPairs,IS,VM::N(1));
define_tag!("(300A,00BE)",0x300A00BE,"Leaf Position Boundaries",LeafPositionBoundaries,DS,VM::NOrMore(3));
define_tag!("(300A,00C0)",0x300A00C0,"Beam Number",BeamNumber,IS,VM::N(1));
define_tag!("(300A,00C2)",0x300A00C2,"Beam Name",BeamName,LO,VM::N(1));
define_tag!("(300A,00C3)",0x300A00C3,"Beam Description",BeamDescription,ST,VM::N(1));
define_tag!("(300A,00C4)",0x300A00C4,"Beam Type",BeamType,CS,VM::N(1));
define_tag!("(300A,00C5)",0x300A00C5,"Beam Delivery Duration Limit",BeamDeliveryDurationLimit,FD,VM::N(1));
define_tag!("(300A,00C6)",0x300A00C6,"Radiation Type",RadiationType,CS,VM::N(1));
define_tag!("(300A,00C7)",0x300A00C7,"High-Dose Technique Type",HighDoseTechniqueType,CS,VM::N(1));
define_tag!("(300A,00C8)",0x300A00C8,"Reference Image Number",ReferenceImageNumber,IS,VM::N(1));
define_tag!("(300A,00CA)",0x300A00CA,"Planned Verification Image Sequence",PlannedVerificationImageSequence,SQ,VM::N(1));
define_tag!("(300A,00CC)",0x300A00CC,"Imaging Device-Specific Acquisition Parameters",ImagingDeviceSpecificAcquisitionParameters,LO,VM::NOrMore(1));
define_tag!("(300A,00CE)",0x300A00CE,"Treatment Delivery Type",TreatmentDeliveryType,CS,VM::N(1));
define_tag!("(300A,00D0)",0x300A00D0,"Number of Wedges",NumberOfWedges,IS,VM::N(1));
define_tag!("(300A,00D1)",0x300A00D1,"Wedge Sequence",WedgeSequence,SQ,VM::N(1));
define_tag!("(300A,00D2)",0x300A00D2,"Wedge Number",WedgeNumber,IS,VM::N(1));
define_tag!("(300A,00D3)",0x300A00D3,"Wedge Type",WedgeType,CS,VM::N(1));
define_tag!("(300A,00D4)",0x300A00D4,"Wedge ID",WedgeID,SH,VM::N(1));
define_tag!("(300A,00D5)",0x300A00D5,"Wedge Angle",WedgeAngle,IS,VM::N(1));
define_tag!("(300A,00D6)",0x300A00D6,"Wedge Factor",WedgeFactor,DS,VM::N(1));
define_tag!("(300A,00D7)",0x300A00D7,"Total Wedge Tray Water-Equivalent Thickness",TotalWedgeTrayWaterEquivalentThickness,FL,VM::N(1));
define_tag!("(300A,00D8)",0x300A00D8,"Wedge Orientation",WedgeOrientation,DS,VM::N(1));
define_tag!("(300A,00D9)",0x300A00D9,"Isocenter to Wedge Tray Distance",IsocenterToWedgeTrayDistance,FL,VM::N(1));
define_tag!("(300A,00DA)",0x300A00DA,"Source to Wedge Tray Distance",SourceToWedgeTrayDistance,DS,VM::N(1));
define_tag!("(300A,00DB)",0x300A00DB,"Wedge Thin Edge Position",WedgeThinEdgePosition,FL,VM::N(1));
define_tag!("(300A,00DC)",0x300A00DC,"Bolus ID",BolusID,SH,VM::N(1));
define_tag!("(300A,00DD)",0x300A00DD,"Bolus Description",BolusDescription,ST,VM::N(1));
define_tag!("(300A,00DE)",0x300A00DE,"Effective Wedge Angle",EffectiveWedgeAngle,DS,VM::N(1));
define_tag!("(300A,00E0)",0x300A00E0,"Number of Compensators",NumberOfCompensators,IS,VM::N(1));
define_tag!("(300A,00E1)",0x300A00E1,"Material ID",MaterialID,SH,VM::N(1));
define_tag!("(300A,00E2)",0x300A00E2,"Total Compensator Tray Factor",TotalCompensatorTrayFactor,DS,VM::N(1));
define_tag!("(300A,00E3)",0x300A00E3,"Compensator Sequence",CompensatorSequence,SQ,VM::N(1));
define_tag!("(300A,00E4)",0x300A00E4,"Compensator Number",CompensatorNumber,IS,VM::N(1));
define_tag!("(300A,00E5)",0x300A00E5,"Compensator ID",CompensatorID,SH,VM::N(1));
define_tag!("(300A,00E6)",0x300A00E6,"Source to Compensator Tray Distance",SourceToCompensatorTrayDistance,DS,VM::N(1));
define_tag!("(300A,00E7)",0x300A00E7,"Compensator Rows",CompensatorRows,IS,VM::N(1));
define_tag!("(300A,00E8)",0x300A00E8,"Compensator Columns",CompensatorColumns,IS,VM::N(1));
define_tag!("(300A,00E9)",0x300A00E9,"Compensator Pixel Spacing",CompensatorPixelSpacing,DS,VM::N(2));
define_tag!("(300A,00EA)",0x300A00EA,"Compensator Position",CompensatorPosition,DS,VM::N(2));
define_tag!("(300A,00EB)",0x300A00EB,"Compensator Transmission Data",CompensatorTransmissionData,DS,VM::NOrMore(1));
define_tag!("(300A,00EC)",0x300A00EC,"Compensator Thickness Data",CompensatorThicknessData,DS,VM::NOrMore(1));
define_tag!("(300A,00ED)",0x300A00ED,"Number of Boli",NumberOfBoli,IS,VM::N(1));
define_tag!("(300A,00EE)",0x300A00EE,"Compensator Type",CompensatorType,CS,VM::N(1));
define_tag!("(300A,00EF)",0x300A00EF,"Compensator Tray ID",CompensatorTrayID,SH,VM::N(1));
define_tag!("(300A,00F0)",0x300A00F0,"Number of Blocks",NumberOfBlocks,IS,VM::N(1));
define_tag!("(300A,00F2)",0x300A00F2,"Total Block Tray Factor",TotalBlockTrayFactor,DS,VM::N(1));
define_tag!("(300A,00F3)",0x300A00F3,"Total Block Tray Water-Equivalent Thickness",TotalBlockTrayWaterEquivalentThickness,FL,VM::N(1));
define_tag!("(300A,00F4)",0x300A00F4,"Block Sequence",BlockSequence,SQ,VM::N(1));
define_tag!("(300A,00F5)",0x300A00F5,"Block Tray ID",BlockTrayID,SH,VM::N(1));
define_tag!("(300A,00F6)",0x300A00F6,"Source to Block Tray Distance",SourceToBlockTrayDistance,DS,VM::N(1));
define_tag!("(300A,00F7)",0x300A00F7,"Isocenter to Block Tray Distance",IsocenterToBlockTrayDistance,FL,VM::N(1));
define_tag!("(300A,00F8)",0x300A00F8,"Block Type",BlockType,CS,VM::N(1));
define_tag!("(300A,00F9)",0x300A00F9,"Accessory Code",AccessoryCode,LO,VM::N(1));
define_tag!("(300A,00FA)",0x300A00FA,"Block Divergence",BlockDivergence,CS,VM::N(1));
define_tag!("(300A,00FB)",0x300A00FB,"Block Mounting Position",BlockMountingPosition,CS,VM::N(1));
define_tag!("(300A,00FC)",0x300A00FC,"Block Number",BlockNumber,IS,VM::N(1));
define_tag!("(300A,00FE)",0x300A00FE,"Block Name",BlockName,LO,VM::N(1));
define_tag!("(300A,0100)",0x300A0100,"Block Thickness",BlockThickness,DS,VM::N(1));
define_tag!("(300A,0102)",0x300A0102,"Block Transmission",BlockTransmission,DS,VM::N(1));
define_tag!("(300A,0104)",0x300A0104,"Block Number of Points",BlockNumberOfPoints,IS,VM::N(1));
define_tag!("(300A,0106)",0x300A0106,"Block Data",BlockData,DS,VM::MultipleOfN(2));
define_tag!("(300A,0107)",0x300A0107,"Applicator Sequence",ApplicatorSequence,SQ,VM::N(1));
define_tag!("(300A,0108)",0x300A0108,"Applicator ID",ApplicatorID,SH,VM::N(1));
define_tag!("(300A,0109)",0x300A0109,"Applicator Type",ApplicatorType,CS,VM::N(1));
define_tag!("(300A,010A)",0x300A010A,"Applicator Description",ApplicatorDescription,LO,VM::N(1));
define_tag!("(300A,010C)",0x300A010C,"Cumulative Dose Reference Coefficient",CumulativeDoseReferenceCoefficient,DS,VM::N(1));
define_tag!("(300A,010E)",0x300A010E,"Final Cumulative Meterset Weight",FinalCumulativeMetersetWeight,DS,VM::N(1));
define_tag!("(300A,0110)",0x300A0110,"Number of Control Points",NumberOfControlPoints,IS,VM::N(1));
define_tag!("(300A,0111)",0x300A0111,"Control Point Sequence",ControlPointSequence,SQ,VM::N(1));
define_tag!("(300A,0112)",0x300A0112,"Control Point Index",ControlPointIndex,IS,VM::N(1));
define_tag!("(300A,0114)",0x300A0114,"Nominal Beam Energy",NominalBeamEnergy,DS,VM::N(1));
define_tag!("(300A,0115)",0x300A0115,"Dose Rate Set",DoseRateSet,DS,VM::N(1));
define_tag!("(300A,0116)",0x300A0116,"Wedge Position Sequence",WedgePositionSequence,SQ,VM::N(1));
define_tag!("(300A,0118)",0x300A0118,"Wedge Position",WedgePosition,CS,VM::N(1));
define_tag!("(300A,011A)",0x300A011A,"Beam Limiting Device Position Sequence",BeamLimitingDevicePositionSequence,SQ,VM::N(1));
define_tag!("(300A,011C)",0x300A011C,"Leaf/Jaw Positions",LeafJawPositions,DS,VM::MultipleOfN(2));
define_tag!("(300A,011E)",0x300A011E,"Gantry Angle",GantryAngle,DS,VM::N(1));
define_tag!("(300A,011F)",0x300A011F,"Gantry Rotation Direction",GantryRotationDirection,CS,VM::N(1));
define_tag!("(300A,0120)",0x300A0120,"Beam Limiting Device Angle",BeamLimitingDeviceAngle,DS,VM::N(1));
define_tag!("(300A,0121)",0x300A0121,"Beam Limiting Device Rotation Direction",BeamLimitingDeviceRotationDirection,CS,VM::N(1));
define_tag!("(300A,0122)",0x300A0122,"Patient Support Angle",PatientSupportAngle,DS,VM::N(1));
define_tag!("(300A,0123)",0x300A0123,"Patient Support Rotation Direction",PatientSupportRotationDirection,CS,VM::N(1));
define_tag!("(300A,0124)",0x300A0124,"Table Top Eccentric Axis Distance",TableTopEccentricAxisDistance,DS,VM::N(1));
define_tag!("(300A,0125)",0x300A0125,"Table Top Eccentric Angle",TableTopEccentricAngle,DS,VM::N(1));
define_tag!("(300A,0126)",0x300A0126,"Table Top Eccentric Rotation Direction",TableTopEccentricRotationDirection,CS,VM::N(1));
define_tag!("(300A,0128)",0x300A0128,"Table Top Vertical Position",TableTopVerticalPosition,DS,VM::N(1));
define_tag!("(300A,0129)",0x300A0129,"Table Top Longitudinal Position",TableTopLongitudinalPosition,DS,VM::N(1));
define_tag!("(300A,012A)",0x300A012A,"Table Top Lateral Position",TableTopLateralPosition,DS,VM::N(1));
define_tag!("(300A,012C)",0x300A012C,"Isocenter Position",IsocenterPosition,DS,VM::N(3));
define_tag!("(300A,012E)",0x300A012E,"Surface Entry Point",SurfaceEntryPoint,DS,VM::N(3));
define_tag!("(300A,0130)",0x300A0130,"Source to Surface Distance",SourceToSurfaceDistance,DS,VM::N(1));
define_tag!("(300A,0131)",0x300A0131,"Average Beam Dose Point Source to External Contour Distance",AverageBeamDosePointSourceToExternalContourDistance,FL,VM::N(1));
define_tag!("(300A,0132)",0x300A0132,"Source to External Contour Distance",SourceToExternalContourDistance,FL,VM::N(1));
define_tag!("(300A,0133)",0x300A0133,"External Contour Entry Point",ExternalContourEntryPoint,FL,VM::N(3));
define_tag!("(300A,0134)",0x300A0134,"Cumulative Meterset Weight",CumulativeMetersetWeight,DS,VM::N(1));
define_tag!("(300A,0140)",0x300A0140,"Table Top Pitch Angle",TableTopPitchAngle,FL,VM::N(1));
define_tag!("(300A,0142)",0x300A0142,"Table Top Pitch Rotation Direction",TableTopPitchRotationDirection,CS,VM::N(1));
define_tag!("(300A,0144)",0x300A0144,"Table Top Roll Angle",TableTopRollAngle,FL,VM::N(1));
define_tag!("(300A,0146)",0x300A0146,"Table Top Roll Rotation Direction",TableTopRollRotationDirection,CS,VM::N(1));
define_tag!("(300A,0148)",0x300A0148,"Head Fixation Angle",HeadFixationAngle,FL,VM::N(1));
define_tag!("(300A,014A)",0x300A014A,"Gantry Pitch Angle",GantryPitchAngle,FL,VM::N(1));
define_tag!("(300A,014C)",0x300A014C,"Gantry Pitch Rotation Direction",GantryPitchRotationDirection,CS,VM::N(1));
define_tag!("(300A,014E)",0x300A014E,"Gantry Pitch Angle Tolerance",GantryPitchAngleTolerance,FL,VM::N(1));
define_tag!("(300A,0150)",0x300A0150,"Fixation Eye",FixationEye,CS,VM::N(1));
define_tag!("(300A,0151)",0x300A0151,"Chair Head Frame Position",ChairHeadFramePosition,DS,VM::N(1));
define_tag!("(300A,0152)",0x300A0152,"Head Fixation Angle Tolerance",HeadFixationAngleTolerance,DS,VM::N(1));
define_tag!("(300A,0153)",0x300A0153,"Chair Head Frame Position Tolerance",ChairHeadFramePositionTolerance,DS,VM::N(1));
define_tag!("(300A,0154)",0x300A0154,"Fixation Light Azimuthal Angle Tolerance",FixationLightAzimuthalAngleTolerance,DS,VM::N(1));
define_tag!("(300A,0155)",0x300A0155,"Fixation Light Polar Angle Tolerance",FixationLightPolarAngleTolerance,DS,VM::N(1));
define_tag!("(300A,0180)",0x300A0180,"Patient Setup Sequence",PatientSetupSequence,SQ,VM::N(1));
define_tag!("(300A,0182)",0x300A0182,"Patient Setup Number",PatientSetupNumber,IS,VM::N(1));
define_tag!("(300A,0183)",0x300A0183,"Patient Setup Label",PatientSetupLabel,LO,VM::N(1));
define_tag!("(300A,0184)",0x300A0184,"Patient Additional Position",PatientAdditionalPosition,LO,VM::N(1));
define_tag!("(300A,0190)",0x300A0190,"Fixation Device Sequence",FixationDeviceSequence,SQ,VM::N(1));
define_tag!("(300A,0192)",0x300A0192,"Fixation Device Type",FixationDeviceType,CS,VM::N(1));
define_tag!("(300A,0194)",0x300A0194,"Fixation Device Label",FixationDeviceLabel,SH,VM::N(1));
define_tag!("(300A,0196)",0x300A0196,"Fixation Device Description",FixationDeviceDescription,ST,VM::N(1));
define_tag!("(300A,0198)",0x300A0198,"Fixation Device Position",FixationDevicePosition,SH,VM::N(1));
define_tag!("(300A,0199)",0x300A0199,"Fixation Device Pitch Angle",FixationDevicePitchAngle,FL,VM::N(1));
define_tag!("(300A,019A)",0x300A019A,"Fixation Device Roll Angle",FixationDeviceRollAngle,FL,VM::N(1));
define_tag!("(300A,01A0)",0x300A01A0,"Shielding Device Sequence",ShieldingDeviceSequence,SQ,VM::N(1));
define_tag!("(300A,01A2)",0x300A01A2,"Shielding Device Type",ShieldingDeviceType,CS,VM::N(1));
define_tag!("(300A,01A4)",0x300A01A4,"Shielding Device Label",ShieldingDeviceLabel,SH,VM::N(1));
define_tag!("(300A,01A6)",0x300A01A6,"Shielding Device Description",ShieldingDeviceDescription,ST,VM::N(1));
define_tag!("(300A,01A8)",0x300A01A8,"Shielding Device Position",ShieldingDevicePosition,SH,VM::N(1));
define_tag!("(300A,01B0)",0x300A01B0,"Setup Technique",SetupTechnique,CS,VM::N(1));
define_tag!("(300A,01B2)",0x300A01B2,"Setup Technique Description",SetupTechniqueDescription,ST,VM::N(1));
define_tag!("(300A,01B4)",0x300A01B4,"Setup Device Sequence",SetupDeviceSequence,SQ,VM::N(1));
define_tag!("(300A,01B6)",0x300A01B6,"Setup Device Type",SetupDeviceType,CS,VM::N(1));
define_tag!("(300A,01B8)",0x300A01B8,"Setup Device Label",SetupDeviceLabel,SH,VM::N(1));
define_tag!("(300A,01BA)",0x300A01BA,"Setup Device Description",SetupDeviceDescription,ST,VM::N(1));
define_tag!("(300A,01BC)",0x300A01BC,"Setup Device Parameter",SetupDeviceParameter,DS,VM::N(1));
define_tag!("(300A,01D0)",0x300A01D0,"Setup Reference Description",SetupReferenceDescription,ST,VM::N(1));
define_tag!("(300A,01D2)",0x300A01D2,"Table Top Vertical Setup Displacement",TableTopVerticalSetupDisplacement,DS,VM::N(1));
define_tag!("(300A,01D4)",0x300A01D4,"Table Top Longitudinal Setup Displacement",TableTopLongitudinalSetupDisplacement,DS,VM::N(1));
define_tag!("(300A,01D6)",0x300A01D6,"Table Top Lateral Setup Displacement",TableTopLateralSetupDisplacement,DS,VM::N(1));
define_tag!("(300A,0200)",0x300A0200,"Brachy Treatment Technique",BrachyTreatmentTechnique,CS,VM::N(1));
define_tag!("(300A,0202)",0x300A0202,"Brachy Treatment Type",BrachyTreatmentType,CS,VM::N(1));
define_tag!("(300A,0206)",0x300A0206,"Treatment Machine Sequence",TreatmentMachineSequence,SQ,VM::N(1));
define_tag!("(300A,0210)",0x300A0210,"Source Sequence",SourceSequence,SQ,VM::N(1));
define_tag!("(300A,0212)",0x300A0212,"Source Number",SourceNumber,IS,VM::N(1));
define_tag!("(300A,0214)",0x300A0214,"Source Type",SourceType,CS,VM::N(1));
define_tag!("(300A,0216)",0x300A0216,"Source Manufacturer",SourceManufacturer,LO,VM::N(1));
define_tag!("(300A,0218)",0x300A0218,"Active Source Diameter",ActiveSourceDiameter,DS,VM::N(1));
define_tag!("(300A,021A)",0x300A021A,"Active Source Length",ActiveSourceLength,DS,VM::N(1));
define_tag!("(300A,021B)",0x300A021B,"Source Model ID",SourceModelID,SH,VM::N(1));
define_tag!("(300A,021C)",0x300A021C,"Source Description",SourceDescription,LO,VM::N(1));
define_tag!("(300A,0222)",0x300A0222,"Source Encapsulation Nominal Thickness",SourceEncapsulationNominalThickness,DS,VM::N(1));
define_tag!("(300A,0224)",0x300A0224,"Source Encapsulation Nominal Transmission",SourceEncapsulationNominalTransmission,DS,VM::N(1));
define_tag!("(300A,0226)",0x300A0226,"Source Isotope Name",SourceIsotopeName,LO,VM::N(1));
define_tag!("(300A,0228)",0x300A0228,"Source Isotope Half Life",SourceIsotopeHalfLife,DS,VM::N(1));
define_tag!("(300A,0229)",0x300A0229,"Source Strength Units",SourceStrengthUnits,CS,VM::N(1));
define_tag!("(300A,022A)",0x300A022A,"Reference Air Kerma Rate",ReferenceAirKermaRate,DS,VM::N(1));
define_tag!("(300A,022B)",0x300A022B,"Source Strength",SourceStrength,DS,VM::N(1));
define_tag!("(300A,022C)",0x300A022C,"Source Strength Reference Date",SourceStrengthReferenceDate,DA,VM::N(1));
define_tag!("(300A,022E)",0x300A022E,"Source Strength Reference Time",SourceStrengthReferenceTime,TM,VM::N(1));
define_tag!("(300A,0230)",0x300A0230,"Application Setup Sequence",ApplicationSetupSequence,SQ,VM::N(1));
define_tag!("(300A,0232)",0x300A0232,"Application Setup Type",ApplicationSetupType,CS,VM::N(1));
define_tag!("(300A,0234)",0x300A0234,"Application Setup Number",ApplicationSetupNumber,IS,VM::N(1));
define_tag!("(300A,0236)",0x300A0236,"Application Setup Name",ApplicationSetupName,LO,VM::N(1));
define_tag!("(300A,0238)",0x300A0238,"Application Setup Manufacturer",ApplicationSetupManufacturer,LO,VM::N(1));
define_tag!("(300A,0240)",0x300A0240,"Template Number",TemplateNumber,IS,VM::N(1));
define_tag!("(300A,0242)",0x300A0242,"Template Type",TemplateType,SH,VM::N(1));
define_tag!("(300A,0244)",0x300A0244,"Template Name",TemplateName,LO,VM::N(1));
define_tag!("(300A,0250)",0x300A0250,"Total Reference Air Kerma",TotalReferenceAirKerma,DS,VM::N(1));
define_tag!("(300A,0260)",0x300A0260,"Brachy Accessory Device Sequence",BrachyAccessoryDeviceSequence,SQ,VM::N(1));
define_tag!("(300A,0262)",0x300A0262,"Brachy Accessory Device Number",BrachyAccessoryDeviceNumber,IS,VM::N(1));
define_tag!("(300A,0263)",0x300A0263,"Brachy Accessory Device ID",BrachyAccessoryDeviceID,SH,VM::N(1));
define_tag!("(300A,0264)",0x300A0264,"Brachy Accessory Device Type",BrachyAccessoryDeviceType,CS,VM::N(1));
define_tag!("(300A,0266)",0x300A0266,"Brachy Accessory Device Name",BrachyAccessoryDeviceName,LO,VM::N(1));
define_tag!("(300A,026A)",0x300A026A,"Brachy Accessory Device Nominal Thickness",BrachyAccessoryDeviceNominalThickness,DS,VM::N(1));
define_tag!("(300A,026C)",0x300A026C,"Brachy Accessory Device Nominal Transmission",BrachyAccessoryDeviceNominalTransmission,DS,VM::N(1));
define_tag!("(300A,0280)",0x300A0280,"Channel Sequence",ChannelSequence,SQ,VM::N(1));
define_tag!("(300A,0282)",0x300A0282,"Channel Number",ChannelNumber,IS,VM::N(1));
define_tag!("(300A,0284)",0x300A0284,"Channel Length",ChannelLength,DS,VM::N(1));
define_tag!("(300A,0286)",0x300A0286,"Channel Total Time",ChannelTotalTime,DS,VM::N(1));
define_tag!("(300A,0288)",0x300A0288,"Source Movement Type",SourceMovementType,CS,VM::N(1));
define_tag!("(300A,028A)",0x300A028A,"Number of Pulses",NumberOfPulses,IS,VM::N(1));
define_tag!("(300A,028C)",0x300A028C,"Pulse Repetition Interval",PulseRepetitionInterval,DS,VM::N(1));
define_tag!("(300A,0290)",0x300A0290,"Source Applicator Number",SourceApplicatorNumber,IS,VM::N(1));
define_tag!("(300A,0291)",0x300A0291,"Source Applicator ID",SourceApplicatorID,SH,VM::N(1));
define_tag!("(300A,0292)",0x300A0292,"Source Applicator Type",SourceApplicatorType,CS,VM::N(1));
define_tag!("(300A,0294)",0x300A0294,"Source Applicator Name",SourceApplicatorName,LO,VM::N(1));
define_tag!("(300A,0296)",0x300A0296,"Source Applicator Length",SourceApplicatorLength,DS,VM::N(1));
define_tag!("(300A,0298)",0x300A0298,"Source Applicator Manufacturer",SourceApplicatorManufacturer,LO,VM::N(1));
define_tag!("(300A,029C)",0x300A029C,"Source Applicator Wall Nominal Thickness",SourceApplicatorWallNominalThickness,DS,VM::N(1));
define_tag!("(300A,029E)",0x300A029E,"Source Applicator Wall Nominal Transmission",SourceApplicatorWallNominalTransmission,DS,VM::N(1));
define_tag!("(300A,02A0)",0x300A02A0,"Source Applicator Step Size",SourceApplicatorStepSize,DS,VM::N(1));
define_tag!("(300A,02A2)",0x300A02A2,"Transfer Tube Number",TransferTubeNumber,IS,VM::N(1));
define_tag!("(300A,02A4)",0x300A02A4,"Transfer Tube Length",TransferTubeLength,DS,VM::N(1));
define_tag!("(300A,02B0)",0x300A02B0,"Channel Shield Sequence",ChannelShieldSequence,SQ,VM::N(1));
define_tag!("(300A,02B2)",0x300A02B2,"Channel Shield Number",ChannelShieldNumber,IS,VM::N(1));
define_tag!("(300A,02B3)",0x300A02B3,"Channel Shield ID",ChannelShieldID,SH,VM::N(1));
define_tag!("(300A,02B4)",0x300A02B4,"Channel Shield Name",ChannelShieldName,LO,VM::N(1));
define_tag!("(300A,02B8)",0x300A02B8,"Channel Shield Nominal Thickness",ChannelShieldNominalThickness,DS,VM::N(1));
define_tag!("(300A,02BA)",0x300A02BA,"Channel Shield Nominal Transmission",ChannelShieldNominalTransmission,DS,VM::N(1));
define_tag!("(300A,02C8)",0x300A02C8,"Final Cumulative Time Weight",FinalCumulativeTimeWeight,DS,VM::N(1));
define_tag!("(300A,02D0)",0x300A02D0,"Brachy Control Point Sequence",BrachyControlPointSequence,SQ,VM::N(1));
define_tag!("(300A,02D2)",0x300A02D2,"Control Point Relative Position",ControlPointRelativePosition,DS,VM::N(1));
define_tag!("(300A,02D4)",0x300A02D4,"Control Point 3D Position",ControlPoint3DPosition,DS,VM::N(3));
define_tag!("(300A,02D6)",0x300A02D6,"Cumulative Time Weight",CumulativeTimeWeight,DS,VM::N(1));
define_tag!("(300A,02E0)",0x300A02E0,"Compensator Divergence",CompensatorDivergence,CS,VM::N(1));
define_tag!("(300A,02E1)",0x300A02E1,"Compensator Mounting Position",CompensatorMountingPosition,CS,VM::N(1));
define_tag!("(300A,02E2)",0x300A02E2,"Source to Compensator Distance",SourceToCompensatorDistance,DS,VM::NOrMore(1));
define_tag!("(300A,02E3)",0x300A02E3,"Total Compensator Tray Water-Equivalent Thickness",TotalCompensatorTrayWaterEquivalentThickness,FL,VM::N(1));
define_tag!("(300A,02E4)",0x300A02E4,"Isocenter to Compensator Tray Distance",IsocenterToCompensatorTrayDistance,FL,VM::N(1));
define_tag!("(300A,02E5)",0x300A02E5,"Compensator Column Offset",CompensatorColumnOffset,FL,VM::N(1));
define_tag!("(300A,02E6)",0x300A02E6,"Isocenter to Compensator Distances",IsocenterToCompensatorDistances,FL,VM::NOrMore(1));
define_tag!("(300A,02E7)",0x300A02E7,"Compensator Relative Stopping Power Ratio",CompensatorRelativeStoppingPowerRatio,FL,VM::N(1));
define_tag!("(300A,02E8)",0x300A02E8,"Compensator Milling Tool Diameter",CompensatorMillingToolDiameter,FL,VM::N(1));
define_tag!("(300A,02EA)",0x300A02EA,"Ion Range Compensator Sequence",IonRangeCompensatorSequence,SQ,VM::N(1));
define_tag!("(300A,02EB)",0x300A02EB,"Compensator Description",CompensatorDescription,LT,VM::N(1));
define_tag!("(300A,0302)",0x300A0302,"Radiation Mass Number",RadiationMassNumber,IS,VM::N(1));
define_tag!("(300A,0304)",0x300A0304,"Radiation Atomic Number",RadiationAtomicNumber,IS,VM::N(1));
define_tag!("(300A,0306)",0x300A0306,"Radiation Charge State",RadiationChargeState,SS,VM::N(1));
define_tag!("(300A,0308)",0x300A0308,"Scan Mode",ScanMode,CS,VM::N(1));
define_tag!("(300A,0309)",0x300A0309,"Modulated Scan Mode Type",ModulatedScanModeType,CS,VM::N(1));
define_tag!("(300A,030A)",0x300A030A,"Virtual Source-Axis Distances",VirtualSourceAxisDistances,FL,VM::N(2));
define_tag!("(300A,030C)",0x300A030C,"Snout Sequence",SnoutSequence,SQ,VM::N(1));
define_tag!("(300A,030D)",0x300A030D,"Snout Position",SnoutPosition,FL,VM::N(1));
define_tag!("(300A,030F)",0x300A030F,"Snout ID",SnoutID,SH,VM::N(1));
define_tag!("(300A,0312)",0x300A0312,"Number of Range Shifters",NumberOfRangeShifters,IS,VM::N(1));
define_tag!("(300A,0314)",0x300A0314,"Range Shifter Sequence",RangeShifterSequence,SQ,VM::N(1));
define_tag!("(300A,0316)",0x300A0316,"Range Shifter Number",RangeShifterNumber,IS,VM::N(1));
define_tag!("(300A,0318)",0x300A0318,"Range Shifter ID",RangeShifterID,SH,VM::N(1));
define_tag!("(300A,0320)",0x300A0320,"Range Shifter Type",RangeShifterType,CS,VM::N(1));
define_tag!("(300A,0322)",0x300A0322,"Range Shifter Description",RangeShifterDescription,LO,VM::N(1));
define_tag!("(300A,0330)",0x300A0330,"Number of Lateral Spreading Devices",NumberOfLateralSpreadingDevices,IS,VM::N(1));
define_tag!("(300A,0332)",0x300A0332,"Lateral Spreading Device Sequence",LateralSpreadingDeviceSequence,SQ,VM::N(1));
define_tag!("(300A,0334)",0x300A0334,"Lateral Spreading Device Number",LateralSpreadingDeviceNumber,IS,VM::N(1));
define_tag!("(300A,0336)",0x300A0336,"Lateral Spreading Device ID",LateralSpreadingDeviceID,SH,VM::N(1));
define_tag!("(300A,0338)",0x300A0338,"Lateral Spreading Device Type",LateralSpreadingDeviceType,CS,VM::N(1));
define_tag!("(300A,033A)",0x300A033A,"Lateral Spreading Device Description",LateralSpreadingDeviceDescription,LO,VM::N(1));
define_tag!("(300A,033C)",0x300A033C,"Lateral Spreading Device Water Equivalent Thickness",LateralSpreadingDeviceWaterEquivalentThickness,FL,VM::N(1));
define_tag!("(300A,0340)",0x300A0340,"Number of Range Modulators",NumberOfRangeModulators,IS,VM::N(1));
define_tag!("(300A,0342)",0x300A0342,"Range Modulator Sequence",RangeModulatorSequence,SQ,VM::N(1));
define_tag!("(300A,0344)",0x300A0344,"Range Modulator Number",RangeModulatorNumber,IS,VM::N(1));
define_tag!("(300A,0346)",0x300A0346,"Range Modulator ID",RangeModulatorID,SH,VM::N(1));
define_tag!("(300A,0348)",0x300A0348,"Range Modulator Type",RangeModulatorType,CS,VM::N(1));
define_tag!("(300A,034A)",0x300A034A,"Range Modulator Description",RangeModulatorDescription,LO,VM::N(1));
define_tag!("(300A,034C)",0x300A034C,"Beam Current Modulation ID",BeamCurrentModulationID,SH,VM::N(1));
define_tag!("(300A,0350)",0x300A0350,"Patient Support Type",PatientSupportType,CS,VM::N(1));
define_tag!("(300A,0352)",0x300A0352,"Patient Support ID",PatientSupportID,SH,VM::N(1));
define_tag!("(300A,0354)",0x300A0354,"Patient Support Accessory Code",PatientSupportAccessoryCode,LO,VM::N(1));
define_tag!("(300A,0355)",0x300A0355,"Tray Accessory Code",TrayAccessoryCode,LO,VM::N(1));
define_tag!("(300A,0356)",0x300A0356,"Fixation Light Azimuthal Angle",FixationLightAzimuthalAngle,FL,VM::N(1));
define_tag!("(300A,0358)",0x300A0358,"Fixation Light Polar Angle",FixationLightPolarAngle,FL,VM::N(1));
define_tag!("(300A,035A)",0x300A035A,"Meterset Rate",MetersetRate,FL,VM::N(1));
define_tag!("(300A,0360)",0x300A0360,"Range Shifter Settings Sequence",RangeShifterSettingsSequence,SQ,VM::N(1));
define_tag!("(300A,0362)",0x300A0362,"Range Shifter Setting",RangeShifterSetting,LO,VM::N(1));
define_tag!("(300A,0364)",0x300A0364,"Isocenter to Range Shifter Distance",IsocenterToRangeShifterDistance,FL,VM::N(1));
define_tag!("(300A,0366)",0x300A0366,"Range Shifter Water Equivalent Thickness",RangeShifterWaterEquivalentThickness,FL,VM::N(1));
define_tag!("(300A,0370)",0x300A0370,"Lateral Spreading Device Settings Sequence",LateralSpreadingDeviceSettingsSequence,SQ,VM::N(1));
define_tag!("(300A,0372)",0x300A0372,"Lateral Spreading Device Setting",LateralSpreadingDeviceSetting,LO,VM::N(1));
define_tag!("(300A,0374)",0x300A0374,"Isocenter to Lateral Spreading Device Distance",IsocenterToLateralSpreadingDeviceDistance,FL,VM::N(1));
define_tag!("(300A,0380)",0x300A0380,"Range Modulator Settings Sequence",RangeModulatorSettingsSequence,SQ,VM::N(1));
define_tag!("(300A,0382)",0x300A0382,"Range Modulator Gating Start Value",RangeModulatorGatingStartValue,FL,VM::N(1));
define_tag!("(300A,0384)",0x300A0384,"Range Modulator Gating Stop Value",RangeModulatorGatingStopValue,FL,VM::N(1));
define_tag!("(300A,0386)",0x300A0386,"Range Modulator Gating Start Water Equivalent Thickness",RangeModulatorGatingStartWaterEquivalentThickness,FL,VM::N(1));
define_tag!("(300A,0388)",0x300A0388,"Range Modulator Gating Stop Water Equivalent Thickness",RangeModulatorGatingStopWaterEquivalentThickness,FL,VM::N(1));
define_tag!("(300A,038A)",0x300A038A,"Isocenter to Range Modulator Distance",IsocenterToRangeModulatorDistance,FL,VM::N(1));
define_tag!("(300A,0390)",0x300A0390,"Scan Spot Tune ID",ScanSpotTuneID,SH,VM::N(1));
define_tag!("(300A,0391)",0x300A0391,"Scan Spot Prescribed Indices",ScanSpotPrescribedIndices,IS,VM::NOrMore(1));
define_tag!("(300A,0392)",0x300A0392,"Number of Scan Spot Positions",NumberOfScanSpotPositions,IS,VM::N(1));
define_tag!("(300A,0393)",0x300A0393,"Scan Spot Reordered",ScanSpotReordered,CS,VM::N(1));
define_tag!("(300A,0394)",0x300A0394,"Scan Spot Position Map",ScanSpotPositionMap,FL,VM::NOrMore(1));
define_tag!("(300A,0395)",0x300A0395,"Scan Spot Reordering Allowed",ScanSpotReorderingAllowed,CS,VM::N(1));
define_tag!("(300A,0396)",0x300A0396,"Scan Spot Meterset Weights",ScanSpotMetersetWeights,FL,VM::NOrMore(1));
define_tag!("(300A,0398)",0x300A0398,"Scanning Spot Size",ScanningSpotSize,FL,VM::N(2));
define_tag!("(300A,039A)",0x300A039A,"Number of Paintings",NumberOfPaintings,IS,VM::N(1));
define_tag!("(300A,03A0)",0x300A03A0,"Ion Tolerance Table Sequence",IonToleranceTableSequence,SQ,VM::N(1));
define_tag!("(300A,03A2)",0x300A03A2,"Ion Beam Sequence",IonBeamSequence,SQ,VM::N(1));
define_tag!("(300A,03A4)",0x300A03A4,"Ion Beam Limiting Device Sequence",IonBeamLimitingDeviceSequence,SQ,VM::N(1));
define_tag!("(300A,03A6)",0x300A03A6,"Ion Block Sequence",IonBlockSequence,SQ,VM::N(1));
define_tag!("(300A,03A8)",0x300A03A8,"Ion Control Point Sequence",IonControlPointSequence,SQ,VM::N(1));
define_tag!("(300A,03AA)",0x300A03AA,"Ion Wedge Sequence",IonWedgeSequence,SQ,VM::N(1));
define_tag!("(300A,03AC)",0x300A03AC,"Ion Wedge Position Sequence",IonWedgePositionSequence,SQ,VM::N(1));
define_tag!("(300A,0401)",0x300A0401,"Referenced Setup Image Sequence",ReferencedSetupImageSequence,SQ,VM::N(1));
define_tag!("(300A,0402)",0x300A0402,"Setup Image Comment",SetupImageComment,ST,VM::N(1));
define_tag!("(300A,0410)",0x300A0410,"Motion Synchronization Sequence",MotionSynchronizationSequence,SQ,VM::N(1));
define_tag!("(300A,0412)",0x300A0412,"Control Point Orientation",ControlPointOrientation,FL,VM::N(3));
define_tag!("(300A,0420)",0x300A0420,"General Accessory Sequence",GeneralAccessorySequence,SQ,VM::N(1));
define_tag!("(300A,0421)",0x300A0421,"General Accessory ID",GeneralAccessoryID,SH,VM::N(1));
define_tag!("(300A,0422)",0x300A0422,"General Accessory Description",GeneralAccessoryDescription,ST,VM::N(1));
define_tag!("(300A,0423)",0x300A0423,"General Accessory Type",GeneralAccessoryType,CS,VM::N(1));
define_tag!("(300A,0424)",0x300A0424,"General Accessory Number",GeneralAccessoryNumber,IS,VM::N(1));
define_tag!("(300A,0425)",0x300A0425,"Source to General Accessory Distance",SourceToGeneralAccessoryDistance,FL,VM::N(1));
define_tag!("(300A,0431)",0x300A0431,"Applicator Geometry Sequence",ApplicatorGeometrySequence,SQ,VM::N(1));
define_tag!("(300A,0432)",0x300A0432,"Applicator Aperture Shape",ApplicatorApertureShape,CS,VM::N(1));
define_tag!("(300A,0433)",0x300A0433,"Applicator Opening",ApplicatorOpening,FL,VM::N(1));
define_tag!("(300A,0434)",0x300A0434,"Applicator Opening X",ApplicatorOpeningX,FL,VM::N(1));
define_tag!("(300A,0435)",0x300A0435,"Applicator Opening Y",ApplicatorOpeningY,FL,VM::N(1));
define_tag!("(300A,0436)",0x300A0436,"Source to Applicator Mounting Position Distance",SourceToApplicatorMountingPositionDistance,FL,VM::N(1));
define_tag!("(300A,0440)",0x300A0440,"Number of Block Slab Items",NumberOfBlockSlabItems,IS,VM::N(1));
define_tag!("(300A,0441)",0x300A0441,"Block Slab Sequence",BlockSlabSequence,SQ,VM::N(1));
define_tag!("(300A,0442)",0x300A0442,"Block Slab Thickness",BlockSlabThickness,DS,VM::N(1));
define_tag!("(300A,0443)",0x300A0443,"Block Slab Number",BlockSlabNumber,US,VM::N(1));
define_tag!("(300A,0450)",0x300A0450,"Device Motion Control Sequence",DeviceMotionControlSequence,SQ,VM::N(1));
define_tag!("(300A,0451)",0x300A0451,"Device Motion Execution Mode",DeviceMotionExecutionMode,CS,VM::N(1));
define_tag!("(300A,0452)",0x300A0452,"Device Motion Observation Mode",DeviceMotionObservationMode,CS,VM::N(1));
define_tag!("(300A,0453)",0x300A0453,"Device Motion Parameter Code Sequence",DeviceMotionParameterCodeSequence,SQ,VM::N(1));
define_tag!("(300A,0501)",0x300A0501,"Distal Depth Fraction",DistalDepthFraction,FL,VM::N(1));
define_tag!("(300A,0502)",0x300A0502,"Distal Depth",DistalDepth,FL,VM::N(1));
define_tag!("(300A,0503)",0x300A0503,"Nominal Range Modulation Fractions",NominalRangeModulationFractions,FL,VM::N(2));
define_tag!("(300A,0504)",0x300A0504,"Nominal Range Modulated Region Depths",NominalRangeModulatedRegionDepths,FL,VM::N(2));
define_tag!("(300A,0505)",0x300A0505,"Depth Dose Parameters Sequence",DepthDoseParametersSequence,SQ,VM::N(1));
define_tag!("(300A,0506)",0x300A0506,"Delivered Depth Dose Parameters Sequence",DeliveredDepthDoseParametersSequence,SQ,VM::N(1));
define_tag!("(300A,0507)",0x300A0507,"Delivered Distal Depth Fraction",DeliveredDistalDepthFraction,FL,VM::N(1));
define_tag!("(300A,0508)",0x300A0508,"Delivered Distal Depth",DeliveredDistalDepth,FL,VM::N(1));
define_tag!("(300A,0509)",0x300A0509,"Delivered Nominal Range Modulation Fractions",DeliveredNominalRangeModulationFractions,FL,VM::N(2));
define_tag!("(300A,0510)",0x300A0510,"Delivered Nominal Range Modulated Region Depths",DeliveredNominalRangeModulatedRegionDepths,FL,VM::N(2));
define_tag!("(300A,0511)",0x300A0511,"Delivered Reference Dose Definition",DeliveredReferenceDoseDefinition,CS,VM::N(1));
define_tag!("(300A,0512)",0x300A0512,"Reference Dose Definition",ReferenceDoseDefinition,CS,VM::N(1));
define_tag!("(300C,0002)",0x300C0002,"Referenced RT Plan Sequence",ReferencedRTPlanSequence,SQ,VM::N(1));
define_tag!("(300C,0004)",0x300C0004,"Referenced Beam Sequence",ReferencedBeamSequence,SQ,VM::N(1));
define_tag!("(300C,0006)",0x300C0006,"Referenced Beam Number",ReferencedBeamNumber,IS,VM::N(1));
define_tag!("(300C,0007)",0x300C0007,"Referenced Reference Image Number",ReferencedReferenceImageNumber,IS,VM::N(1));
define_tag!("(300C,0008)",0x300C0008,"Start Cumulative Meterset Weight",StartCumulativeMetersetWeight,DS,VM::N(1));
define_tag!("(300C,0009)",0x300C0009,"End Cumulative Meterset Weight",EndCumulativeMetersetWeight,DS,VM::N(1));
define_tag!("(300C,000A)",0x300C000A,"Referenced Brachy Application Setup Sequence",ReferencedBrachyApplicationSetupSequence,SQ,VM::N(1));
define_tag!("(300C,000C)",0x300C000C,"Referenced Brachy Application Setup Number",ReferencedBrachyApplicationSetupNumber,IS,VM::N(1));
define_tag!("(300C,000E)",0x300C000E,"Referenced Source Number",ReferencedSourceNumber,IS,VM::N(1));
define_tag!("(300C,0020)",0x300C0020,"Referenced Fraction Group Sequence",ReferencedFractionGroupSequence,SQ,VM::N(1));
define_tag!("(300C,0022)",0x300C0022,"Referenced Fraction Group Number",ReferencedFractionGroupNumber,IS,VM::N(1));
define_tag!("(300C,0040)",0x300C0040,"Referenced Verification Image Sequence",ReferencedVerificationImageSequence,SQ,VM::N(1));
define_tag!("(300C,0042)",0x300C0042,"Referenced Reference Image Sequence",ReferencedReferenceImageSequence,SQ,VM::N(1));
define_tag!("(300C,0050)",0x300C0050,"Referenced Dose Reference Sequence",ReferencedDoseReferenceSequence,SQ,VM::N(1));
define_tag!("(300C,0051)",0x300C0051,"Referenced Dose Reference Number",ReferencedDoseReferenceNumber,IS,VM::N(1));
define_tag!("(300C,0055)",0x300C0055,"Brachy Referenced Dose Reference Sequence",BrachyReferencedDoseReferenceSequence,SQ,VM::N(1));
define_tag!("(300C,0060)",0x300C0060,"Referenced Structure Set Sequence",ReferencedStructureSetSequence,SQ,VM::N(1));
define_tag!("(300C,006A)",0x300C006A,"Referenced Patient Setup Number",ReferencedPatientSetupNumber,IS,VM::N(1));
define_tag!("(300C,0080)",0x300C0080,"Referenced Dose Sequence",ReferencedDoseSequence,SQ,VM::N(1));
define_tag!("(300C,00A0)",0x300C00A0,"Referenced Tolerance Table Number",ReferencedToleranceTableNumber,IS,VM::N(1));
define_tag!("(300C,00B0)",0x300C00B0,"Referenced Bolus Sequence",ReferencedBolusSequence,SQ,VM::N(1));
define_tag!("(300C,00C0)",0x300C00C0,"Referenced Wedge Number",ReferencedWedgeNumber,IS,VM::N(1));
define_tag!("(300C,00D0)",0x300C00D0,"Referenced Compensator Number",ReferencedCompensatorNumber,IS,VM::N(1));
define_tag!("(300C,00E0)",0x300C00E0,"Referenced Block Number",ReferencedBlockNumber,IS,VM::N(1));
define_tag!("(300C,00F0)",0x300C00F0,"Referenced Control Point Index",ReferencedControlPointIndex,IS,VM::N(1));
define_tag!("(300C,00F2)",0x300C00F2,"Referenced Control Point Sequence",ReferencedControlPointSequence,SQ,VM::N(1));
define_tag!("(300C,00F4)",0x300C00F4,"Referenced Start Control Point Index",ReferencedStartControlPointIndex,IS,VM::N(1));
define_tag!("(300C,00F6)",0x300C00F6,"Referenced Stop Control Point Index",ReferencedStopControlPointIndex,IS,VM::N(1));
define_tag!("(300C,0100)",0x300C0100,"Referenced Range Shifter Number",ReferencedRangeShifterNumber,IS,VM::N(1));
define_tag!("(300C,0102)",0x300C0102,"Referenced Lateral Spreading Device Number",ReferencedLateralSpreadingDeviceNumber,IS,VM::N(1));
define_tag!("(300C,0104)",0x300C0104,"Referenced Range Modulator Number",ReferencedRangeModulatorNumber,IS,VM::N(1));
define_tag!("(300C,0111)",0x300C0111,"Omitted Beam Task Sequence",OmittedBeamTaskSequence,SQ,VM::N(1));
define_tag!("(300C,0112)",0x300C0112,"Reason for Omission",ReasonForOmission,CS,VM::N(1));
define_tag!("(300C,0113)",0x300C0113,"Reason for Omission Description",ReasonForOmissionDescription,LO,VM::N(1));
define_tag!("(300E,0002)",0x300E0002,"Approval Status",ApprovalStatus,CS,VM::N(1));
define_tag!("(300E,0004)",0x300E0004,"Review Date",ReviewDate,DA,VM::N(1));
define_tag!("(300E,0005)",0x300E0005,"Review Time",ReviewTime,TM,VM::N(1));
define_tag!("(300E,0008)",0x300E0008,"Reviewer Name",ReviewerName,PN,VM::N(1));
define_tag!("(4000,0010)",0x40000010,"Arbitrary",Arbitrary,LT,VM::N(1));
define_tag!("(4000,4000)",0x40004000,"Text Comments",TextComments,LT,VM::N(1));
define_tag!("(4008,0040)",0x40080040,"Results ID",ResultsID,SH,VM::N(1));
define_tag!("(4008,0042)",0x40080042,"Results ID Issuer",ResultsIDIssuer,LO,VM::N(1));
define_tag!("(4008,0050)",0x40080050,"Referenced Interpretation Sequence",ReferencedInterpretationSequence,SQ,VM::N(1));
define_tag!("(4008,00FF)",0x400800FF,"Report Production Status (Trial)",ReportProductionStatusTrial,CS,VM::N(1));
define_tag!("(4008,0100)",0x40080100,"Interpretation Recorded Date",InterpretationRecordedDate,DA,VM::N(1));
define_tag!("(4008,0101)",0x40080101,"Interpretation Recorded Time",InterpretationRecordedTime,TM,VM::N(1));
define_tag!("(4008,0102)",0x40080102,"Interpretation Recorder",InterpretationRecorder,PN,VM::N(1));
define_tag!("(4008,0103)",0x40080103,"Reference to Recorded Sound",ReferenceToRecordedSound,LO,VM::N(1));
define_tag!("(4008,0108)",0x40080108,"Interpretation Transcription Date",InterpretationTranscriptionDate,DA,VM::N(1));
define_tag!("(4008,0109)",0x40080109,"Interpretation Transcription Time",InterpretationTranscriptionTime,TM,VM::N(1));
define_tag!("(4008,010A)",0x4008010A,"Interpretation Transcriber",InterpretationTranscriber,PN,VM::N(1));
define_tag!("(4008,010B)",0x4008010B,"Interpretation Text",InterpretationText,ST,VM::N(1));
define_tag!("(4008,010C)",0x4008010C,"Interpretation Author",InterpretationAuthor,PN,VM::N(1));
define_tag!("(4008,0111)",0x40080111,"Interpretation Approver Sequence",InterpretationApproverSequence,SQ,VM::N(1));
define_tag!("(4008,0112)",0x40080112,"Interpretation Approval Date",InterpretationApprovalDate,DA,VM::N(1));
define_tag!("(4008,0113)",0x40080113,"Interpretation Approval Time",InterpretationApprovalTime,TM,VM::N(1));
define_tag!("(4008,0114)",0x40080114,"Physician Approving Interpretation",PhysicianApprovingInterpretation,PN,VM::N(1));
define_tag!("(4008,0115)",0x40080115,"Interpretation Diagnosis Description",InterpretationDiagnosisDescription,LT,VM::N(1));
define_tag!("(4008,0117)",0x40080117,"Interpretation Diagnosis Code Sequence",InterpretationDiagnosisCodeSequence,SQ,VM::N(1));
define_tag!("(4008,0118)",0x40080118,"Results Distribution List Sequence",ResultsDistributionListSequence,SQ,VM::N(1));
define_tag!("(4008,0119)",0x40080119,"Distribution Name",DistributionName,PN,VM::N(1));
define_tag!("(4008,011A)",0x4008011A,"Distribution Address",DistributionAddress,LO,VM::N(1));
define_tag!("(4008,0200)",0x40080200,"Interpretation ID",InterpretationID,SH,VM::N(1));
define_tag!("(4008,0202)",0x40080202,"Interpretation ID Issuer",InterpretationIDIssuer,LO,VM::N(1));
define_tag!("(4008,0210)",0x40080210,"Interpretation Type ID",InterpretationTypeID,CS,VM::N(1));
define_tag!("(4008,0212)",0x40080212,"Interpretation Status ID",InterpretationStatusID,CS,VM::N(1));
define_tag!("(4008,0300)",0x40080300,"Impressions",Impressions,ST,VM::N(1));
define_tag!("(4008,4000)",0x40084000,"Results Comments",ResultsComments,ST,VM::N(1));
define_tag!("(4010,0001)",0x40100001,"Low Energy Detectors",LowEnergyDetectors,CS,VM::N(1));
define_tag!("(4010,0002)",0x40100002,"High Energy Detectors",HighEnergyDetectors,CS,VM::N(1));
define_tag!("(4010,0004)",0x40100004,"Detector Geometry Sequence",DetectorGeometrySequence,SQ,VM::N(1));
define_tag!("(4010,1001)",0x40101001,"Threat ROI Voxel Sequence",ThreatROIVoxelSequence,SQ,VM::N(1));
define_tag!("(4010,1004)",0x40101004,"Threat ROI Base",ThreatROIBase,FL,VM::N(3));
define_tag!("(4010,1005)",0x40101005,"Threat ROI Extents",ThreatROIExtents,FL,VM::N(3));
define_tag!("(4010,1006)",0x40101006,"Threat ROI Bitmap",ThreatROIBitmap,OB,VM::N(1));
define_tag!("(4010,1007)",0x40101007,"Route Segment ID",RouteSegmentID,SH,VM::N(1));
define_tag!("(4010,1008)",0x40101008,"Gantry Type",GantryType,CS,VM::N(1));
define_tag!("(4010,1009)",0x40101009,"OOI Owner Type",OOIOwnerType,CS,VM::N(1));
define_tag!("(4010,100A)",0x4010100A,"Route Segment Sequence",RouteSegmentSequence,SQ,VM::N(1));
define_tag!("(4010,1010)",0x40101010,"Potential Threat Object ID",PotentialThreatObjectID,US,VM::N(1));
define_tag!("(4010,1011)",0x40101011,"Threat Sequence",ThreatSequence,SQ,VM::N(1));
define_tag!("(4010,1012)",0x40101012,"Threat Category",ThreatCategory,CS,VM::N(1));
define_tag!("(4010,1013)",0x40101013,"Threat Category Description",ThreatCategoryDescription,LT,VM::N(1));
define_tag!("(4010,1014)",0x40101014,"ATD Ability Assessment",ATDAbilityAssessment,CS,VM::N(1));
define_tag!("(4010,1015)",0x40101015,"ATD Assessment Flag",ATDAssessmentFlag,CS,VM::N(1));
define_tag!("(4010,1016)",0x40101016,"ATD Assessment Probability",ATDAssessmentProbability,FL,VM::N(1));
define_tag!("(4010,1017)",0x40101017,"Mass",Mass,FL,VM::N(1));
define_tag!("(4010,1018)",0x40101018,"Density",Density,FL,VM::N(1));
define_tag!("(4010,1019)",0x40101019,"Z Effective",ZEffective,FL,VM::N(1));
define_tag!("(4010,101A)",0x4010101A,"Boarding Pass ID",BoardingPassID,SH,VM::N(1));
define_tag!("(4010,101B)",0x4010101B,"Center of Mass",CenterOfMass,FL,VM::N(3));
define_tag!("(4010,101C)",0x4010101C,"Center of PTO",CenterOfPTO,FL,VM::N(3));
define_tag!("(4010,101D)",0x4010101D,"Bounding Polygon",BoundingPolygon,FL,VM::NOrMore(6));
define_tag!("(4010,101E)",0x4010101E,"Route Segment Start Location ID",RouteSegmentStartLocationID,SH,VM::N(1));
define_tag!("(4010,101F)",0x4010101F,"Route Segment End Location ID",RouteSegmentEndLocationID,SH,VM::N(1));
define_tag!("(4010,1020)",0x40101020,"Route Segment Location ID Type",RouteSegmentLocationIDType,CS,VM::N(1));
define_tag!("(4010,1021)",0x40101021,"Abort Reason",AbortReason,CS,VM::NOrMore(1));
define_tag!("(4010,1023)",0x40101023,"Volume of PTO",VolumeOfPTO,FL,VM::N(1));
define_tag!("(4010,1024)",0x40101024,"Abort Flag",AbortFlag,CS,VM::N(1));
define_tag!("(4010,1025)",0x40101025,"Route Segment Start Time",RouteSegmentStartTime,DT,VM::N(1));
define_tag!("(4010,1026)",0x40101026,"Route Segment End Time",RouteSegmentEndTime,DT,VM::N(1));
define_tag!("(4010,1027)",0x40101027,"TDR Type",TDRType,CS,VM::N(1));
define_tag!("(4010,1028)",0x40101028,"International Route Segment",InternationalRouteSegment,CS,VM::N(1));
define_tag!("(4010,1029)",0x40101029,"Threat Detection Algorithm and Version",ThreatDetectionAlgorithmandVersion,LO,VM::NOrMore(1));
define_tag!("(4010,102A)",0x4010102A,"Assigned Location",AssignedLocation,SH,VM::N(1));
define_tag!("(4010,102B)",0x4010102B,"Alarm Decision Time",AlarmDecisionTime,DT,VM::N(1));
define_tag!("(4010,1031)",0x40101031,"Alarm Decision",AlarmDecision,CS,VM::N(1));
define_tag!("(4010,1033)",0x40101033,"Number of Total Objects",NumberOfTotalObjects,US,VM::N(1));
define_tag!("(4010,1034)",0x40101034,"Number of Alarm Objects",NumberOfAlarmObjects,US,VM::N(1));
define_tag!("(4010,1037)",0x40101037,"PTO Representation Sequence",PTORepresentationSequence,SQ,VM::N(1));
define_tag!("(4010,1038)",0x40101038,"ATD Assessment Sequence",ATDAssessmentSequence,SQ,VM::N(1));
define_tag!("(4010,1039)",0x40101039,"TIP Type",TIPType,CS,VM::N(1));
define_tag!("(4010,103A)",0x4010103A,"DICOS Version",DICOSVersion,CS,VM::N(1));
define_tag!("(4010,1041)",0x40101041,"OOI Owner Creation Time",OOIOwnerCreationTime,DT,VM::N(1));
define_tag!("(4010,1042)",0x40101042,"OOI Type",OOIType,CS,VM::N(1));
define_tag!("(4010,1043)",0x40101043,"OOI Size",OOISize,FL,VM::N(3));
define_tag!("(4010,1044)",0x40101044,"Acquisition Status",AcquisitionStatus,CS,VM::N(1));
define_tag!("(4010,1045)",0x40101045,"Basis Materials Code Sequence",BasisMaterialsCodeSequence,SQ,VM::N(1));
define_tag!("(4010,1046)",0x40101046,"Phantom Type",PhantomType,CS,VM::N(1));
define_tag!("(4010,1047)",0x40101047,"OOI Owner Sequence",OOIOwnerSequence,SQ,VM::N(1));
define_tag!("(4010,1048)",0x40101048,"Scan Type",ScanType,CS,VM::N(1));
define_tag!("(4010,1051)",0x40101051,"Itinerary ID",ItineraryID,LO,VM::N(1));
define_tag!("(4010,1052)",0x40101052,"Itinerary ID Type",ItineraryIDType,SH,VM::N(1));
define_tag!("(4010,1053)",0x40101053,"Itinerary ID Assigning Authority",ItineraryIDAssigningAuthority,LO,VM::N(1));
define_tag!("(4010,1054)",0x40101054,"Route ID",RouteID,SH,VM::N(1));
define_tag!("(4010,1055)",0x40101055,"Route ID Assigning Authority",RouteIDAssigningAuthority,SH,VM::N(1));
define_tag!("(4010,1056)",0x40101056,"Inbound Arrival Type",InboundArrivalType,CS,VM::N(1));
define_tag!("(4010,1058)",0x40101058,"Carrier ID",CarrierID,SH,VM::N(1));
define_tag!("(4010,1059)",0x40101059,"Carrier ID Assigning Authority",CarrierIDAssigningAuthority,CS,VM::N(1));
define_tag!("(4010,1060)",0x40101060,"Source Orientation",SourceOrientation,FL,VM::N(3));
define_tag!("(4010,1061)",0x40101061,"Source Position",SourcePosition,FL,VM::N(3));
define_tag!("(4010,1062)",0x40101062,"Belt Height",BeltHeight,FL,VM::N(1));
define_tag!("(4010,1064)",0x40101064,"Algorithm Routing Code Sequence",AlgorithmRoutingCodeSequence,SQ,VM::N(1));
define_tag!("(4010,1067)",0x40101067,"Transport Classification",TransportClassification,CS,VM::N(1));
define_tag!("(4010,1068)",0x40101068,"OOI Type Descriptor",OOITypeDescriptor,LT,VM::N(1));
define_tag!("(4010,1069)",0x40101069,"Total Processing Time",TotalProcessingTime,FL,VM::N(1));
define_tag!("(4010,106C)",0x4010106C,"Detector Calibration Data",DetectorCalibrationData,OB,VM::N(1));
define_tag!("(4010,106D)",0x4010106D,"Additional Screening Performed",AdditionalScreeningPerformed,CS,VM::N(1));
define_tag!("(4010,106E)",0x4010106E,"Additional Inspection Selection Criteria",AdditionalInspectionSelectionCriteria,CS,VM::N(1));
define_tag!("(4010,106F)",0x4010106F,"Additional Inspection Method Sequence",AdditionalInspectionMethodSequence,SQ,VM::N(1));
define_tag!("(4010,1070)",0x40101070,"AIT Device Type",AITDeviceType,CS,VM::N(1));
define_tag!("(4010,1071)",0x40101071,"QR Measurements Sequence",QRMeasurementsSequence,SQ,VM::N(1));
define_tag!("(4010,1072)",0x40101072,"Target Material Sequence",TargetMaterialSequence,SQ,VM::N(1));
define_tag!("(4010,1073)",0x40101073,"SNR Threshold",SNRThreshold,FD,VM::N(1));
define_tag!("(4010,1075)",0x40101075,"Image Scale Representation",ImageScaleRepresentation,DS,VM::N(1));
define_tag!("(4010,1076)",0x40101076,"Referenced PTO Sequence",ReferencedPTOSequence,SQ,VM::N(1));
define_tag!("(4010,1077)",0x40101077,"Referenced TDR Instance Sequence",ReferencedTDRInstanceSequence,SQ,VM::N(1));
define_tag!("(4010,1078)",0x40101078,"PTO Location Description",PTOLocationDescription,ST,VM::N(1));
define_tag!("(4010,1079)",0x40101079,"Anomaly Locator Indicator Sequence",AnomalyLocatorIndicatorSequence,SQ,VM::N(1));
define_tag!("(4010,107A)",0x4010107A,"Anomaly Locator Indicator",AnomalyLocatorIndicator,FL,VM::N(3));
define_tag!("(4010,107B)",0x4010107B,"PTO Region Sequence",PTORegionSequence,SQ,VM::N(1));
define_tag!("(4010,107C)",0x4010107C,"Inspection Selection Criteria",InspectionSelectionCriteria,CS,VM::N(1));
define_tag!("(4010,107D)",0x4010107D,"Secondary Inspection Method Sequence",SecondaryInspectionMethodSequence,SQ,VM::N(1));
define_tag!("(4010,107E)",0x4010107E,"PRCS to RCS Orientation",PRCSToRCSOrientation,DS,VM::N(6));
define_tag!("(4FFE,0001)",0x4FFE0001,"MAC Parameters Sequence",MACParametersSequence,SQ,VM::N(1));
define_tag!("(5200,9229)",0x52009229,"Shared Functional Groups Sequence",SharedFunctionalGroupsSequence,SQ,VM::N(1));
define_tag!("(5200,9230)",0x52009230,"Per-frame Functional Groups Sequence",PerFrameFunctionalGroupsSequence,SQ,VM::N(1));
define_tag!("(5400,0100)",0x54000100,"Waveform Sequence",WaveformSequence,SQ,VM::N(1));
define_tag!("(5400,0110)",0x54000110,"Channel Minimum Value",ChannelMinimumValue,Option::None,VM::N(1));
define_tag!("(5400,0112)",0x54000112,"Channel Maximum Value",ChannelMaximumValue,Option::None,VM::N(1));
define_tag!("(5400,1004)",0x54001004,"Waveform Bits Allocated",WaveformBitsAllocated,US,VM::N(1));
define_tag!("(5400,1006)",0x54001006,"Waveform Sample Interpretation",WaveformSampleInterpretation,CS,VM::N(1));
define_tag!("(5400,100A)",0x5400100A,"Waveform Padding Value",WaveformPaddingValue,Option::None,VM::N(1));
define_tag!("(5400,1010)",0x54001010,"Waveform Data",WaveformData,Option::None,VM::N(1));
define_tag!("(5600,0010)",0x56000010,"First Order Phase Correction Angle",FirstOrderPhaseCorrectionAngle,OF,VM::N(1));
define_tag!("(5600,0020)",0x56000020,"Spectroscopy Data",SpectroscopyData,OF,VM::N(1));
define_tag!("(7FE0,0008)",0x7FE00008,"Float Pixel Data",FloatPixelData,OF,VM::N(1));
define_tag!("(7FE0,0009)",0x7FE00009,"Double Float Pixel Data",DoubleFloatPixelData,OD,VM::N(1));
define_tag!("(7FE0,0010)",0x7FE00010,"Pixel Data",PixelData,Option::None,VM::N(1));
define_tag!("(7FE0,0020)",0x7FE00020,"Coefficients SDVN",CoefficientsSDVN,OW,VM::N(1));
define_tag!("(7FE0,0030)",0x7FE00030,"Coefficients SDHN",CoefficientsSDHN,OW,VM::N(1));
define_tag!("(7FE0,0040)",0x7FE00040,"Coefficients SDDN",CoefficientsSDDN,OW,VM::N(1));
define_tag!("(FFFA,FFFA)",0xFFFAFFFA,"Digital Signatures Sequence",DigitalSignaturesSequence,SQ,VM::N(1));
define_tag!("(FFFC,FFFC)",0xFFFCFFFC,"Data Set Trailing Padding",DataSetTrailingPadding,OB,VM::N(1));
define_tag!("(FFFE,E000)",0xFFFEE000,"Item",Item,Option::None,VM::N(1));
define_tag!("(FFFE,E00D)",0xFFFEE00D,"Item Delimitation Item",ItemDelimitationItem,Option::None,VM::N(1));
define_tag!("(FFFE,E0DD)",0xFFFEE0DD,"Sequence Delimitation Item",SequenceDelimitationItem,Option::None,VM::N(1));
